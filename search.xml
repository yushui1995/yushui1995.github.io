<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>shell面试题</title>
      <link href="/2022/05/12/shell-mian-shi-ti/"/>
      <url>/2022/05/12/shell-mian-shi-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="shel面试题"><a href="#shel面试题" class="headerlink" title="shel面试题"></a>shel面试题</h1><p>持续记录一些面试题</p><h1 id="1、变量"><a href="#1、变量" class="headerlink" title="1、变量"></a>1、变量</h1><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205122044884.png"></p><p>选择C</p><blockquote><p>单引号不识别特殊变量</p></blockquote><blockquote><p>双引号识别特殊变量</p></blockquote><blockquote><p>sh bash会开启子shell 不保留当前shell变量</p></blockquote><blockquote><p>source 或者./  是在当前shell环境加载脚本 保留shell变量</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">利用pstree查看shell的父进程和子进程yum <span class="token operator">-</span>y install psmisc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="2、特殊变量"><a href="#2、特殊变量" class="headerlink" title="2、特殊变量"></a>2、特殊变量</h1><blockquote><p>$# 表示传递给函数或脚本的总个数</p></blockquote><blockquote><p>$* 和 $@ 表示传递给函数或脚本的所有参数</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$*</span> 和 <span class="token variable">$@</span> 的区别是什么？<span class="token variable">$*</span>把所有参数当做一个整体<span class="token variable">$@</span>把所有参数当做独立的数据体例子：<span class="token punctuation">[</span>root@mylinux ~<span class="token punctuation">]</span><span class="token comment"># cat a.sh </span><span class="token comment">#! /bin/bash</span><span class="token builtin class-name">echo</span> <span class="token string">"演示 <span class="token entity" title="\\">\\</span>"</span><span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token variable">$*</span><span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token string">" "</span><span class="token keyword">for</span> <span class="token for-or-select variable">var</span> <span class="token keyword">in</span> <span class="token string">"<span class="token variable">$*</span>"</span><span class="token keyword">do</span>    <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$var</span>"</span><span class="token keyword">done</span><span class="token builtin class-name">echo</span> <span class="token string">"演示 <span class="token entity" title="\\">\\</span>"</span><span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token variable">$@</span><span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token string">" "</span><span class="token keyword">for</span> <span class="token for-or-select variable">var</span> <span class="token keyword">in</span> <span class="token string">"<span class="token variable">$@</span>"</span><span class="token keyword">do</span>    <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$var</span>"</span><span class="token keyword">done</span><span class="token punctuation">[</span>root@mylinux ~<span class="token punctuation">]</span><span class="token comment"># bash a.sh  1 2 3 4 5</span>演示 <span class="token string">"<span class="token variable">$*</span>"</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span>演示 <span class="token string">"<span class="token variable">$@</span>"</span> <span class="token number">1</span><span class="token number">2</span><span class="token number">3</span><span class="token number">4</span><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> 题目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运维规范-自用</title>
      <link href="/2022/05/11/yun-wei-gui-fan-zi-yong/"/>
      <url>/2022/05/11/yun-wei-gui-fan-zi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="公司运维管理规范"><a href="#公司运维管理规范" class="headerlink" title="公司运维管理规范"></a>公司运维管理规范</h1><h3 id="1、获取部署资源信息"><a href="#1、获取部署资源信息" class="headerlink" title="1、获取部署资源信息"></a>1、获取部署资源信息</h3><p>1、登录工单系统，先看一下给的资源情况，是否符合部署条件，若有问题即使和项目联系解决，不要盲目进行部署</p><p>2、依次登录服务器，查看服务器状态，有没有无法登录，密码错误等情况及时反馈</p><p>3、修改初始密码</p><p>4、挂载硬盘，修改dns</p><h3 id="2、部署流程"><a href="#2、部署流程" class="headerlink" title="2、部署流程"></a>2、部署流程</h3><p>1、先确定好部署架构再进行部署</p><p>2、服务器初始化（通过脚本）</p><p>3、安装中间件、基础环境（一般采取工单系统的版本）</p><p>4、项目数据库迁移（开发本地测试库迁移至线上数据库）</p><p>5、jenkins构建（根据工单的git进行构建）</p><p>6、修改配置、启动项目（根据日志、端口验证项目状态）</p><p>7、nginx转发（转发后验证地址状态，访问的接口状态）</p><p>8、填写工单内容（填写转发后地址，交由项目进行访问、测试）</p><p>9、至此部署流程结束</p><h3 id="3、自动化"><a href="#3、自动化" class="headerlink" title="3、自动化"></a>3、自动化</h3><p>1、确认客户是否给ssh端口</p><p>有ssh端口：通过jenkins内置ssh将包推送，结合脚本进行自动更新部署（可以结合ansible）</p><p>无ssh端口：通过agent工具通过curl命令，结合脚本进行自动更新部署（可以结合ansible）</p><p>2、自动推送更新</p><p>测试、确认自动更新脚本没有语法错误，没有问题后，结合jenkins完成进行整体更新流程测试</p><h3 id="4、监控"><a href="#4、监控" class="headerlink" title="4、监控"></a>4、监控</h3><p>1、将项目地址进行web监控，微服务架构由开发提供接口地址，对接口地址进行监控</p><p>2、利用zabbix或prometheus对服务器资源进行监控</p><h3 id="5、文档"><a href="#5、文档" class="headerlink" title="5、文档"></a>5、文档</h3><p>1、将部署的详细情况，部署细节记录在公司文档中</p><p>2、整理项目给与的服务器文档和服务器部署文档单独归档至文件服务器，便于以后查找</p><p>3、常州、扬州、盐城大地区在企业微信形成表格</p><h1 id="故障处理规范"><a href="#故障处理规范" class="headerlink" title="故障处理规范"></a>故障处理规范</h1><h3 id="1、基本原则"><a href="#1、基本原则" class="headerlink" title="1、基本原则"></a>1、基本原则</h3><p> 在故障处理过程中采取的所有手段和行动，一切以恢复业务为最高优先级。</p><h3 id="2、流程机制"><a href="#2、流程机制" class="headerlink" title="2、流程机制"></a>2、流程机制</h3><blockquote><p>1、组员根据zabbix或其他途径知道某个业务出现问题，根据地区、业务对应负责的组员进行处理</p><p>2、对于故障进行基本判断，如果问题和恢复过程非常明确，以优先恢复业务优先</p><p>3、若问题无法快速定位，存在难点或影响范围较大，由组长介入协助解决</p><p>4、若问题牵扯较多无法找到故障点，由经理介入协助解决，并通知技术支持部对客户发出公告，直至故障完全解决</p></blockquote><h3 id="3、事后总结"><a href="#3、事后总结" class="headerlink" title="3、事后总结"></a>3、事后总结</h3><p>每次事故，需要在事故记录系统中详细填写故障时间，内容，涉及人员，解决流程，便于查找、总结</p><p>每次故障事后需自我反思：</p><blockquote><p>一：故障原因有哪些？</p><p>二：我们做什么，怎么做才能确保下次不会再出现类似故障？</p><p>三：当时如果我们做了什么，可以用更短的时间恢复业务？</p></blockquote><h1 id="项目更新规范"><a href="#项目更新规范" class="headerlink" title="项目更新规范"></a>项目更新规范</h1><h3 id="1、更新时间"><a href="#1、更新时间" class="headerlink" title="1、更新时间"></a>1、更新时间</h3><blockquote><p>1、5.30下班后：正常项目统一更新时间</p><p>2、12.30后：轻微紧急项目，下午需要实现需求或下午需要演示的项目</p><p>3、需要立即更新：紧急的项目，需要开发经过项目的允许，如线上较大项目需通知技术支持部对客户发出公告，确保项目正常访问（可能存在回滚情况，预留时间要长一些）</p></blockquote><h3 id="2、更新流程"><a href="#2、更新流程" class="headerlink" title="2、更新流程"></a>2、更新流程</h3><blockquote><p>1、首先和开发、项目沟通好更新时间，更新内容，必要时让开发提供项目访问地址便于精确定位</p><p>2、如果开发、项目说的含糊不清可以拒绝更新，弄清楚再更新，避免更新错误问题</p><p>3、若自己不知道更新的项目、服务器地址等信息，由组长介入协助更新，不可盲目更新</p></blockquote><h3 id="3、更新验证"><a href="#3、更新验证" class="headerlink" title="3、更新验证"></a>3、更新验证</h3><blockquote><p>1、查看开发给的包，或者自动构建的包的实际大小和线上包的大小，是否有明显区别</p><p>2、查看包的日期是不是今天的</p><p>3、更新后查看项目访问地址是否可以正常访问</p><p>4、如果页面或接口报错，及时查看后台日志解决报错</p><p>5、自查结束后，告知对应的开发，由开发进行测试</p></blockquote><h1 id="密码使用规范"><a href="#密码使用规范" class="headerlink" title="密码使用规范"></a>密码使用规范</h1><h3 id="1、密码示例"><a href="#1、密码示例" class="headerlink" title="1、密码示例"></a>1、密码示例</h3><p>项目所涉及的密码不可使用弱密码 </p><blockquote><p>使用数字+英文字母+特殊符号，总长度不小于10字符</p><p>错误示例：123456  simple  simple123  </p><p>正确示例：Simple@01!  Simple@2022!   Simple_app@2022!</p></blockquote><h3 id="2、密码修改"><a href="#2、密码修改" class="headerlink" title="2、密码修改"></a>2、密码修改</h3><p>密码如果需修改，必须按照上述规范，开发或者别人要求使用弱密码应当拒绝</p><h1 id="端口使用规范"><a href="#端口使用规范" class="headerlink" title="端口使用规范"></a>端口使用规范</h1><h3 id="1、项目端口"><a href="#1、项目端口" class="headerlink" title="1、项目端口"></a>1、项目端口</h3><blockquote><p>tomcat:</p></blockquote><p>server.xml端口修改规范</p><pre class="line-numbers language-none"><code class="language-none">&lt;Server port="1xxxx" shutdown="SHUTDOWN"&lt;Connector port="xxxx" protocol="HTTP/1.1"&lt;Connector port="2xxxx" protocol="org.apache.coyote.http11.Http11AprProtocol"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>示例：</p><pre class="line-numbers language-none"><code class="language-none">&lt;Server port="18180" shutdown="SHUTDOWN"&lt;Connector port="8180" protocol="HTTP/1.1"&lt;Connector port="28180" protocol="org.apache.coyote.http11.Http11AprProtocol"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>微服务:</p></blockquote><pre class="line-numbers language-none"><code class="language-none">业务使用8开头 8180 8280框架使用7开头 7772 7777<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="Jenkins规范"><a href="#Jenkins规范" class="headerlink" title="Jenkins规范"></a>Jenkins规范</h1><h3 id="1、权限设置"><a href="#1、权限设置" class="headerlink" title="1、权限设置"></a>1、权限设置</h3><p>jenkins指定项目对指定开发人员开放，不得随意将管理员用户密码等信息告知他人，若开发有更新需求可单独配置项目的更新、取消权限</p><h3 id="2、jenkins命名规范"><a href="#2、jenkins命名规范" class="headerlink" title="2、jenkins命名规范"></a>2、jenkins命名规范</h3><blockquote><p>&lt;地区 + 项目名称 - 备注信息&gt; 已便于其他人员快速定位对应的项目</p><p>示例：</p><p>常州xxx-线上docker版</p><p>常州xxx-mysql测试版</p></blockquote><h3 id="3、jenkins描述"><a href="#3、jenkins描述" class="headerlink" title="3、jenkins描述"></a>3、jenkins描述</h3><p> 需要写，项目未转发的访问地址，和转发后的访问地址，还有是否自动部署的标注</p><blockquote><p>示例：</p></blockquote><pre class="line-numbers language-none"><code class="language-none">自动部署http://192.168.206.133:8280/zhbg/login.shtml   转发前https://zhzl.api.czssq.net/zhbg/login.shtml    转发后<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="4、项目、脚本存放路径"><a href="#4、项目、脚本存放路径" class="headerlink" title="4、项目、脚本存放路径"></a>4、项目、脚本存放路径</h3><p>目录使用大写，若docker部署使用_DOCKER后缀，以便运维人员进行区分</p><blockquote><p>/home/dpan/simplesoft/apps/XXX</p><p>示例：</p><p>tomcat部署：</p><p>/home/dpan/simplesoft/apps/SHFL_CZ</p><p>docker部署：</p><p>/home/dpan/simplesoft/apps/SHFL_CZ_DOCKER</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自用 </tag>
            
            <tag> 规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>firewalld备忘</title>
      <link href="/2022/05/10/firewalld-bei-wang/"/>
      <url>/2022/05/10/firewalld-bei-wang/</url>
      
        <content type="html"><![CDATA[<p><strong>CentOS7 中使用 firewall-cmd 配置只允许指定ip访问本机的指定端口</strong></p><p>1、启用firewalld</p><pre class="line-numbers language-none"><code class="language-none">systemctl enable firewalld systemctl start firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>2、更改防火墙默认区域为trusted，默认放行所有连接请求（默认为public区）</p><pre class="line-numbers language-none"><code class="language-none">firewall-cmd --set-default-zone=trusted<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、新建一个zone，将想要访问本机80端口的ip，如：192.168.10.134 ，添加的这个zone中，同时在这个zone中放行80端口。</p><pre class="line-numbers language-none"><code class="language-none">firewall-cmd --permanent --new-zone=newzonefirewall-cmd --permanent --zone=newzone --add-source=192.168.10.134firewall-cmd --permanent --zone=newzone --add-port=80/tcp#可在newzone中添加多个放行的端口ip 添加多条#删除对应策略将（--add-source、--add-rich-rule）更改为（--remove-source、--remove-rich-rule） --permanent设为永久策略 --zone设定指定zone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4、除192.168.10.134这个ip以外的地址访问本机时会使用当前默认的trusted这个zone里的规则，即禁止访问本机的80端口。</p><pre class="line-numbers language-none"><code class="language-none">#新增firewall-cmd --permanent --zone=trusted --add-rich-rule="rule family="ipv4" port protocol="tcp" port="80" drop"#移除firewall-cmd --permanent --zone=trusted --remove-rich-rule="rule family="ipv4" port protocol="tcp" port="27000" drop"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启防火墙</p><pre class="line-numbers language-none"><code class="language-none">systemctl restart firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看配置是否生效：</p><pre class="line-numbers language-none"><code class="language-none">firewall-cmd --list-all-zone<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>重新载入</p><pre class="line-numbers language-none"><code class="language-none">firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> firewalld </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis问题汇总</title>
      <link href="/2022/05/09/redis-wen-ti-hui-zong/"/>
      <url>/2022/05/09/redis-wen-ti-hui-zong/</url>
      
        <content type="html"><![CDATA[<h1 id="启动警告合集"><a href="#启动警告合集" class="headerlink" title="启动警告合集"></a>启动警告合集</h1><h2 id="1、WARNING-The-TCP-backlog-setting-of-511-cannot-be-enforced-because-proc-sys-net-core-somaxconn-is-set-to-the-lower-value-of-128"><a href="#1、WARNING-The-TCP-backlog-setting-of-511-cannot-be-enforced-because-proc-sys-net-core-somaxconn-is-set-to-the-lower-value-of-128" class="headerlink" title="1、WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128."></a>1、WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</h2><h3 id="TCP积压值过小问题"><a href="#TCP积压值过小问题" class="headerlink" title="TCP积压值过小问题"></a>TCP积压值过小问题</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"net.core.somaxconn = 1024"</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.confsysctl -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2、WARNING-overcommit-memory-is-set-to-0-Background-save-may-fail-under-low-memory-condition-To-fix-this-issue-add-‘vm-overcommit-memory-1’-to-etc-sysctl-conf-and-then-reboot-or-run-the-command-‘sysctl-vm-overcommit-memory-1’-for-this-to-take-effect"><a href="#2、WARNING-overcommit-memory-is-set-to-0-Background-save-may-fail-under-low-memory-condition-To-fix-this-issue-add-‘vm-overcommit-memory-1’-to-etc-sysctl-conf-and-then-reboot-or-run-the-command-‘sysctl-vm-overcommit-memory-1’-for-this-to-take-effect" class="headerlink" title="2、WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add ‘vm.overcommit_memory = 1’ to /etc/sysctl.conf and then reboot or run the command ‘sysctl vm.overcommit_memory=1’ for this to take effect."></a>2、WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add ‘vm.overcommit_memory = 1’ to /etc/sysctl.conf and then reboot or run the command ‘sysctl vm.overcommit_memory=1’ for this to take effect.</h3><h3 id="解决内存方面问题"><a href="#解决内存方面问题" class="headerlink" title="解决内存方面问题"></a>解决内存方面问题</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"vm.overcommit_memory = 1"</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.confsysctl -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3、WARNING-you-have-Transparent-Huge-Pages-THP-support-enabled-in-your-kernel-This-will-create-latency-and-memory-usage-issues-with-Redis-To-fix-this-issue-run-the-command-‘echo-never-gt-sys-kernel-mm-transparent-hugepage-enabled’-as-root-and-add-it-to-your-etc-rc-local-in-order-to-retain-the-setting-after-a-reboot-Redis-must-be-restarted-after-THP-is-disabled"><a href="#3、WARNING-you-have-Transparent-Huge-Pages-THP-support-enabled-in-your-kernel-This-will-create-latency-and-memory-usage-issues-with-Redis-To-fix-this-issue-run-the-command-‘echo-never-gt-sys-kernel-mm-transparent-hugepage-enabled’-as-root-and-add-it-to-your-etc-rc-local-in-order-to-retain-the-setting-after-a-reboot-Redis-must-be-restarted-after-THP-is-disabled" class="headerlink" title="3、WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command ‘echo never > /sys/kernel/mm/transparent_hugepage/enabled’ as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled."></a>3、WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command ‘echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled’ as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">'echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled'</span> <span class="token operator">&gt;&gt;</span> /etc/rc.local<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>内核中启用了透明的大页面THP,reboot重启后生效</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> 报错&amp;警告 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github一些技巧</title>
      <link href="/2022/05/08/github-yi-xie-ji-qiao/"/>
      <url>/2022/05/08/github-yi-xie-ji-qiao/</url>
      
        <content type="html"><![CDATA[<h2 id="代码跳转："><a href="#代码跳转：" class="headerlink" title="代码跳转："></a>代码跳转：</h2><ol><li>下载到本地</li><li>在线vscode：仓库详情界面按下<code>"。"</code>键，</li></ol><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205082057461.png"></p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205082057192.png"></p><h2 id="在线运行项目"><a href="#在线运行项目" class="headerlink" title="在线运行项目"></a>在线运行项目</h2><p>在项目地址前加上<code>gitpod.io/#/</code>前缀</p><p>内置环境，python go npm docker等等</p><p><a href="https://github.com/nginx/nginx">https://github.com/nginx/nginx</a> —&gt; <a href="https://gitpod.io/#/github.com/nginx/nginx">https://gitpod.io/#/github.com/nginx/nginx</a></p><p>登陆：</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205082107688.png"></p><p>运行：</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205082107997.png"></p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql 主从/双主同步</title>
      <link href="/2022/05/07/mysql-zhu-cong-shuang-zhu-tong-bu/"/>
      <url>/2022/05/07/mysql-zhu-cong-shuang-zhu-tong-bu/</url>
      
        <content type="html"><![CDATA[<h1 id="Mysql-主从-双主同步"><a href="#Mysql-主从-双主同步" class="headerlink" title="Mysql 主从/双主同步"></a>Mysql 主从/双主同步</h1><h1 id="主从同步"><a href="#主从同步" class="headerlink" title="主从同步"></a>主从同步</h1><h2 id="一、准备阶段"><a href="#一、准备阶段" class="headerlink" title="一、准备阶段:"></a>一、准备阶段:</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#共3台服务器，2台安装mysql，1台nginx（主从同步不用nginx，双主需要nginx）</span><span class="token comment">#这里默认mysqlA为主库（有数据），mysqlB为从库（无数据），mysqlA无数据库也是可以的</span>mysqlA    mysqlB     nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="二、登录mysqlA和mysqlB修改-my-cnf-配置"><a href="#二、登录mysqlA和mysqlB修改-my-cnf-配置" class="headerlink" title="二、登录mysqlA和mysqlB修改 my.cnf 配置"></a>二、登录mysqlA和mysqlB修改 my.cnf 配置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server_id <span class="token operator">=</span> <span class="token number">1</span><span class="token comment">#这个配置不能 重复，可以随意命名 为了方便顺序起  mysqlA id 1   mysqlA id 2</span><span class="token comment">#开启bin日志</span>log-bin<span class="token operator">=</span> mysql-bin<span class="token comment">#开启bin日志级别 有三种 我常用 row 行级别 更详细日志</span>binlog-format<span class="token operator">=</span>ROW<span class="token comment">#忽略 需要同步的表 #也可以配置 只同步的表 replicate-do-db=test</span>replicate-ignore-db<span class="token operator">=</span>mysqlreplicate-ignore-db<span class="token operator">=</span>sysreplicate-ignore-db<span class="token operator">=</span>information_schemareplicate-ignore-db<span class="token operator">=</span>performance_schema<span class="token comment">#双主都是0，可读写，1是可读</span>read-only<span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">relay_log</span><span class="token operator">=</span>mysql-relay-binlog-slave-updates<span class="token operator">=</span>on<span class="token comment">##初始id值mysqlA为 1 ，mysqlA为 2</span>auto-increment-offset<span class="token operator">=</span><span class="token number">1</span><span class="token comment">##自增步幅度 2，因为负载2台所以这边设置2，根据自己的要求</span>auto-increment-increment<span class="token operator">=</span><span class="token number">2</span><span class="token comment">#注意：如果这个参数不同，可能会存在问题</span><span class="token assign-left variable">lower_case_table_names</span><span class="token operator">=</span><span class="token number">0</span>  <span class="token comment">#表明区分大小写</span><span class="token assign-left variable">lower_case_table_names</span><span class="token operator">=</span><span class="token number">1</span>  <span class="token comment">#表名不区分大小写</span><span class="token comment">#选择增加配置： slave-skip-errors=all  #跳过所有错误</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完整配置参考：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#mysqlA配置</span>server_id <span class="token operator">=</span> <span class="token number">1</span>log-bin<span class="token operator">=</span> mysql-binbinlog-format<span class="token operator">=</span>ROWreplicate-ignore-db<span class="token operator">=</span>mysqlreplicate-ignore-db<span class="token operator">=</span>sysreplicate-ignore-db<span class="token operator">=</span>information_schemareplicate-ignore-db<span class="token operator">=</span>performance_schema<span class="token comment">#slave-skip-errors=all</span>read-only<span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">relay_log</span><span class="token operator">=</span>mysql-relay-binlog-slave-updates<span class="token operator">=</span>onauto-increment-offset<span class="token operator">=</span><span class="token number">1</span>auto-increment-increment<span class="token operator">=</span><span class="token number">2</span><span class="token comment">#mysqlB配置</span>server_id <span class="token operator">=</span> <span class="token number">2</span>log-bin<span class="token operator">=</span> mysql-binbinlog-format<span class="token operator">=</span>ROWreplicate-ignore-db<span class="token operator">=</span>mysqlreplicate-ignore-db<span class="token operator">=</span>sysreplicate-ignore-db<span class="token operator">=</span>information_schemareplicate-ignore-db<span class="token operator">=</span>performance_schema<span class="token comment">#slave-skip-errors=all</span>read-only<span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">relay_log</span><span class="token operator">=</span>mysql-relay-binlog-slave-updates<span class="token operator">=</span>onauto-increment-offset<span class="token operator">=</span><span class="token number">2</span>auto-increment-increment<span class="token operator">=</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、重启两台数据库"><a href="#三、重启两台数据库" class="headerlink" title="三、重启两台数据库"></a>三、重启两台数据库</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl restart mysql<span class="token comment">#在挂载的data目录里面有mysql-bin.index和类似命名mysql-bin.0000001表示开启日志成功</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="四、开始同步"><a href="#四、开始同步" class="headerlink" title="四、开始同步"></a>四、开始同步</h2><p><font color="#dd0000"><strong>注意 ：开启同步操作必须先优先从库读主库</strong></font> </p><p><font color="#dd0000"><strong>举例：mysqlA (数据有) mysqlB(数据没有) 则必须先操作B库，去读 A库的日志同步，否侧 数据 会全部丢失</strong></font> </p><p>登录  mysqlA</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql -u root -pmysql<span class="token operator">&gt;</span> show master status<span class="token punctuation">;</span>mysql<span class="token operator">&gt;</span> show master status<span class="token punctuation">;</span>+------------------+----------+--------------+------------------+-------------------+<span class="token operator">|</span> File             <span class="token operator">|</span> Position <span class="token operator">|</span> Binlog_Do_DB <span class="token operator">|</span> Binlog_Ignore_DB <span class="token operator">|</span> Executed_Gtid_Set <span class="token operator">|</span>+------------------+----------+--------------+------------------+-------------------+<span class="token operator">|</span> mysql-bin.000022 <span class="token operator">|</span> <span class="token number">55789429</span> <span class="token operator">|</span>              <span class="token operator">|</span>                  <span class="token operator">|</span>                   <span class="token operator">|</span>+------------------+----------+--------------+------------------+-------------------+<span class="token comment">##需要记录,然后登录 mysqlB开启同步操作</span><span class="token function">file</span>   mysql-bin.000022    pos  <span class="token number">55789429</span> <span class="token comment">#根据实际填写</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>登录mysqlB</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#读取远程bin日志开启同步</span>mysql<span class="token operator">&gt;</span> change master to <span class="token assign-left variable">master_host</span><span class="token operator">=</span><span class="token string">'mysqlA的ip'</span>,  <span class="token assign-left variable">master_port</span><span class="token operator">=</span><span class="token number">3306</span>, <span class="token assign-left variable">master_user</span><span class="token operator">=</span><span class="token string">'root'</span>,  <span class="token assign-left variable">master_password</span><span class="token operator">=</span><span class="token string">'Simple@01!'</span>,  <span class="token assign-left variable">master_log_file</span><span class="token operator">=</span><span class="token string">'mysql-bin.000022'</span>,  <span class="token assign-left variable">master_log_pos</span><span class="token operator">=</span><span class="token number">55789429</span> <span class="token punctuation">;</span>Query OK, <span class="token number">0</span> rows affected, <span class="token number">2</span> warnings <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> start slave<span class="token punctuation">;</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span><span class="token comment">#查看是否成功</span>mysql<span class="token operator">&gt;</span> show slave status<span class="token punctuation">\</span><span class="token punctuation">\</span>G*************************** <span class="token number">1</span>. row ***************************               Slave_IO_State: Waiting <span class="token keyword">for</span> master to send event                  Master_Host: <span class="token number">192.168</span>.10.115                  Master_User: simple                  Master_Port: <span class="token number">3306</span>                Connect_Retry: <span class="token number">60</span>              Master_Log_File: mysql-bin.000022          Read_Master_Log_Pos: <span class="token number">45299492</span>               Relay_Log_File: mysql-relay-bin.000004                Relay_Log_Pos: <span class="token number">55236</span>        Relay_Master_Log_File: mysql-bin.000022             Slave_IO_Running: Yes   <span class="token comment">#看这个状态 yes为成功</span>            Slave_SQL_Running: Yes   <span class="token comment">#看这个状态 yes为成功</span>              Replicate_Do_DB:           Replicate_Ignore_DB: mysql,sys,information_schema,performance_schema           Replicate_Do_Table:        Replicate_Ignore_Table:       Replicate_Wild_Do_Table:   Replicate_Wild_Ignore_Table:                    Last_Errno: <span class="token number">0</span>                   Last_Error:                  Skip_Counter: <span class="token number">0</span>          Exec_Master_Log_Pos: <span class="token number">45299492</span>              Relay_Log_Space: <span class="token number">55443</span>              Until_Condition: None               Until_Log_File:                 Until_Log_Pos: <span class="token number">0</span>           Master_SSL_Allowed: No           Master_SSL_CA_File:            Master_SSL_CA_Path:               Master_SSL_Cert:             Master_SSL_Cipher:                Master_SSL_Key:         Seconds_Behind_Master: <span class="token number">0</span>Master_SSL_Verify_Server_Cert: No                Last_IO_Errno: <span class="token number">0</span>                Last_IO_Error:                Last_SQL_Errno: <span class="token number">0</span>               Last_SQL_Error:   Replicate_Ignore_Server_Ids:              Master_Server_Id: <span class="token number">115</span>                  Master_UUID: a22728a4-9520-11ec-96f4-0050568d79d0             Master_Info_File: /home/dpan/mysqldata/master.info                    SQL_Delay: <span class="token number">0</span>          SQL_Remaining_Delay: NULL      Slave_SQL_Running_State: Slave has <span class="token builtin class-name">read</span> all relay log<span class="token punctuation">;</span> waiting <span class="token keyword">for</span> <span class="token function">more</span> updates <span class="token comment">#查看这个状态,有没有报错信息</span>           Master_Retry_Count: <span class="token number">86400</span>                  Master_Bind:       Last_IO_Error_Timestamp:      Last_SQL_Error_Timestamp:                Master_SSL_Crl:            Master_SSL_Crlpath:            Retrieved_Gtid_Set:             Executed_Gtid_Set:                 Auto_Position: <span class="token number">0</span>         Replicate_Rewrite_DB:                  Channel_Name:            Master_TLS_Version: <span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>至此主从已经搭建完毕，可以在mysqlA添加删除或者修改一条数据，看mysqlB是否实时更新。</strong></p><h1 id="双主同步"><a href="#双主同步" class="headerlink" title="双主同步"></a>双主同步</h1><p>需要mysqlA读mysqlB的日志，命令一样这边就不写明了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#在mysqlB读取</span>mysql<span class="token operator">&gt;</span> show master status<span class="token punctuation">;</span><span class="token comment">#登录mysqlA</span>mysql<span class="token operator">&gt;</span> change master to <span class="token assign-left variable">master_host</span><span class="token operator">=</span><span class="token string">'mysqlB的ip'</span>,  <span class="token assign-left variable">master_port</span><span class="token operator">=</span><span class="token number">3306</span>, <span class="token assign-left variable">master_user</span><span class="token operator">=</span><span class="token string">'root'</span>,  <span class="token assign-left variable">master_password</span><span class="token operator">=</span><span class="token string">'Simple@01!'</span>,  <span class="token assign-left variable">master_log_file</span><span class="token operator">=</span><span class="token string">'mysql-bin.000001'</span>,  <span class="token assign-left variable">master_log_pos</span><span class="token operator">=</span><span class="token number">154</span><span class="token punctuation">;</span> <span class="token comment">#根据实际情况</span>start slave<span class="token punctuation">;</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在双主已经搭建完毕</p><h2 id="nginx负载"><a href="#nginx负载" class="headerlink" title="nginx负载"></a>nginx负载</h2><p>现在就可以用nginx 做负载，登录nginx服务器修改配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">stream  <span class="token punctuation">{</span>    upstream mysql <span class="token punctuation">{</span>        <span class="token comment">##负载 下面的 数据库</span>        server mysqlA的ip:3306 <span class="token assign-left variable">max_fails</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">fail_timeout</span><span class="token operator">=</span>30s<span class="token punctuation">;</span>        server mysqlB的ip:3306 <span class="token assign-left variable">max_fails</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">fail_timeout</span><span class="token operator">=</span>30s<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    server <span class="token punctuation">{</span>        <span class="token comment">## 负载端口</span>        listen <span class="token number">3306</span><span class="token punctuation">;</span>        proxy_connect_timeout 30s<span class="token punctuation">;</span>        proxy_timeout 120s<span class="token punctuation">;</span>        proxy_pass mysql<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">#重载</span>nginx -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数据库双主负载搭建成功</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 同步 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xtrabackup备份与恢复</title>
      <link href="/2022/05/06/xtrabackup-bei-fen-yu-hui-fu/"/>
      <url>/2022/05/06/xtrabackup-bei-fen-yu-hui-fu/</url>
      
        <content type="html"><![CDATA[<h1 id="Xtrabackup备份与恢复"><a href="#Xtrabackup备份与恢复" class="headerlink" title="Xtrabackup备份与恢复"></a>Xtrabackup备份与恢复</h1><h2 id="一、Xtrabackup介绍"><a href="#一、Xtrabackup介绍" class="headerlink" title="一、Xtrabackup介绍"></a>一、Xtrabackup介绍</h2><p>Percona-xtrabackup是 Percona公司开发的一个用于MySQL数据库物理热备的备份工具，支持MySQL、Percona server和MariaDB，开源免费，是目前较为受欢迎的主流备份工具。xtrabackup只能备份innoDB和xtraDB两种数据引擎的表，而不能备份MyISAM数据表。</p><p>MySQL冷备、mysqldump、MySQL热拷贝都无法实现对数据库进行增量备份。在实际生产环境中增量备份是非常实用的，如果数据大于50G或100G，存储空间足够的情况下，可以每天进行完整备份，如果每天产生的数据量较大，需要定制数据备份策略。例如每周实用完整备份，周一到周六实用增量备份。而Percona-Xtrabackup就是为了实现增量备份而出现的一款主流备份工具，</p><p>xtrabackup包含两个主要的工具，即xtrabackup和innobackupex，二者区别如下：</p><p>（1）xtrabackup只能备份innodb和xtradb两种引擎的表，而不能备份myisam引擎的表；</p><p>（2）innobackupex是一个封装了xtrabackup的Perl脚本，支持同时备份innodb和myisam，但在对myisam备份时需要加一个全局的读锁。还有就是myisam不支持增量备份</p><h2 id="二、Xtrabackup优点"><a href="#二、Xtrabackup优点" class="headerlink" title="二、Xtrabackup优点"></a>二、Xtrabackup优点</h2><p>（1）备份速度快，物理备份可靠</p><p>（2）备份过程不会打断正在执行的事务（无需锁表）</p><p>（3）能够基于压缩等功能节约磁盘空间和流量</p><p>（4）自动备份校验</p><p>（5）还原速度快</p><p>（6）可以流传将备份传输到另外一台机器上</p><p>（7）在不增加服务器负载的情况备份数据</p><h2 id="三、xtrabackup的安装部署以及备份恢复实现"><a href="#三、xtrabackup的安装部署以及备份恢复实现" class="headerlink" title="三、xtrabackup的安装部署以及备份恢复实现"></a>三、xtrabackup的安装部署以及备份恢复实现</h2><hr><h3 id="1、xtrabackup的安装"><a href="#1、xtrabackup的安装" class="headerlink" title="1、xtrabackup的安装"></a>1、xtrabackup的安装</h3><p>可以选择rpm包方式安装，也可以下载源码包编译安装</p><p>官网地址：</p><p><a href="https://www.percona.com/downloads/">Percona Software Downloads</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#yum：</span><span class="token comment">#安装percona依赖库</span>yum <span class="token function">install</span> <span class="token operator">&lt;</span>https://repo.percona.com/yum/percona-release-latest.noarch.rpm<span class="token operator">&gt;</span><span class="token comment">#查看可安装版本</span>yum list <span class="token operator">|</span> <span class="token function">grep</span> percona-xtrabackup<span class="token comment"># 5.6、5.7安装24的</span>yum <span class="token function">install</span> -y percona-xtrabackup-24<span class="token comment"># 8.0安装80的</span>yum <span class="token function">install</span> -y percona-xtrabackup-80<span class="token comment">#RPM</span><span class="token function">wget</span> <span class="token operator">&lt;</span>https://www.percona.com/downloads/XtraBackup/Percona-XtraBackup-2.4.9/binary/redhat/7/x86_64/percona-xtrabackup-24-2.4.9-1.el7.x86_64.rpm<span class="token operator">&gt;</span>yum <span class="token function">install</span> -y percona-xtrabackup-24-2.4.9-1.el7.x86_64.rpm <span class="token function">rpm</span> -qa <span class="token operator">|</span><span class="token function">grep</span> xtrabackuppercona-xtrabackup-24-2.4.9-1.el7.x86_64Xtrabackup中主要包含两个工具：xtrabackup：是用于热备innodb，xtradb表中数据的工具，不能备份其他类型的表，也不能备份数据表结构；innobackupex：是将xtrabackup进行封装的perl脚本，提供了备份myisam表的能力。常用选项:     --host     指定主机   --user     指定用户名   --password    指定密码   --port     指定端口   --databases     指定数据库   --incremental    创建增量备份   --incremental-basedir   指定包含完全备份的目录   --incremental-dir      指定包含增量备份的目录      --apply-log        对备份进行预处理操作                  一般情况下，在备份完成后，数据尚且不能用于恢复操作，因为备份的数据中可能会包含尚未提交的事务或已经提交但尚未同步至数据文件中的事务。因此，此时数据文件仍处理不一致状态。“准备”的主要作用正是通过回滚未提交的事务及同步已经提交的事务至数据文件也使得数据文件处于一致性状态。   --redo-only      不回滚未提交事务   --copy-back     恢复备份目录   装完xtrabackup后，生成以下几个工具<span class="token punctuation">[</span>root@localhost bin<span class="token punctuation">]</span><span class="token comment"># ./xb</span>xbcloud        xbcloud_osenv  xbcrypt        xbiff          xbrlapi        xbstream xbcloud和xbcloud_osenv是xtrabackup新的高级特性：云备份；xbcrypt也是新的特性，加密备份集；xbstream是xtrabackup的流数据功能，通过流数据功能，可将备份内容打包并传给管道后的压缩工具进行压缩；xtrabackup是主程序；innobackupex在以前是一个perl脚本，会调用xtrabackup这个二进制工具，从xtrabackup <span class="token number">2.3</span>开始，该工具使用C语言进行了重写，当前它是xtabackup二进制工具的一个软连接，但是实际的使用方法却不同，并且在以后的版本中会删除该工具。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用innobackupex备份时，其会调用xtrabackup备份所有的InnoDB表，复制所有关于表结构定义的相关文件(.frm)、以及MyISAM、MERGE、CSV和ARCHIVE表的相关文件，同时还会备份触发器和数据库配置信息相关的文件，这些文件会被保存到一个以时间命名的目录当中。在备份的同时，innobackupex还会在备份目录中创建如下文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>xtrabackup_checkpoints -- 备份类型<span class="token punctuation">(</span>如完全或增量<span class="token punctuation">)</span>、备份状态<span class="token punctuation">(</span>如是否已经为prepared状态<span class="token punctuation">)</span>和LSN<span class="token punctuation">(</span>日志序列号<span class="token punctuation">)</span>范围信息： 每个InnoDB页<span class="token punctuation">(</span>通常为16k大小<span class="token punctuation">)</span>都会包含一个日志序列号，即LSN，LSN是整个数据库系统的系统版本号，每个页面相关的LSN能够表明此页面最近是如何发生改变的。 <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>xtrabackup_binlog_info  --  mysql服务器当前正在使用的二进制日志文件及备份这一刻位置二进制日志时间的位置。 <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>xtrabackup_binlog_pos_innodb  --  二进制日志文件及用于InnoDB或XtraDB表的二进制日志文件的当前position。 <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>xtrabackup_binary  --  备份中用到的xtrabackup的可执行文件； <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>backup-my.cnf  --  备份命令用到的配置选项信息： 在使用innobackupex进行备份时，还可以使用--no-timestamp选项来阻止命令自动创建一个以时间命名的目录：如此一来，innobackupex命令将会创建一个BACKUP-DIR目录来存储备份数据。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：备份时需启动MySQL,恢复时需关闭MySQL,清空mysql数据目录且不能重新初始化,恢复数据后应该立即进行一次完全备份</strong></p><h3 id="2、xtrabackup全量备份与恢复"><a href="#2、xtrabackup全量备份与恢复" class="headerlink" title="2、xtrabackup全量备份与恢复"></a>2、xtrabackup全量备份与恢复</h3><h4 id="全量备份："><a href="#全量备份：" class="headerlink" title="全量备份："></a>全量备份：</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">备份：innobackupex --defaults-file<span class="token operator">=</span>/etc/my.cnf --user<span class="token operator">=</span>DBUSER --password<span class="token operator">=</span>DBUSERPASS  /path/to/BACKUP-DIR/<span class="token comment">#比如我/path/to/BACKUP-DIR/指定：/home/dpan/mysql/bak</span><span class="token comment">#生成目录为：/home/dpan/mysql/bak/2022-05-06_17-53-17</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>可能存在的报错：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xtrabackup: Error: --defaults-file must be specified first on the <span class="token builtin class-name">command</span> line<span class="token comment">#--defaults-file=/etc/my.cnf参数必须写在最前面</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="全量恢复："><a href="#全量恢复：" class="headerlink" title="全量恢复："></a>全量恢复：</h4><p><strong>注意：恢复不用启动mysql,mysql需要关闭状态</strong></p><p>如果B库要恢复A库的备份，则需要B库删除原有的数据，例如：/usr/local/mysql/data</p><p>配置my.cnf的数据目录路径，否则会报错，需要和A一致</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#一般情况下，在备份完成后，数据尚且不能用于恢复操作，因为备份的数据中可能会包含尚未提交的事务或者已经提交但尚未同步至数据文件中的事务。因此，此时数据文件仍处于不一致状态。"准备"的主要作用正是通过回滚未提交的事务及同步已经提交的事务至数据文件也使用得数据文件处于一致性状态。</span><span class="token comment">#innobackupex命令的--apply-log选项可用于实现上述功能，如下面的命令：</span>恢复：innobackupex --apply-log /home/dpan/mysql/bak/2022-05-06_17-53-17innobackupex --copy-back   /home/dpan/mysql/bak/2022-05-06_17-53-17<span class="token comment">#completed OK!　　#看到completed OK就是恢复正常了</span><span class="token comment">#ll /home/dpan/mysql/data/ ##根据实际data路径填写，在B上查看数据目录，可以看到数据已经恢复，但是属主会有问题，需要进行修改</span><span class="token function">chown</span> mysql:mysql /home/dpan/mysql/data/ <span class="token comment">#根据实际data路径填写</span>systemctl start mysqld <span class="token comment">#启动mysql</span>mysql -uroot -p -e <span class="token string">"show databases;"</span>　　<span class="token comment">#查看数据，是否恢复</span><span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment"># mysql -usimple -p -e "show databases;"</span>Enter password: +--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> bitbucketdb        <span class="token operator">|</span><span class="token operator">|</span> confluencedb       <span class="token operator">|</span><span class="token operator">|</span> ferry              <span class="token operator">|</span><span class="token operator">|</span> jira               <span class="token operator">|</span><span class="token operator">|</span> jumpserver         <span class="token operator">|</span><span class="token operator">|</span> jumpserver_2022    <span class="token operator">|</span><span class="token operator">|</span> mindoc_db          <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> ranzhi             <span class="token operator">|</span><span class="token operator">|</span> simpleim           <span class="token operator">|</span><span class="token operator">|</span> simpletotal        <span class="token operator">|</span><span class="token operator">|</span> sys                <span class="token operator">|</span><span class="token operator">|</span> zdoo               <span class="token operator">|</span><span class="token operator">|</span> zentao             <span class="token operator">|</span>+--------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、xtrabackup增量备份与恢复"><a href="#3、xtrabackup增量备份与恢复" class="headerlink" title="3、xtrabackup增量备份与恢复"></a>3、xtrabackup增量备份与恢复</h3><p>暂时没有实际需求，等有需求再实践</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rabbitmq设置路径前缀</title>
      <link href="/2022/05/05/rabbitmq-she-zhi-lu-jing-qian-zhui/"/>
      <url>/2022/05/05/rabbitmq-she-zhi-lu-jing-qian-zhui/</url>
      
        <content type="html"><![CDATA[<h1 id="rabbtimq设置前缀"><a href="#rabbtimq设置前缀" class="headerlink" title="rabbtimq设置前缀"></a>rabbtimq设置前缀</h1><p>因为客户有时候只开放指定端口，只能将端口以目录的形式进行反向代理，修改tabbitmq的config文件，往下找到path_prefix相关字段,修改后重启rabbitmq生效</p><pre class="line-numbers language-none"><code class="language-none">vim /etc/rabbitmq/rabbitmq.config {rabbitmq_management,   [{path_prefix, "/mq"}]},         #此处我修改前缀为/mq<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="可能会存在的问题："><a href="#可能会存在的问题：" class="headerlink" title="可能会存在的问题："></a>可能会存在的问题：</h2><p><strong>Rabbitmq Management 在使用某些功能时 比如增加Virtual host服务端返回 405 Method not allowed</strong></p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072336369.png"></p><p>正常登录 Rabbitmq Management 后，调用某些 url 包含 %2f 的接口时，后端返回:</p><pre class="line-numbers language-none"><code class="language-none">405 Method not allowed<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="原因："><a href="#原因：" class="headerlink" title="原因："></a><strong>原因：</strong></h3><p>正常访问该地址：<a href="https://xxx.xxx.com/mq/">https://xxx.xxx.com/mq/</a> 时能正常跳转，但是 rabbitmq management 的 api url 出现了 %2f 字符，这些字符会在经过 nginx 被转换为/</p><h3 id="使用以下nginx配置解决这问题"><a href="#使用以下nginx配置解决这问题" class="headerlink" title="使用以下nginx配置解决这问题"></a>使用以下nginx配置解决这问题</h3><p>nginx配置：</p><pre class="line-numbers language-none"><code class="language-none">    location  /mq/ {  # proxy_pass http://xx.xx.xx.xx:15672/mq;    proxy_set_header        Host $host;    proxy_set_header        X-Real-IP $remote_addr;    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;    proxy_set_header        Upgrade $http_upgrade;    proxy_set_header        Connection "upgrade";        if ($request_uri ~* "/mq/(.*)"){                        proxy_pass http://xx.xx.xx.xx:15672/mq/$1;                        break;        }    proxy_pass http://xx.xx.xx.xx:15672/mq;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> rabbitmq </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rabbitmq </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Reids集群slots缺失修复</title>
      <link href="/2022/05/04/reids-ji-qun-slots-que-shi-xiu-fu/"/>
      <url>/2022/05/04/reids-ji-qun-slots-que-shi-xiu-fu/</url>
      
        <content type="html"><![CDATA[<h1 id="Reids集群slots报错总结"><a href="#Reids集群slots报错总结" class="headerlink" title="Reids集群slots报错总结"></a>Reids集群slots报错总结</h1><h3 id="今天项目挂掉了，显示redis集群报错，看了报错日志，发现和redis的slots有关，报错如下："><a href="#今天项目挂掉了，显示redis集群报错，看了报错日志，发现和redis的slots有关，报错如下：" class="headerlink" title="今天项目挂掉了，显示redis集群报错，看了报错日志，发现和redis的slots有关，报错如下："></a>今天项目挂掉了，显示redis集群报错，看了报错日志，发现和redis的slots有关，报错如下：</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token number">2022</span>-04-04 09:54:06.734 <span class="token punctuation">[</span>localhost-startStop-1<span class="token punctuation">]</span> WARN  org.hibernate.id.UUIDHexGenerator - HHH000409: Using org.hibernate.id.UUIDHexGenerator <span class="token function">which</span> does not generate IETF RFC <span class="token number">4122</span> compliant UUID values<span class="token punctuation">;</span> consider using org.hibernate.id.UUIDGenerator instead<span class="token number">2022</span>-04-04 09:54:08.111 <span class="token punctuation">[</span>redisson-netty-1-1<span class="token punctuation">]</span> ERROR org.redisson.cluster.ClusterConnectionManager - cluster_state:fail <span class="token keyword">for</span> /192.168.205.82:6379<span class="token number">2022</span>-04-04 09:54:10.392 <span class="token punctuation">[</span>localhost-startStop-1<span class="token punctuation">]</span> ERROR o.hibernate.cache.redis.client.RedisClientFactory - Fail to create RedisClient.org.redisson.client.RedisConnectionException: Not all slots are covered<span class="token operator">!</span> Only <span class="token number">10923</span> slots are avaliableat org.redisson.cluster.ClusterConnectionManager.<span class="token operator">&lt;</span>init<span class="token operator">&gt;</span><span class="token punctuation">(</span>ClusterConnectionManager.java:175<span class="token punctuation">)</span>at org.redisson.config.ConfigSupport.createConnectionManager<span class="token punctuation">(</span>ConfigSupport.java:240<span class="token punctuation">)</span>at org.redisson.Redisson.<span class="token operator">&lt;</span>init<span class="token operator">&gt;</span><span class="token punctuation">(</span>Redisson.java:115<span class="token punctuation">)</span>at org.redisson.Redisson.create<span class="token punctuation">(</span>Redisson.java:152<span class="token punctuation">)</span>at org.hibernate.cache.redis.client.RedisClientFactory.createRedisClient<span class="token punctuation">(</span>RedisClientFactory.java:47<span class="token punctuation">)</span>at org.hibernate.cache.redis.client.RedisClientFactory.createRedisClient<span class="token punctuation">(</span>RedisClientFactory.java:64<span class="token punctuation">)</span>at org.hibernate.cache.redis.client.RedisClientFactory.createRedisClient<span class="token punctuation">(</span>RedisClientFactory.java:92<span class="token punctuation">)</span>at org.hibernate.cache.redis.hibernate5.AbstractRedisRegionFactory.createRedisClient<span class="token punctuation">(</span>AbstractRedisRegionFactory.java:65<span class="token punctuation">)</span>at org.hibernate.cache.redis.hibernate5.SingletonRedisRegionFactory.start<span class="token punctuation">(</span>SingletonRedisRegionFactory.java:55<span class="token punctuation">)</span>at org.hibernate.internal.CacheImpl.<span class="token operator">&lt;</span>init<span class="token operator">&gt;</span><span class="token punctuation">(</span>CacheImpl.java:49<span class="token punctuation">)</span>at org.hibernate.engine.spi.CacheInitiator.initiateService<span class="token punctuation">(</span>CacheInitiator.java:28<span class="token punctuation">)</span>at org.hibernate.engine.spi.CacheInitiator.initiateService<span class="token punctuation">(</span>CacheInitiator.java:20<span class="token punctuation">)</span>at org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.initiateService<span class="token punctuation">(</span>SessionFactoryServiceRegistryImpl.java:49<span class="token punctuation">)</span>at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService<span class="token punctuation">(</span>AbstractServiceRegistryImpl.java:254<span class="token punctuation">)</span>at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService<span class="token punctuation">(</span>AbstractServiceRegistryImpl.java:228<span class="token punctuation">)</span>at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService<span class="token punctuation">(</span>AbstractServiceRegistryImpl.java:207<span class="token punctuation">)</span>at org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService<span class="token punctuation">(</span>SessionFactoryServiceRegistryImpl.java:68<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1、登录服务器进行查看"><a href="#1、登录服务器进行查看" class="headerlink" title="1、登录服务器进行查看"></a>1、登录服务器进行查看</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">redis-cli -h <span class="token operator">&lt;</span>ip<span class="token operator">&gt;</span>  -p <span class="token operator">&lt;</span>端口<span class="token operator">&gt;</span> -a <span class="token operator">&lt;</span>密码<span class="token operator">&gt;</span><span class="token number">127.0</span>.0.1:700<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> <span class="token builtin class-name">set</span> age <span class="token number">20</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> CLUSTERDOWN The cluster is down<span class="token number">127.0</span>.0.1:700<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> cluster infocluster_state:failcluster_slots_assigned:16371cluster_slots_ok:16371cluster_slots_pfail:0cluster_slots_fail:0cluster_known_nodes:6cluster_size:3cluster_current_epoch:8cluster_my_epoch:1cluster_stats_messages_sent:1007cluster_stats_messages_received:1005<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="由于redis集群默认slots为16384个，而现在只有16371个，少了13个slots，再看一下slots信息："><a href="#由于redis集群默认slots为16384个，而现在只有16371个，少了13个slots，再看一下slots信息：" class="headerlink" title="由于redis集群默认slots为16384个，而现在只有16371个，少了13个slots，再看一下slots信息："></a>由于redis集群默认slots为16384个，而现在只有16371个，少了13个slots，再看一下slots信息：</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token number">127.0</span>.0.1:700<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span>cluster slots<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5460</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"5fbcbee6cff9c0e4391dbf1553e87befa4914049"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.86"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"25cf4ec8180d6cc7e78192cb0d2d021335501b6a"</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5461</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6606</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6608</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6613</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6615</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7037</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7039</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7471</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7473</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8197</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8199</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8324</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8326</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8342</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8344</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8492</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8494</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">9555</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">9557</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">9901</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">9903</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">9999</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">13</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10001</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10338</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">14</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10340</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10802</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">15</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10804</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10922</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10923</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">16383</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"031d12ae9a6f15e7550e17916454b41fdeaa0bbe"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.86"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"eeaa7bbb9e71c47d4c8c0fc67b188753910713e5"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、分析slots缺少情况"><a href="#2、分析slots缺少情况" class="headerlink" title="2、分析slots缺少情况"></a>2、分析slots缺少情况</h2><p>从上述slots中，把所有缺失的slots统计出来：</p><pre class="line-numbers language-none"><code class="language-none">0-54605461-66066608-66136615-70377039-74717473-81978199-83248326-83428344-84928494-95559557-99019903-999910001-1033810340-1080210804-1092210923-16383<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>缺失的slots为：</p><pre class="line-numbers language-none"><code class="language-none">6607 6614 7038 7472 8198 8325 8343 8493 9556 9902 10000 10339 10803<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>正好为我们缺失的13个slots (16384-16371=13)</p><h2 id="3、解决方法如下"><a href="#3、解决方法如下" class="headerlink" title="3、解决方法如下"></a>3、解决方法如下</h2><h3 id="3-1将一个或多个槽（slot）指派（assign）给当前节点"><a href="#3-1将一个或多个槽（slot）指派（assign）给当前节点" class="headerlink" title="3.1将一个或多个槽（slot）指派（assign）给当前节点"></a>3.1将一个或多个槽（slot）指派（assign）给当前节点</h3><pre class="line-numbers language-none"><code class="language-none">127.0.0.1:7000&gt;cluster addslots  6607 6614 7038 7472 8198 8325 8343 8493 9556 9902 10000 10339 10803OK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-2查看结果"><a href="#3-2查看结果" class="headerlink" title="3-2查看结果"></a>3-2查看结果</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token number">127.0</span>.0.1:700<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span>cluster infocluster_state:okcluster_slots_assigned:16384cluster_slots_ok:16384cluster_slots_pfail:0cluster_slots_fail:0cluster_known_nodes:6cluster_size:3cluster_current_epoch:30cluster_my_epoch:25cluster_stats_messages_ping_sent:2831cluster_stats_messages_pong_sent:686cluster_stats_messages_publish_sent:98525cluster_stats_messages_sent:102042cluster_stats_messages_ping_received:686cluster_stats_messages_pong_received:690cluster_stats_messages_publish_received:96234cluster_stats_messages_received:97610<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>集群里slots问题已经修复成功，下面进行检测，发现集群上一些slots有些问题</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./redis-trib.rb check <span class="token number">192.168</span>.205.81:6379<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Check <span class="token keyword">for</span> <span class="token function">open</span> slots<span class="token punctuation">..</span>.<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Node <span class="token number">192.168</span>.205.81:6379 has slots <span class="token keyword">in</span> importing state <span class="token punctuation">(</span><span class="token number">194,299</span>,626,660,710,1274,1819,1838,2109,3237,3504,3647,3909,4044,4313,4453,4478,4706,4979<span class="token punctuation">)</span>.<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Node <span class="token number">192.168</span>.205.81:6380 has slots <span class="token keyword">in</span> importing state <span class="token punctuation">(</span><span class="token number">6607,6614</span>,8712,9902<span class="token punctuation">)</span>.<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Node <span class="token number">192.168</span>.205.82:6379 has slots <span class="token keyword">in</span> importing state <span class="token punctuation">(</span><span class="token number">8712</span><span class="token punctuation">)</span>.<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> The following slots are open: <span class="token number">194,299</span>,626,660,710,1274,1819,1838,2109,3237,3504,3647,3909,4044,4313,4453,4478,4706,4979,6607,6614,8712,9902<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Check slots coverage<span class="token punctuation">..</span>.<span class="token punctuation">[</span>OK<span class="token punctuation">]</span> All <span class="token number">16384</span> slots covered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3-分别登录上述node的redis中，删除对应的slosts，再添加slots"><a href="#3-3-分别登录上述node的redis中，删除对应的slosts，再添加slots" class="headerlink" title="3-3 分别登录上述node的redis中，删除对应的slosts，再添加slots"></a>3-3 分别登录上述node的redis中，删除对应的slosts，再添加slots</h3><pre class="line-numbers language-none"><code class="language-none">127.0.0.1:7000&gt;cluster delslots 194 299 626 660 710 1274 1819 1838 2109 3237 3504 3647 3909 4044 4313 4453 4478 4706 4979ok127.0.0.1:7000&gt;cluster addslots 194 299 626 660 710 1274 1819 1838 2109 3237 3504 3647 3909 4044 4313 4453 4478 4706 4979ok<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>再对集群进行检测时，已经没有警告信息了，至此redis已全部修复完成</p><p>redis原理查看：<a href="https://www.cnblogs.com/mengchunchen/p/10059436.html">https://www.cnblogs.com/mengchunchen/p/10059436.html</a></p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> 修复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>磁盘的数据恢复</title>
      <link href="/2022/05/03/ci-pan-de-shu-ju-hui-fu/"/>
      <url>/2022/05/03/ci-pan-de-shu-ju-hui-fu/</url>
      
        <content type="html"><![CDATA[<h1 id="磁盘的数据恢复"><a href="#磁盘的数据恢复" class="headerlink" title="磁盘的数据恢复"></a>磁盘的数据恢复</h1><hr><h3 id="起因："><a href="#起因：" class="headerlink" title="起因："></a>起因：</h3><p>服务器断电，没有正常关闭服务器导致，通过xshell连接发现无法正常连接至服务器，只能通过vmware管理进入控制台</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题:"></a>问题:</h3><p>linux系统无法启动提示<strong>give root password for maintenance</strong></p><p>系统重启停留在如下[<strong>Welcome to emergency mode</strong>]画面，提示输入root密码进入维护</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072319182.png"></p><p>进入紧急模式的原因：非法重启或硬盘故障或者错误编辑/etc/fstab文件等错误操作都会引起Linux系统无法启动，同时无法进入操作系统，这样就会出现“<strong>give root password for maintenance</strong>”的错误</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法:"></a>解决方法:</h3><h4 id="一、-fsck修复"><a href="#一、-fsck修复" class="headerlink" title="一、 fsck修复"></a><strong>一、</strong> fsck修复</h4><p>1、这时候输入服务器root用户的密码：</p><p>2、输入 <code>fsck -y</code></p><p>即开始修复文件系统。时间根据硬盘的大小，在1个小时－8个小时不等。</p><p>3、修复完成后输入<code>reboot</code>回车重启电脑即可。</p><h4 id="二、重新挂载"><a href="#二、重新挂载" class="headerlink" title="二、重新挂载"></a><strong>二、</strong>重新挂载</h4><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072320548.png"></p><p>重新挂载/目录，因为现在我们只有r读的权限，而没有w写的权限</p><p><code>#mount –o remount,rw /</code> 此处是重新挂载/，并给予rw读写的权限</p><p>对<code>vi /etc/fstab</code>进行修改</p><p><code>lsblk -f</code>(图一)</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072323893.png"></p><p><code>vi /etc/fstab</code> (图二)</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072322065.png"></p><p>进入到配置文件</p><p>拿图一和图二做对比,图一有的UUID就保存 没有的就在图二里面删注释掉 或删掉 如图</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072323389.png"></p><p>然后就是保存退出 最后就是重启</p><h4 id="三、e2fsck修复"><a href="#三、e2fsck修复" class="headerlink" title="三、e2fsck修复"></a>三、e2fsck修复</h4><p>1、 键入root密码，然后按”输入Enter”键；</p><p>2、此时画面便会出现以下指令提示：(Repair filesystem)1#;</p><p>3.、于提示后输入”<code>e2fsck -y /dev/</code>你的分区″，再按”键入(Enter)”，便可检查档案系统；</p><p>4、系统即会自动进行修复并于画面显示修复进度；</p><p>5、完成后键入”<strong>exit</strong>”，再按输入键，重新启动系统。</p><p>如果以上方法没用 使用下面步骤：</p><p>注释掉/etc/fstab内，有问题的挂载项，这里可以看出应该是/dev/data/data1分区表出了问题。注释掉reboot后可以看系统是否可以正常启动</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072324249.png"></p><h4 id="xfs-文件系统损坏修复-fscheck（补充，未使用到）"><a href="#xfs-文件系统损坏修复-fscheck（补充，未使用到）" class="headerlink" title="xfs 文件系统损坏修复 fscheck（补充，未使用到）"></a>xfs 文件系统损坏修复 fscheck（补充，未使用到）</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">需要先进行mount查找挂载路径，unmount将其卸载<span class="token number">1</span>、用xfs_repair /dev/data/data1          <span class="token comment">#进行修复 修复成功进入4，失败进入下一步</span><span class="token number">2</span>、执行xfs_repair -L /dev/data/data1     <span class="token comment">#进行修复 修复成功进入4，失败进入下一步</span><span class="token number">3</span>、文件彻底损坏，使用工具或找专员进行修复<span class="token number">4</span>、使用xfs_check /dev/data/data1          <span class="token comment">#查看修复是否成功 修复成功便可以挂载，失败进入2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="磁盘彻底损坏无法恢复"><a href="#磁盘彻底损坏无法恢复" class="headerlink" title="磁盘彻底损坏无法恢复"></a>磁盘彻底损坏无法恢复</h2><h3 id="数据恢复工具-Testdisk"><a href="#数据恢复工具-Testdisk" class="headerlink" title="数据恢复工具-Testdisk"></a>数据恢复工具-Testdisk</h3><ul><li><p>Testdisk</p><p>参考文档：</p><p><a href="https://www.cnblogs.com/zafu/p/11406525.html">testdisk修复磁盘文件</a></p><p><a href="https://blog.csdn.net/luckywang1103/article/details/80975164">开源工具TestDisk数据恢复方法_luckywang1103的博客-CSDN博客_testdisk</a></p><p>下载地址：<a href="https://www.cgsecurity.org/wiki/TestDisk_Download">https://www.cgsecurity.org/wiki/TestDisk_Download</a></p></li></ul><h4 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a>下载地址：</h4><p><a href="https://www.cgsecurity.org/wiki/TestDisk_Download">TestDisk Download</a></p><p><strong>Testdisk</strong> 是一个强大的免费的跨平台的数据恢复工具，根据它的<a href="https://www.cgsecurity.org/wiki/TestDisk">官网</a> 上的简介，这款软件主要被设计用于恢复丢失的分区以及修复那些由于人为或者病毒等原因导致分区表错误而无法启动系统的问题</p><blockquote><p>使用 TestDisk 的重点:</p></blockquote><blockquote><p>用 方向键 和 上一页/下一页 按键在TestDisk 中导航。</p></blockquote><blockquote><p>然后, 按Enter 键确认你的选择.</p></blockquote><blockquote><p>若要返回前一页或者退出TestDisk, 按 q (Quit) 键。</p></blockquote><blockquote><p>若要在 TestDisk 下保存修改,按 y (Yes) 或者 Enter 键来确认</p></blockquote><blockquote><p>如果确实要把分区信息写入主引导记录（MBR），应该选择 “Write” 选项并按 Enter 键。</p></blockquote><h4 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h4><p>下载后解压安装，使用脚本程序进入工具</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072327129.png"></p><h4 id="2、使用"><a href="#2、使用" class="headerlink" title="2、使用"></a>2、使用</h4><p>创建一个*.log文件存储运行TestDisk时的信息。（会在当前目录）</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072328370.png"></p><p>选择你要恢复数据的分区，也可以选择整个硬盘</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072328724.png"></p><p>选择分区的类型</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072328769.png"></p><p>选择”<strong>Analyse</strong>”选项</p><p>TestDisk对当前分区的结构进行分析，按回车键确认</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072329573.png"></p><h4 id="3、罗列分区结构"><a href="#3、罗列分区结构" class="headerlink" title="3、罗列分区结构"></a>3、罗列分区结构</h4><p>存在两个1，主分区指向同一个部分或者是不可用的分区表入口。存在1个可用的扩展分区，和一个丢失的逻辑分区。</p><p><code>P </code>代表主分区，<code>L </code>代表逻辑分区 <code>E </code>代表扩展分区 <code>D </code>表示已经删除的分区</p><p>![](/Users/j/Library/Application Support/typora-user-images/image-20220507232939381.png)</p><h4 id="4、磁盘分析"><a href="#4、磁盘分析" class="headerlink" title="4、磁盘分析"></a>4、磁盘分析</h4><p>按<strong>Quick Search</strong>磁盘分析 根据所选分区大小花费时间不一样</p><p>选择”<strong>Quick Search</strong>”进行下一步</p><p>这时请注意你按下的每一个键，很可能按错回到前面Quick Rearch 的界面，又需要等待漫长的数据分析过程。</p><p>按回车进行下一步</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072330368.png"></p><h4 id="5、等待分析结束"><a href="#5、等待分析结束" class="headerlink" title="5、等待分析结束"></a>5、等待分析结束</h4><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072330595.png"></p><p>找到你所要恢复数据的分区，按“<strong>P</strong>”进入文件列表，” <strong>:</strong> ”选择所要恢复的文件夹，”<strong>c</strong>”拷贝到自己的地址中，我是新加了一块盘，拷到了新加的盘中，u盘应该是”/media/udisk”,移动硬盘是”/run/media/disk”</p><p>当把你想要恢复的数据全部拷贝完之后，按”q”退出程序</p><p>最后，十分感谢<a href="https://zhangguanzhang.github.io/">张馆长</a>的帮助，磁盘才得以恢复</p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
