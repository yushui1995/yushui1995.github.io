<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>sys3md挖矿病毒</title>
      <link href="/2023/06/10/sys3md-wa-kuang-bing-du/"/>
      <url>/2023/06/10/sys3md-wa-kuang-bing-du/</url>
      
        <content type="html"><![CDATA[<h3 id="一大早起来，发现客户服务器，cpu100"><a href="#一大早起来，发现客户服务器，cpu100" class="headerlink" title="一大早起来，发现客户服务器，cpu100%"></a><strong>一大早起来，发现客户服务器，cpu100%</strong></h3><h3 id="1、查看top，cpu占用情况"><a href="#1、查看top，cpu占用情况" class="headerlink" title="1、查看top，cpu占用情况"></a><strong>1、查看top，cpu占用情况</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202304072104118.png"></p><h3 id="2、查看定时任务"><a href="#2、查看定时任务" class="headerlink" title="2、查看定时任务"></a><strong>2、查看定时任务</strong></h3><p>用<code>root</code> 用户执行 <code>crontab -l</code> 查看死否存在定时任务，如果存在不认识的，统统删除</p><h3 id="3、查看程序位置"><a href="#3、查看程序位置" class="headerlink" title="3、查看程序位置"></a><strong>3、查看程序位置</strong></h3><p>通过 <code>top</code> 命令，我们可以知道这个 <code>syst3md</code> 的进程 PID 为 <code>1818024</code> 所以我们执行 <code>ls -l /proc/2854/exe</code></p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202304072104272.png"></p><p>进入到程序路径，把这些文件都删除</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202304072104320.png"></p><h3 id="4、kill进程"><a href="#4、kill进程" class="headerlink" title="4、kill进程"></a><strong>4、kill进程</strong></h3><pre class="line-numbers language-none"><code class="language-none">kill -9 2854<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5、cpu恢复正常"><a href="#5、cpu恢复正常" class="headerlink" title="5、cpu恢复正常"></a><strong>5、cpu恢复正常</strong></h3>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
            <tag> 修复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>No module named _ssl 问题</title>
      <link href="/2023/06/07/no-module-named-ssl-wen-ti/"/>
      <url>/2023/06/07/no-module-named-ssl-wen-ti/</url>
      
        <content type="html"><![CDATA[<h2 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h2><p>**centos安装python3.7时，查阅知需要的openssl版本最低为1.0.2，但是centos 默认的为1.0.1，所以需要重新**升级openssl****，可以参考我另一篇升级openssl的文章</p><h3 id="1、重新指定openssl所在目录并重新编译安装"><a href="#1、重新指定openssl所在目录并重新编译安装" class="headerlink" title="1、重新指定openssl所在目录并重新编译安装"></a>1、重新指定openssl所在目录并重新编译安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#配置安装目录，指定openssl环境的安装目录    </span>./configure --prefix<span class="token operator">=</span>/usr/local//python3 --with-openssl<span class="token operator">=</span>/usr/local//openssl <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2、创建软链接"><a href="#2、创建软链接" class="headerlink" title="2、创建软链接"></a>2、创建软链接</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> -s /usr/local/python3/bin/python3  /usr/bin/python   <span class="token function">ln</span> -s /usr/local/python3/bin/pip3 /usr/bin/pip3<span class="token comment">#查看当前python版本</span>python --version      <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、导入ssl模块"><a href="#3、导入ssl模块" class="headerlink" title="3、导入ssl模块"></a>3、导入ssl模块</h3><pre class="line-numbers language-none"><code class="language-none">python3                      （进入python3命令行）&gt;import ssl                  （导入ssl模块）&gt;import _ssl                 （导入_ssl模块）&gt;exit()                      （退出python3命令行）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 报错 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 报错&amp;告警 </tag>
            
            <tag> 版本升级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openssl的部署升级</title>
      <link href="/2023/06/07/openssl-de-bu-shu-sheng-ji/"/>
      <url>/2023/06/07/openssl-de-bu-shu-sheng-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="OpenSSL拒绝服务漏洞"><a href="#OpenSSL拒绝服务漏洞" class="headerlink" title="OpenSSL拒绝服务漏洞"></a>OpenSSL拒绝服务漏洞</h1><p>下载地址：<a href="https://www.openssl.org/source/">https://www.openssl.org/source/</a></p><h2 id="方法-升级openssl版本"><a href="#方法-升级openssl版本" class="headerlink" title="方法:升级openssl版本"></a>方法:升级openssl版本</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">关于OpenSSL拒绝服务漏洞的预警通报近日，OpenSSL版本1.0.2、1.1.1和3.0中的拒绝服务漏洞已被修复。OpenSSL作为使用最广泛的加密库之一，预装在各主流Linux发型版之中，如Ubuntu、Debian、Redhat、CentOS、SUSE等平台。目前漏洞细节及POC（观点验证程序）已公开，请各单位尽快对照排查相关内容，采取有效安全措施，防范该漏洞可能造成的服务异常等安全隐患。二、漏洞影响范围OpenSSL版本1.0.2：1.0.2-1.0.2zcOpenSSL版本1.1.1：1.1.1-1.1.1mOpenSSL版本3.0：3.0.0、3.0.1三、漏洞修复建议OpenSSL官方渠道已发布新版本修复漏洞，建议受影响用户及时升级更新，详细信息如下：OpenSSL1.0.2用户应升级至1.0.2zd（仅限高级支持用户）OpenSSL1.1.1用户应升级至1.1.1nOpenSSL3.0用户应升级至3.0.2下载链接：<span class="token operator">&lt;</span>https://www.openssl.org/source/<span class="token operator">&gt;</span>git：<span class="token operator">&lt;</span>https://github.com/openssl/openssl/tags<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="升级步骤："><a href="#升级步骤：" class="headerlink" title="升级步骤："></a>升级步骤：</h2><p>0、安装依赖：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> -y zlib zlib-dev openssl-devel sqlite-devel bzip2-devel libffi libffi-devel gcc gcc-c++<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1、备份当前openssl：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> /usr/local/openssl /usr/local/openssl.bak<span class="token function">mv</span> /usr/include/openssl /usr/include/openssl.bak<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>2、解压并进入解压目录后执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./config --prefix<span class="token operator">=</span>/usr/local/openssl shared zlib<span class="token function">make</span> depend<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span class="token comment">#此时/usr/local/下有了新的openssl</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>3、配置使用新版本：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#配置软链接</span><span class="token function">ln</span> -sf /usr/local/openssl/bin/openssl /usr/bin/openssl<span class="token function">ln</span> -sf /usr/local/openssl/include/openssl /usr/include/openssl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>4、更新动态链接库数据：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"/usr/local/ssl/lib"</span> <span class="token operator">&gt;&gt;</span> /etc/ld.so.conf<span class="token comment">#重新加载动态链接库</span>ldconfig -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>5、重新查看版本号：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="故障排查："><a href="#故障排查：" class="headerlink" title="故障排查："></a>故障排查：</h3><p>如果在更新完后执行openssl version 命令报错如下：</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202306072322072.png"></p><p>这是由于openssl库的位置不正确造成的。可以做一个软连接：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> -sf /usr/local/openssl/lib/libssl.so.1.1 /usr/lib/<span class="token function">ln</span> -sf /usr/local/openssl/lib/libcrypto.so.1.1 /usr/lib/<span class="token comment">#重新加载动态链接库</span>ldconfig -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后执行openssl version命令即可</p>]]></content>
      
      
      <categories>
          
          <category> 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell-for遍历目录文件名称和大小</title>
      <link href="/2023/06/04/shell-for-bian-li-mu-lu-wen-jian-ming-cheng-he-da-xiao/"/>
      <url>/2023/06/04/shell-for-bian-li-mu-lu-wen-jian-ming-cheng-he-da-xiao/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#把多层目录中的文件 只截取文件名和大小</span><span class="token comment">#只截取文件名和大小</span><span class="token function">ls</span> -lh <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print $9,":",$5}'</span><span class="token comment">#多层级for循环遍历</span><span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> /home/dpan/qyrk_cz/20*/*/*/*/*<span class="token keyword">do</span>    <span class="token function">ls</span> -lh <span class="token string">"<span class="token variable">$file</span>"</span>  <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print $9,$5}'</span>  <span class="token operator">&gt;&gt;</span> /tmp/a.xlsx<span class="token keyword">done</span><span class="token comment">#再按照需要进行分割</span><span class="token function">awk</span> <span class="token string">'{print $1,$2}'</span> a.xlsx <span class="token operator">|</span> <span class="token function">awk</span> -F/ <span class="token string">'{print $NF}'</span> <span class="token operator">|</span> <span class="token function">xargs</span> -P10<span class="token comment">#awk '{print $1}' a.log：读取a.log文件的第一列</span><span class="token comment">#awk -F/ '{print $NF}'：以/作为分隔符，取最后一个字段</span><span class="token comment"># xargs -P10 多线程执行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运维监控-node_exporter</title>
      <link href="/2023/05/10/node-exporter-zeng-jia-ren-zheng/"/>
      <url>/2023/05/10/node-exporter-zeng-jia-ren-zheng/</url>
      
        <content type="html"><![CDATA[<h3 id="下载部署"><a href="#下载部署" class="headerlink" title="下载部署"></a>下载部署</h3><p>git地址： <a href="https://github.com/prometheus/node_exporter/releases">https://github.com/prometheus/node_exporter/releases</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#下载后解压</span><span class="token function">tar</span> -zxvf node_exporter-1.5.0.linux-amd64.tar.gz -C /usr/local<span class="token comment">#使用systemctl管理</span><span class="token comment"># --web.config.file参数指定了认证，可选参数</span><span class="token comment">#--web.listen-address参数指定了端口，可选参数</span><span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/systemd/system/node_exporter.service <span class="token operator">&lt;&lt;</span> <span class="token string">EOF[Unit]Description=node_exporterAfter=network.target[Service]Type=simpleUser=rootExecStart=/usr/local/node_exporter-1.5.0.linux-amd64/node_exporter --web.config.file=/usr/local/node_exporter-1.5.0.linux-amd64/config.yaml --web.listen-address=:9091Restart=on-failure[Install]WantedBy=multi-user.targetEOF</span><span class="token comment">#启动</span>systemctl daemon-reloadsystemctl start node_exporter.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="为-node-exporter-配置密码（-–web-config-file可选参数）"><a href="#为-node-exporter-配置密码（-–web-config-file可选参数）" class="headerlink" title="为*node_exporter*配置密码（*–web.config.file可选参数）***"></a>为*<em><strong>node_exporter</strong></em>*配置密码（*<em><strong>–web.config.file可选参数</strong></em><em>）</em>***</h3><p>注意，高版本才有这个参数，具体参考githup或者./node_exporter-xxx.linux-amd64 –help</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#我们直接可以使用 htpasswd 来生成 bcrypt 密码 hash</span>htpasswd -nBC <span class="token number">12</span> <span class="token string">''</span> <span class="token operator">|</span> <span class="token function">tr</span> -d <span class="token string">':\\n'</span>       New password:Re-type new password:                                              xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<span class="token comment">#把生成的密码放入config.yaml里：</span><span class="token comment">#这段对应 admin: Simple@2022!</span><span class="token function">cat</span> <span class="token operator">&gt;</span> /usr/local/node_exporter-1.5.0.linux-amd64/config.yaml <span class="token operator">&lt;&lt;</span> <span class="token string">EOFbasic_auth_users:  admin: <span class="token variable">$2y</span><span class="token variable">$12</span><span class="token variable">$SGWqAtiYnvyHHkZzewhqYePTg8BS8eJfREtXDQz23PwKF8wUPvjEG</span>EOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="在prometheus需添加认证-当你加入了认证才需要配置"><a href="#在prometheus需添加认证-当你加入了认证才需要配置" class="headerlink" title="在prometheus需添加认证(当你加入了认证才需要配置)"></a>在prometheus需添加认证(当你加入了认证才需要配置)</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">..</span>.- job_name: <span class="token string">'linux_node'</span>    basic_auth:      username: admin          <span class="token comment">#刚才node_exporter生成的用户密码</span>      password: Simple@2022<span class="token operator">!</span>    static_configs:    - targets: <span class="token punctuation">[</span><span class="token string">'10.252.202.2:9091'</span>,<span class="token string">'10.252.202.3:9091'</span>,<span class="token string">'10.252.202.4:9091'</span>,<span class="token string">'10.252.202.5:9091'</span><span class="token punctuation">]</span>      labels:        group: <span class="token string">'我的监控机器'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="访问验证："><a href="#访问验证：" class="headerlink" title="访问验证："></a>访问验证：</h3><p>当访问时弹出这个表示认证添加成功</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202305102224360.png"></p><p>认证参考：</p><p><a href="https://zhuanlan.zhihu.com/p/144048025">为 Prometheus Node Exporter 加上认证</a></p><p><a href="https://blog.csdn.net/qq_31977125/article/details/108528488">为 Prometheus Node Exporter 加上认证_Chai Yingchao的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 监控 </tag>
            
            <tag> 漏洞修复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Loki+Promtail+Grafana部署</title>
      <link href="/2023/04/13/loki-promtail-grafana-bu-shu/"/>
      <url>/2023/04/13/loki-promtail-grafana-bu-shu/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202304132313111.png" alt="image-20230413231355163">官网git ：</p><p><a href="https://github.com/grafana/loki">https://github.com/grafana/loki</a></p><p>官网git：<a href="https://github.com/grafana/loki">https://github.com/grafana/loki</a></p><p>参数参考：</p><p><a href="https://grafana.com/docs/loki/latest/configuration/#use-environment-variables-in-the-configuration">Grafana Loki configuration parameters |  Grafana Loki documentation</a></p><p>日志告警：</p><p><a href="https://blog.csdn.net/mahj125/article/details/121147289">Loki日志系统告警_mahj125的博客-CSDN博客</a></p><p>接口：</p><p><a href="https://grafana.com/docs/loki/latest/api/">Grafana Loki HTTP API |  Grafana Loki documentation</a></p><p>准备：一台服务器+安装包(grafana不做讲解)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#资源包</span><span class="token function">curl</span> -O -L <span class="token string">"&lt;https://github.com/grafana/loki/releases/download/v2.8.0/loki-linux-amd64.zip&gt;"</span><span class="token function">curl</span> -O -L <span class="token string">"&lt;https://github.com/grafana/loki/releases/download/v2.8.0/promtail-linux-amd64.zip&gt;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>一、loki部署  </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#</span><span class="token function">mkdir</span> -p loki/<span class="token punctuation">{</span>chunks,rules<span class="token punctuation">}</span><span class="token function">unzip</span> loki-linux-amd64.zip -C loki<span class="token function">chmod</span> +x loki-linux-amd64<span class="token comment">#增加配置文件:与可执行的loki文件同级目录</span><span class="token builtin class-name">cd</span> loki<span class="token comment">#vi loki.yaml:</span>auth_enabled: <span class="token boolean">false</span>server:  http_listen_port: <span class="token number">3100</span>common:  path_prefix: /loki  storage:    filesystem:      chunks_directory: /home/dpan/soft/loki/chunks      rules_directory: /home/dpan/soft/root/loki/rules  replication_factor: <span class="token number">1</span>  ring:    instance_addr: <span class="token number">127.0</span>.0.1    kvstore:      store: inmemoryschema_config:  configs:    - from: <span class="token number">2020</span>-10-24      store: boltdb-shipper      object_store: filesystem      schema: v11      index:        prefix: index_        period: 24h<span class="token comment">#配置规则使用 不用的情况注释掉避免端口暴露</span><span class="token comment">#ruler:</span><span class="token comment">#  alertmanager_url: &lt;http://10.252.32.99:9093&gt;</span>limits_config:  enforce_metric_name: <span class="token boolean">false</span>  reject_old_samples: <span class="token boolean">true</span>  reject_old_samples_max_age: 168h  ingestion_rate_mb: <span class="token number">30</span>  <span class="token comment">#修改每用户摄入速率限制，即每秒样本量，默认值为4M</span>  ingestion_burst_size_mb: <span class="token number">15</span>  <span class="token comment">#修改每用户摄入速率限制，即每秒样本量，默认值为6M</span><span class="token comment">#增加服务管理</span><span class="token function">cat</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;</span>/etc/systemd/system/loki.service</span>[Unit]Description=loki serverWants=network-online.targetAfter=network-online.target[Service]ExecStart=/home/dpan/soft/loki/loki-linux-amd64 -config.file=/home/dpan/soft/loki/loki.yamlStandardOutput=syslogStandardError=syslogSyslogIdentifier=loki[Install]WantedBy=default.targetEOF</span><span class="token comment">#启动和自启</span>systemctl start lokisystemctl <span class="token builtin class-name">enable</span> loki<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>二、promtail部署</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> promtail<span class="token function">unzip</span> promtail-linux-amd64.zip -C promtail<span class="token function">chmod</span> +x promtail-linux-amd64<span class="token comment">##增加配置文件:与可执行的loki文件同级目录</span><span class="token builtin class-name">cd</span> promtail<span class="token comment">#vi promtail.yaml:</span>server:  http_listen_port: <span class="token number">9080</span>  grpc_listen_port: <span class="token number">0</span>positions:  filename: /home/dpan/soft/promtail/positions.yamlclients:  - url: <span class="token operator">&lt;</span>http://10.252.32.99:3100/loki/api/v1/push<span class="token operator">&gt;</span>  <span class="token comment">#loki的ip地址 默认3100端口</span>scrape_configs:  - job_name: <span class="token number">10.252</span>.32.71    static_configs:      - targets:          - <span class="token number">10.252</span>.32.71-xxx        labels:          job:xxx-8094                 <span class="token comment">#job的名称</span>          host: <span class="token number">10.252</span>.32.71-xxx    <span class="token comment">#host名称和targets一致</span>          __path__: /home/dpan/xxx/run.log <span class="token comment">#日志路径</span>      - targets:          - <span class="token number">10.252</span>.32.71-xxx        labels:          job: xxx-8098          host: <span class="token number">10.252</span>.32.71-xxx          __path__: /home/dpan/xxx/run.log<span class="token comment">#增加服务管理</span><span class="token function">cat</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;</span>/etc/systemd/system/promtail.service</span>[Unit]Description=promtail serverWants=network-online.targetAfter=network-online.target[Service]ExecStart=/home/dpan/soft/promtail/promtail-linux-amd64 -config.file=/home/dpan/soft/promtail/promtail.yamlStandardOutput=syslogStandardError=syslogSyslogIdentifier=promtail[Install]WantedBy=default.targetEOF</span>systemctl daemon-reloadsystemctl <span class="token builtin class-name">enable</span> promtail<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>三、grafana采集</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202304132317612.png" alt="image-20230413231723537"></p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202304132317858.png" alt="image-20230413231704815"></p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202304132316392.png" alt="image-20230413231645131"></p><p>四、转发</p><pre class="line-numbers language-none"><code class="language-none">#使用nginx转发 此处使用了basic认证location  /loki/ {        auth_basic           "Please input password";        auth_basic_user_file /etc/nginx/.htpasswd;    proxy_set_header        Host $host;    proxy_set_header        X-Real-IP $remote_addr;    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;    proxy_set_header        Upgrade $http_upgrade;    proxy_set_header        Connection "upgrade";        if ($request_uri ~* "/loki/(.*)"){                        proxy_pass http://10.252.32.99:3100/$1;                        break;        }    proxy_pass http://10.252.32.99:3100/loki;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 监控 </tag>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于MySQL的slow_log慢日志</title>
      <link href="/2023/04/03/guan-yu-mysql-de-slow-log-man-ri-zhi/"/>
      <url>/2023/04/03/guan-yu-mysql-de-slow-log-man-ri-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="慢-SQL-开启前查询"><a href="#慢-SQL-开启前查询" class="headerlink" title="慢 SQL 开启前查询"></a><strong>慢 SQL 开启前查询</strong></h1><p><strong>看一下当前mysql数据库是否开启了慢查询和存放位置</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql <span class="token operator">&gt;</span>  show variables like <span class="token string">'slow_query%'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202304032319719.png"></p><p><strong>查询 慢 SQL 的阈值 , 默认是 秒数</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql<span class="token operator">&gt;</span> show variables like <span class="token string">'long_query%'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>其他查询</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">show variables like <span class="token string">'slow_query_log_file'</span><span class="token punctuation">;</span>  慢日志输出方式FILE/TABLEshow variables like <span class="token string">'%query_cache%'</span><span class="token punctuation">;</span>        查询缓存show variables like <span class="token string">'%read_buffer_size%'</span><span class="token punctuation">;</span>   读入缓冲区大小show variables like <span class="token string">'%max_connections%'</span><span class="token punctuation">;</span>    连接数show variables like <span class="token string">'%tmp_table_size%'</span><span class="token punctuation">;</span>     临时表大小<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="开启慢-SQL"><a href="#开启慢-SQL" class="headerlink" title="开启慢  SQL"></a><strong>开启慢  SQL</strong></h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#临时开启</span><span class="token builtin class-name">set</span> global <span class="token assign-left variable">slow_query_log_file</span><span class="token operator">=</span><span class="token string">'/home/dpan/mysql/slow.log'</span><span class="token punctuation">;</span><span class="token builtin class-name">set</span> global <span class="token assign-left variable">long_query_time</span><span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">;</span><span class="token builtin class-name">set</span> global <span class="token assign-left variable">log_output</span><span class="token operator">=</span><span class="token string">'FILE,TABLE'</span><span class="token punctuation">;</span>  //默认是FILE。如果也有TABLE，则同时输出到mysql库的slow_log表中。<span class="token builtin class-name">set</span> global <span class="token assign-left variable">slow_query_log</span><span class="token operator">=</span><span class="token string">'ON'</span><span class="token punctuation">;</span><span class="token comment">#永久开启 修改配置文件my.cnf，在[mysqld]下的下方加入,保存后，重启服务</span><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>slow_query_log <span class="token operator">=</span> ON<span class="token comment"># linux    </span>slow_query_log_file <span class="token operator">=</span> /home/dpan/mysql/slow.log    long_query_time <span class="token operator">=</span> <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="慢日志分析"><a href="#慢日志分析" class="headerlink" title="慢日志分析"></a><strong>慢日志分析</strong></h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">使用 mysqldumpslow 命令mysqldumpslow能将相同的慢SQL归类，并统计出相同的SQL执行的次数，每次执行耗时多久、总耗时,每次返回的行数、总行数，以及客户端连接信息等.mysqldumpslow语法说明：-s ，按照什么方式起来排序。默认at，也就是按照平均查询时间来排序。都是按照倒序排列。al: average lock <span class="token function">time</span> 平均锁定时间ar: average rows sent 平均返回行数at: average query <span class="token function">time</span> 平均查询时间c: count 总执行次数l: lock <span class="token function">time</span> 总锁定时间r: rows sent 总返回行数t: query <span class="token function">time</span> 总查询时间-t ，show the <span class="token function">top</span> n queries，显示前多少名的记录-a ，默认不开启这个选项。mysqldumpslow将相似的SQL的值（字符串或者数字）替换为N，开启该选项，则显示真实值。不开启该选项，有点类似于Oracle的绑定变量的记录。-g ，类似于grep命令，过滤出需要的信息。如，只查询A表的慢查询记录。-l ，总时间中包含锁定时间<span class="token comment">#参考： &lt;https://blog.csdn.net/zhougongping/article/details/122377129&gt;</span><span class="token comment">#耗时最长的10个SQL</span>mysqldumpslow -t <span class="token number">10</span> slow.log<span class="token comment">#执行次数最多的10个sql语句</span>mysqldumpslow -s c -t <span class="token number">10</span> slow.log<span class="token comment">#获取条数最多的10个sql</span>mysqldumpslow -s r -t <span class="token number">10</span> slow.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows系统远程桌面连接CentOS7</title>
      <link href="/2023/04/03/windows-xi-tong-yuan-cheng-zhuo-mian-lian-jie-centos7/"/>
      <url>/2023/04/03/windows-xi-tong-yuan-cheng-zhuo-mian-lian-jie-centos7/</url>
      
        <content type="html"><![CDATA[<p>开始前请确保你有能上网的主机两部（一个是CentOS7系统，一个是Windows10系统）</p><p>1、用SSH  root用户登录Centos主机； </p><p>2、检查你的centos是否装了epel库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># rpm -qa | grep epel</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果没有就安装：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># yum install -y epel-release</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、安装xrdp</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># yum install -y xrdp</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、安装tigervnc-server</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># yum install -y tigervnc-server</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5、为用户root设置vnc密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># vncpasswd root</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6、配置或关闭SELinux</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">查看SELinux状态 命令：<span class="token comment"># /usr/sbin/sestatus -v</span>临时关闭SELinux 命令：<span class="token comment"># setenforce 0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>7、关闭防火墙或者不关闭防火墙，打开3389端口命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># firewall-cmd --permanent --zone=public --add-port=3389/tcp</span><span class="token comment"># firewall-cmd --reload</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>8、启动xrdp服务，并且设置为开机启动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">启动服务命令：systemctl start xrdp开机启动命令：systemctl <span class="token builtin class-name">enable</span> xrdp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>9、Win系统下“Win+R”键，在弹出的“运行”框中输入“mstsc“命令，按“确定”，打开Windows远程连接，输入IP地址开始远程连接，在弹出的Xrdp用户验证窗口中输入CentOS7的用户名和密码登录即可</p><h3 id="连接Windows时，远程连接出现-登陆失败：用户账户限制-解决方案"><a href="#连接Windows时，远程连接出现-登陆失败：用户账户限制-解决方案" class="headerlink" title="连接Windows时，远程连接出现 登陆失败：用户账户限制 解决方案"></a><strong>连接Windows时，远程连接出现 登陆失败：用户账户限制 解决方案</strong></h3><p>远程电脑 打开 控制面板–&gt;管理工具–&gt;本地安全策略–&gt;本地策略–&gt;安全选项–&gt;账户：使用空密码的本地账户只允许进行控制台登录 把这项禁用</p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于root登录时权限报错问题</title>
      <link href="/2023/02/27/guan-yu-root-deng-lu-shi-quan-xian-bao-cuo-wen-ti/"/>
      <url>/2023/02/27/guan-yu-root-deng-lu-shi-quan-xian-bao-cuo-wen-ti/</url>
      
        <content type="html"><![CDATA[<h3 id="1、故障"><a href="#1、故障" class="headerlink" title="1、故障"></a><strong>1、故障</strong></h3><p>登录显示Permission  denied，查看一开始以为是密码有问题，进入单用户模式把密码改成123456了，然后重启，登录还是报Permission denied；后来ssh -v IP查看，密码认证环节已通过，系统有种登录后立马退出的现象</p><h3 id="2、排查"><a href="#2、排查" class="headerlink" title="2、排查"></a>2、排查</h3><p>ssh -vvv   IP显示如下：</p><pre class="line-numbers language-none"><code class="language-none">......debug3: channel 0: close_fds r -1 w -1 e 6 c -1debug3: Wrote 32 bytes for a total of 2389debug3: Wrote 64 bytes for a total of 2453Connection to mahavira closed.Transferred: sent 2224, received 2272 bytes, in 0.1 secondsBytes per second: sent 22447.6, received 22932.1debug1: Exit status 254<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进入单用户模式  修改了root密码发现还是Permission denied</p><p>应该是ssh和pam出现了问题</p><p>继续进入单用户  更改了pam和ssh对应目录赋予777权限</p><p>然后重启，登录正常。</p><h3 id="3、其它问题"><a href="#3、其它问题" class="headerlink" title="3、其它问题"></a>3、其它问题</h3><p>但是ssh服务器无法启动了 </p><pre class="line-numbers language-none"><code class="language-none">#使用命令 sshd -t进行检查，发现ssh目录的文件权限不对，不能都用777#权限应保持为：-rw-r--r--. 1 root root     581843 8月  26 2021 moduli-rw-r--r--. 1 root root       2276 8月  26 2021 ssh_config-rw-------  1 root root       3906 2月   2 08:43 sshd_config-rw-r-----  1 root ssh_keys    227 12月 27 17:22 ssh_host_ecdsa_key-rw-r--r--  1 root root        162 12月 27 17:22 ssh_host_ecdsa_key.pub-rw-r-----  1 root ssh_keys    387 12月 27 17:22 ssh_host_ed25519_key-rw-r--r--  1 root root         82 12月 27 17:22 ssh_host_ed25519_key.pub-rw-r-----  1 root ssh_keys   1679 12月 27 17:22 ssh_host_rsa_key-rw-r--r--  1 root root        382 12月 27 17:22 ssh_host_rsa_key.pub、更改对应文件权限后，重启ssh完成修复<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux忘记密码的重置方法</title>
      <link href="/2023/02/27/linux-wang-ji-mi-ma-de-chong-zhi-fang-fa/"/>
      <url>/2023/02/27/linux-wang-ji-mi-ma-de-chong-zhi-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="一、进入编辑模式"><a href="#一、进入编辑模式" class="headerlink" title="一、进入编辑模式"></a>一、进入编辑模式</h2><p>在开启系统后，出现如下界面时，将光标放在第一个上，之后按e，进入编辑模式。</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202302272203727.png"></p><h2 id="二、重启系统"><a href="#二、重启系统" class="headerlink" title="二、重启系统"></a>二、重启系统</h2><p>之后系统还会进入到如下界面，此时按动键盘上下键，大概在倒数第二行末尾的位置找到UTF-8，之后在后面加入rd.break。具体操作如下所示：<br>这是一开始启动的界面：</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202302272203091.png"></p><p>完成上述操作后，键盘Ctrl+x重启。</p><h2 id="三、重挂载"><a href="#三、重挂载" class="headerlink" title="三、重挂载"></a>三、重<a href="https://so.csdn.net/so/search?q=%E6%8C%82%E8%BD%BD&amp;spm=1001.2101.3001.7020">挂载</a></h2><p>重启后会进入到特殊的命令行界面，之后执行命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mount</span> -o remount,rw /sysroot<span class="token function">chroot</span> /sysroot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202302272204527.png"></p><h2 id="四、修改密码"><a href="#四、修改密码" class="headerlink" title="四、修改密码"></a>四、修改密码</h2><p>在完成上述操作后，就可以修改系统密码了</p><p>另提供一条快捷命令</p><pre class="line-numbers language-none"><code class="language-none">echo "123456" |passwd --stdin root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="五、退出并重启"><a href="#五、退出并重启" class="headerlink" title="五、退出并重启"></a>五、退出并重启</h2><p>在完成上述操作后，就可以退出并重启了，命令是exit和reboot。重启后在输入root密码的时候就可以输入我们之前修改过的root密码了。</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202302272205405.png"></p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线上redis宕机的排查处理-快照持久化</title>
      <link href="/2022/09/23/xian-shang-redis-dang-ji-de-pai-cha-chu-li/"/>
      <url>/2022/09/23/xian-shang-redis-dang-ji-de-pai-cha-chu-li/</url>
      
        <content type="html"><![CDATA[<h1 id="线上redis宕机的排查处理-快照持久化"><a href="#线上redis宕机的排查处理-快照持久化" class="headerlink" title="线上redis宕机的排查处理-快照持久化"></a>线上redis宕机的排查处理-快照持久化</h1><h2 id="一、过程"><a href="#一、过程" class="headerlink" title="一、过程"></a>一、过程</h2><p>早上看到监控，后面了解到由于开发大批量的同步数据，才导致redis节点宕机了，线上redis部署在3台服务器，6个节点采用3主3从</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202209232143573.png"></p><h2 id="二、排查"><a href="#二、排查" class="headerlink" title="二、排查"></a>二、排查</h2><p>连接到线上服务器开始排查，查看进程，发现对应端口的进程已经没有了，直接重启了对应节点的redis</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./redis-server /home/dpan/soft/redis-5.0.10/cluster-conf/6380/redis.conf <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后发现，redis的两个节点都挂掉了</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202209232142712.png"></p><p>然后查看对应的运行日志，发现到这里就卡住了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">12361</span>:C <span class="token number">23</span> Sep <span class="token number">2022</span> <span class="token number">10</span>:27:27.604 <span class="token comment"># oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span><span class="token number">12361</span>:C <span class="token number">23</span> Sep <span class="token number">2022</span> <span class="token number">10</span>:27:27.604 <span class="token comment"># Redis version=5.0.10, bits=64, commit=00000000, modified=0, pid=12361, just started</span><span class="token number">12361</span>:C <span class="token number">23</span> Sep <span class="token number">2022</span> <span class="token number">10</span>:27:27.604 <span class="token comment"># Configuration loaded</span><span class="token number">12361</span>:M <span class="token number">23</span> Sep <span class="token number">2022</span> <span class="token number">10</span>:27:27.605 * Increased maximum number of <span class="token function">open</span> files to <span class="token number">10032</span> <span class="token punctuation">(</span>it was originally <span class="token builtin class-name">set</span> to <span class="token number">1024</span><span class="token punctuation">)</span>.<span class="token number">12361</span>:M <span class="token number">23</span> Sep <span class="token number">2022</span> <span class="token number">10</span>:27:27.606 * Node configuration loaded, I'm 9bb67931114d794bc2cbd2d30eb0d8c4fcd8ca84<span class="token number">12361</span>:M <span class="token number">23</span> Sep <span class="token number">2022</span> <span class="token number">10</span>:27:27.607 * Running <span class="token assign-left variable">mode</span><span class="token operator">=</span>cluster, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">6381</span>.<span class="token number">12361</span>:M <span class="token number">23</span> Sep <span class="token number">2022</span> <span class="token number">10</span>:27:27.607 <span class="token comment"># Server initialized</span><span class="token number">12361</span>:M <span class="token number">23</span> Sep <span class="token number">2022</span> <span class="token number">10</span>:27:27.608 * Reading RDB preamble from AOF file<span class="token punctuation">..</span>.<span class="token number">12361</span>:M <span class="token number">23</span> Sep <span class="token number">2022</span> <span class="token number">10</span>:28:12.122 * Reading the remaining AOF tail<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>排查后发现启动一个节点居然占用内存10G多，2个节点自然是无法启动的，只能启一个节点，这显然是不正常的，以为修改redis启动内存可以解决这个问题，后来发现没有用</p><p><strong>因为在Redis中持久化的方式有两种，一种是快照持久化，一种是AOF持久化</strong></p><p><strong>快照持久化也叫RDB持久化方式。就是通过拍摄快照的方式来实现持久化，将某个时间的内存数据存储在一个rdb文件中。在redis服务重新启动的时候会加载rdb文件中的数据</strong></p><h2 id="三、处理"><a href="#三、处理" class="headerlink" title="三、处理"></a>三、处理</h2><p>redis中的快照持久化默认是开启的，在redis.conf配置文件中有相关的配置选项</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">################################ SNAPSHOTTING  ################################</span><span class="token comment">#</span><span class="token comment"># Save the DB on disk:</span><span class="token comment">#</span><span class="token comment">#   save &lt;seconds&gt; &lt;changes&gt;</span><span class="token comment">#</span><span class="token comment">#   Will save the DB if both the given number of seconds and the given</span><span class="token comment">#   number of write operations against the DB occurred.</span><span class="token comment">#</span><span class="token comment">#   In the example below the behaviour will be to save:</span><span class="token comment">#   after 900 sec (15 min) if at least 1 key changed</span><span class="token comment">#   after 300 sec (5 min) if at least 10 keys changed</span><span class="token comment">#   after 60 sec if at least 10000 keys changed</span><span class="token comment">#</span><span class="token comment">#   Note: you can disable saving completely by commenting out all "save" lines.</span><span class="token comment">#</span><span class="token comment">#   It is also possible to remove all the previously configured save</span><span class="token comment">#   points by adding a save directive with a single empty string argument</span><span class="token comment">#   like in the following example:</span><span class="token comment">#</span><span class="token comment">#   save ""</span>save <span class="token number">900</span> <span class="token number">1</span>   <span class="token comment">#900秒内至少有1个key被更改就执行快照</span>save <span class="token number">300</span> <span class="token number">10</span>  <span class="token comment">#300内描述至少有10个key被更改就执行快照</span>save <span class="token number">60</span> <span class="token number">10000</span>  <span class="token comment">#60秒内至少有10000个key被更改就执行快照</span><span class="token comment"># By default Redis will stop accepting writes if RDB snapshots are enabled</span><span class="token comment"># (at least one save point) and the latest background save failed.</span><span class="token comment"># This will make the user aware (in a hard way) that data is not persisting</span><span class="token comment"># on disk properly, otherwise chances are that no one will notice and some</span><span class="token comment"># disaster will happen.</span><span class="token comment">#</span><span class="token comment"># If the background saving process will start working again Redis will</span><span class="token comment"># automatically allow writes again.</span><span class="token comment">#</span><span class="token comment"># However if you have setup your proper monitoring of the Redis server</span><span class="token comment"># and persistence, you may want to disable this feature so that Redis will</span><span class="token comment"># continue to work as usual even if there are problems with disk,</span><span class="token comment"># permissions, and so forth.</span>stop-writes-on-bgsave-error <span class="token function">yes</span> <span class="token comment">#拍摄快照失败是否继续执行写命令</span><span class="token comment"># Compress string objects using LZF when dump .rdb databases?</span><span class="token comment"># For default that's set to 'yes' as it's almost always a win.</span><span class="token comment"># If you want to save some CPU in the saving child set it to 'no' but</span><span class="token comment"># the dataset will likely be bigger if you have compressible values or keys.</span>rdbcompression <span class="token function">yes</span> <span class="token comment">#是否对快照文件进行压缩</span><span class="token comment"># Since version 5 of RDB a CRC64 checksum is placed at the end of the file.</span><span class="token comment"># This makes the format more resistant to corruption but there is a performance</span><span class="token comment"># hit to pay (around 10%) when saving and loading RDB files, so you can disable it</span><span class="token comment"># for maximum performances.</span><span class="token comment">#</span><span class="token comment"># RDB files created with checksum disabled have a checksum of zero that will</span><span class="token comment"># tell the loading code to skip the check.</span>rdbchecksum <span class="token function">yes</span> <span class="token comment">#是否进行数据校验</span><span class="token comment"># The filename where to dump the DB</span>dbfilename dump.rdb <span class="token comment">#快照文件存储的名称</span><span class="token comment"># The working directory.</span><span class="token comment">#</span><span class="token comment"># The DB will be written inside this directory, with the filename specified</span><span class="token comment"># above using the 'dbfilename' configuration directive.</span><span class="token comment">#</span><span class="token comment"># The Append Only File will also be created inside this directory.</span><span class="token comment">#</span><span class="token comment"># Note that you must specify a directory here, not a file name.</span><span class="token function">dir</span> ./ <span class="token comment">#快照文件存储的位置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>快照文件默认会和conf文件在统计目录，名称为dump.rdb</p><h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><blockquote><p>优点<br>RDB文件是一个很简洁的单文件，它保存了某个时间点的Redis数据，很适合用于做备份。你可以设定一个时间点对RDB文件进行归档，这样就能在需要的时候很轻易的把数据恢复到不同的版本。<br>RDB很适合用于灾备。单文件很方便就能传输到远程的服务器上。<br>RDB的性能很好，需要进行持久化时，主进程会fork一个子进程出来，然后把持久化的工作交给子进程，自己不会有相关的I/O操作。<br>比起AOF，在数据量比较大的情况下，RDB的启动速度更快。</p></blockquote><blockquote><p>缺点<br>RDB容易造成数据的丢失。假设每5分钟保存一次快照，如果Redis因为某些原因不能正常工作，那么从上次产生快照到Redis出现问题这段时间的数据就会丢失了。<br>RDB使用fork()产生子进程进行数据的持久化，如果数据比较大的话可能就会花费点时间，造成Redis停止服务几毫秒。如果数据量很大且CPU性能不是很好的时候，停止服务的时间甚至会到1秒</p></blockquote><h3 id="配置里禁用持久化快照"><a href="#配置里禁用持久化快照" class="headerlink" title="配置里禁用持久化快照"></a>配置里禁用持久化快照</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#1.在redis.conf配置文件中注释掉所有的save配置</span><span class="token comment">#2.在最后一条save配置追加吃命令</span>save <span class="token string">""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最后解决方法：禁用快照持久化，并且删除dump.rdb，然后重启所有节点的redis服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./redis-server /home/dpan/soft/redis-5.0.10/cluster-conf/6380/redis.conf <span class="token operator">&amp;</span>./redis-server /home/dpan/soft/redis-5.0.10/cluster-conf/6381/redis.conf <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="四、恢复"><a href="#四、恢复" class="headerlink" title="四、恢复"></a>四、恢复</h2><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202209232143777.png"></p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 报错&amp;告警 </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7.9迁移anolis7.9</title>
      <link href="/2022/09/22/centos7-9-qian-yi-anolis7-9/"/>
      <url>/2022/09/22/centos7-9-qian-yi-anolis7-9/</url>
      
        <content type="html"><![CDATA[<h1 id="centos7-9迁移升级anolis7-9"><a href="#centos7-9迁移升级anolis7-9" class="headerlink" title="centos7.9迁移升级anolis7.9"></a>centos7.9迁移升级anolis7.9</h1><p>官方社区：</p><p><a href="https://openanolis.cn/sig/migration/doc/451732372594279514">https://openanolis.cn/sig/migration/doc/451732372594279514</a> </p><p>官方镜像：</p><p><a href="https://mirrors.openanolis.cn/anolis/">https://mirrors.openanolis.cn/anolis/</a></p><h2 id="1、迁移注意事项"><a href="#1、迁移注意事项" class="headerlink" title="1、迁移注意事项"></a><strong>1、迁移注意事项</strong></h2><p>Anolis OS 7生态上和依赖管理上保持跟CentOS7.x兼容，一键式迁移脚本centos2anolis.py，实现CentOS7.x到Anolis OS 7的平滑迁移。</p><p>使用迁移脚本前需要注意如下事项：</p><ul><li>迁移涉及到软件包的重新安装，是不可逆过程，执行迁移前务必做好系统备份。</li><li>迁移过程涉及到访问Anolis OS的官方repo，需要确保待迁移环境网络能够正常访问Anolis OS repo。</li><li><font color="#dd0000">需要使用root用户执行</font>。</li><li>迁移过程依赖于yum，确保yum组件能够正常运行。</li><li>迁移脚本提供了Anolis OS repo访问加速的功能，如果访问Anolis OS官方repo速度较慢，可以通过-s选项进行加速访问。</li><li>Anolis OS 不提供i686架构的软件包，如您系统上安装了CentOS的i686架构的软件包，则无法正常迁移。</li></ul><h2 id="2、部署迁移工具"><a href="#2、部署迁移工具" class="headerlink" title="2、部署迁移工具"></a>2、部署迁移工具</h2><h3 id="一、-从本地-yum-源安装迁移工具"><a href="#一、-从本地-yum-源安装迁移工具" class="headerlink" title="一、 从本地 yum 源安装迁移工具"></a><strong>一、 从本地 yum 源安装迁移工具</strong></h3><p>如果待迁移系统无法访问龙蜥 mirror，首先建议在内网搭建一套本地yum源 ，然后通过本地源安装迁移工具。</p><ul><li><p>搭建内网yum源</p><p>一、搭建部署nginx(注意关闭firewalld和selinux)</p><p>这里作为演示，服务器ip：192.168.10.22，在/home/dpan新建anolis目录作为yum的源目录</p><p>二、配置nginx.conf的配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># vi /etc/nginx/conf.d/nginx.conf</span><span class="token comment"># /home/dpan/anolis作为源目录</span>server <span class="token punctuation">{</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>    server_name  localhost<span class="token punctuation">;</span>        root   /home/dpan<span class="token punctuation">;</span>    error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  /50x.html<span class="token punctuation">;</span>    location /anolis <span class="token punctuation">{</span>        autoindex on<span class="token punctuation">;</span>        autoindex_exact_size off<span class="token punctuation">;</span>        autoindex_localtime on<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据需要将所需资源放入目录：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">RSYNC_PASSWORD</span><span class="token operator">=</span>Rsync@2020 <span class="token function">rsync</span> -avz rsync://rsync_user@rsync.openanolis.cn/anolis/migration /home/dpan/anolis<span class="token assign-left variable">RSYNC_PASSWORD</span><span class="token operator">=</span>Rsync@2020 <span class="token function">rsync</span> -avz rsync://rsync_user@rsync.openanolis.cn/anolis/7.9 /home/dpan/anolis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>新建anolis.repo放入/etc/yum.repo.d</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># vi /etc/yum.repos.d/anolis.repo</span><span class="token punctuation">[</span>anolis<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>anolis<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://192.168.10.22/anolis       <span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>        <span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>浏览器访问：<a href="http://192.168.10.22/anolis">http://192.168.10.22/anolis</a> 检测是否搭建完成</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202209222053586.png"></p><h3 id="其他无法访问互联网机器运行以下命令："><a href="#其他无法访问互联网机器运行以下命令：" class="headerlink" title="其他无法访问互联网机器运行以下命令："></a>其他无法访问互联网机器运行以下命令：</h3></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> http://local.repo.com/anolis/migration/anolis-migration.repo -O /etc/yum.repos.d/anolis-migration.repo<span class="token comment"># 参考配置：</span><span class="token comment">#wget  http://192.168.10.22/anolis/migration/anolis-migration.repo -O /etc/yum.repos.d/anolis-migration.repo</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后执行下述命令将 /etc/yum.repos.d/anolis-migration.repo 里面的baseurl地址替换为本地源地址。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 替换其他节点的anolis-migration.repo配置</span><span class="token function">sed</span> -i <span class="token string">"s#baseurl=https://mirrors.openanolis.cn/#baseurl=http://local.repo.com/#"</span>/etc/yum.repos.d/anolis-migration.repo<span class="token function">sed</span> -i <span class="token string">"s#gpgkey=https://mirrors.openanolis.cn/#gpgkey=http://local.repo.com/#"</span> /etc/yum.repos.d/anolis-migration.repo<span class="token comment"># 参考命令：</span><span class="token comment">#sed -i "s#baseurl=https://mirrors.openanolis.cn/#baseurl=http://192.168.10.22/#" /etc/yum.repos.d/anolis-migration.repo</span><span class="token comment">#sed -i "s#gpgkey=https://mirrors.openanolis.cn/#gpgkey=http://http://192.168.10.22/#" /etc/yum.repos.d/anolis-migration.repo</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>anolis-migration.repo参考配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Anolis OS migration repo</span><span class="token punctuation">[</span>migration<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>Anolis OS - migration repo<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://192.168.10.22/anolis/migration/<span class="token variable">$basearch</span>/os/<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>http://192.168.10.22/anolis/RPM-GPG-KEY-ANOLIS<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">[</span>migration-debug<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>Anolis OS - migration debug repo<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://192.168.10.22/anolis/migration/<span class="token variable">$basearch</span>/debug/<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>http://192.168.10.22/anolis/RPM-GPG-KEY-ANOLIS<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">[</span>migration-source<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>Anolis OS - migration <span class="token builtin class-name">source</span> repo<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://192.168.10.22/anolis/migration/source/<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>http://192.168.10.22/anolis/RPM-GPG-KEY-ANOLIS<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>安装迁移工具centos2anolis：</p><pre class="line-numbers language-none"><code class="language-none">yum -y install centos2anolis<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="二、-从社区-yum-源安装迁移工具-依赖网络"><a href="#二、-从社区-yum-源安装迁移工具-依赖网络" class="headerlink" title="二、 从社区 yum 源安装迁移工具(依赖网络)"></a>二、 从社区 yum 源安装迁移工具(依赖网络)</h3><p>如果待迁移系统可以联网，则下载迁移工具软件源：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://mirrors.openanolis.cn/anolis/migration/anolis-migration.repo -O /etc/yum.repos.d/anolis-migration.repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装迁移工具centos2anolis：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum -y <span class="token function">install</span> centos2anolis<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、-迁移执行"><a href="#3、-迁移执行" class="headerlink" title="3、 迁移执行"></a>3、 迁移执行</h2><h3 id="一、使用本地-yum-源执行迁移"><a href="#一、使用本地-yum-源执行迁移" class="headerlink" title="一、使用本地 yum 源执行迁移"></a>一、使用本地 yum 源执行迁移</h3><p>在无法接入到互联网时，可以使用本地源迁移系统。</p><ol><li>在运行工具之前，新建或者编辑Anolis仓库的repo文件：/etc/yum.repos.d/switch-to-anolis.repo (注意，请确保文件名为 switch-to-anolis.repo), 将对应的 repo baseurl 地址改成本地源 repo 地址， 譬如，假设本地源地址为 <a href="https://gitee.com/link?target=http://local.repo.com/anolis">http://local.repo.com/anolis</a> , 则配置文件如下</li></ol><pre class="line-numbers language-none"><code class="language-none">[an7_baseos]name=AnolisOS-7 - BaseOSbaseurl=http://local.repo.com/anolis/7.9/os/$basearch/osgpgcheck=0enabled=1[an7_updates]name=AnolisOS-7 - Updatesbaseurl=http://local.repo.com/anolis/7.9/updates/$basearch/osgpgcheck=0enabled=1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考配置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>an7_baseos<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>AnolisOS-7 - BaseOS<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://192.168.10.22/anolis/7.9/os/<span class="token variable">$basearch</span>/os<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">[</span>an7_updates<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>AnolisOS-7 - Updates<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://192.168.10.22/anolis/7.9/updates/<span class="token variable">$basearch</span>/os<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>执行下面命令进行迁移</li></ol><pre class="line-numbers language-none"><code class="language-none">centos2anolis.py -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述命令是默认迁移到带 ANCK 内核的龙蜥OS，如果你想迁移到带 RHCK 内核的龙蜥OS请执行下面的命令进行迁移</p><pre class="line-numbers language-none"><code class="language-none">centos2anolis.py -l --rhck<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="二、使用社区-yum-源执行迁移-依赖网络"><a href="#二、使用社区-yum-源执行迁移-依赖网络" class="headerlink" title="二、使用社区 yum 源执行迁移(依赖网络)"></a>二、使用社区 yum 源执行迁移(依赖网络)</h3><p>直接执行下述命令即可</p><pre class="line-numbers language-none"><code class="language-none">centos2anolis.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述命令是默认迁移到带 ANCK 内核的龙蜥OS，如果你想迁移到带 RHCK 内核的龙蜥OS请执行下面的命令进行迁移</p><pre class="line-numbers language-none"><code class="language-none">centos2anolis.py --rhck<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>迁移完成后，系统会提示如下信息，表示迁移成功，重启即可进入Anolis OS系统</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202209222053938.png"></p><h2 id="4、迁移后验证"><a href="#4、迁移后验证" class="headerlink" title="4、迁移后验证"></a>4、迁移后验证</h2><p>查看OS版本：</p><pre class="line-numbers language-none"><code class="language-none"># cat /etc/os-releaseNAME="Anolis OS"VERSION="7.9"ID="anolis"ID_LIKE="rhel fedora centos"VERSION_ID="7.9"PRETTY_NAME="Anolis OS 7.9"ANSI_COLOR="0;31"HOME_URL="https://openanolis.cn/"BUG_REPORT_URL="https://bugs.openanolis.cn/"CENTOS_MANTISBT_PROJECT="CentOS-7"CENTOS_MANTISBT_PROJECT_VERSION="7"REDHAT_SUPPORT_PRODUCT="centos"REDHAT_SUPPORT_PRODUCT_VERSION="7"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> anolis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 迁移 </tag>
            
            <tag> anolis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统漏洞修复shell脚本</title>
      <link href="/2022/09/14/xi-tong-lou-dong-xiu-fu-shell-jiao-ben/"/>
      <url>/2022/09/14/xi-tong-lou-dong-xiu-fu-shell-jiao-ben/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment">#######################################################</span><span class="token comment">#1.增加审计用户 设置密码 设置权限</span><span class="token comment">#######################################################</span><span class="token assign-left variable">password</span><span class="token operator">=</span><span class="token string">'Simple@2022!'</span><span class="token function">useradd</span> shenji<span class="token builtin class-name">echo</span> <span class="token variable">$password</span> <span class="token operator">|</span> <span class="token function">passwd</span> shenji --stdin <span class="token operator">&gt;</span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token builtin class-name">echo</span> <span class="token string">"已修改shenji密码"</span><span class="token function">chmod</span> -v u+w /etc/sudoers<span class="token function">cat</span> <span class="token operator">&gt;&gt;</span> /etc/sudoers <span class="token operator">&lt;&lt;</span><span class="token string">EOFshenji ALL = (root) NOPASSWD: /usr/bin/cat , /usr/bin/less , /usr/bin/more , /usr/bin/tail , /usr/bin/headEOF</span><span class="token comment">#######################################################</span><span class="token comment">#2.umask参数由022修改为027</span><span class="token comment">#######################################################</span><span class="token function">sed</span> -i <span class="token string">'swumask.*022wumask 027wg'</span> /etc/profile<span class="token builtin class-name">echo</span> <span class="token string">"已修改umask"</span><span class="token comment">#######################################################</span><span class="token comment">#3.su权限</span><span class="token comment">#######################################################</span><span class="token function">cat</span> <span class="token operator">&gt;&gt;</span> /etc/pam.d/su <span class="token operator">&lt;&lt;</span><span class="token string">EOFauth            required        pam_wheel.so use_uidEOF</span><span class="token builtin class-name">echo</span> <span class="token string">"已修改su权限"</span><span class="token comment">#######################################################</span><span class="token comment">#4.配置口令有效期策略</span><span class="token comment">#######################################################</span><span class="token comment">#sed -i 'swPASS_MAX_DAYS.*99999wPASS_MAX_DAYS   90wg' /etc/login.defs</span><span class="token comment">#sed -i 'swPASS_MIN_DAYS.*0wPASS_MAX_DAYS   80wg' /etc/login.defs</span><span class="token comment">#sed -i 'swPASS_MIN_LEN.*5wPASS_MAX_DAYS   10wg' /etc/login.defs</span><span class="token comment">#sed -i 'swPASS_WARN_AGE.*7wPASS_MAX_DAYS   30wg' /etc/login.defs</span><span class="token function">cat</span> <span class="token operator">&gt;</span>  /etc/login.defs <span class="token operator">&lt;&lt;</span><span class="token string">EOF## Please note that the parameters in this configuration file control the# behavior of the tools from the shadow-utils component. None of these# tools uses the PAM mechanism, and the utilities that use PAM (such as the# passwd command) should therefore be configured elsewhere. Refer to# /etc/pam.d/system-auth for more information.## *REQUIRED*#   Directory where mailboxes reside, _or_ name of file, relative to the#   home directory.  If you _do_ define both, MAIL_DIR takes precedence.#   QMAIL_DIR is for Qmail##QMAIL_DIR      MaildirMAIL_DIR        /var/spool/mail#MAIL_FILE      .mail# Password aging controls:##       PASS_MAX_DAYS   Maximum number of days a password may be used.#       PASS_MIN_DAYS   Minimum number of days allowed between password changes.#       PASS_MIN_LEN    Minimum acceptable password length.#       PASS_WARN_AGE   Number of days warning given before a password expires.#PASS_MAX_DAYS   180PASS_MIN_DAYS   80PASS_MIN_LEN    10PASS_WARN_AGE   30## Min/max values for automatic uid selection in useradd#UID_MIN                  1000UID_MAX                 60000# System accountsSYS_UID_MIN               201SYS_UID_MAX               999## Min/max values for automatic gid selection in groupadd#GID_MIN                  1000GID_MAX                 60000# System accountsSYS_GID_MIN               201SYS_GID_MAX               999## If defined, this command is run when removing a user.# It should remove any at/cron/print jobs etc. owned by# the user to be removed (passed as the first argument).##USERDEL_CMD    /usr/sbin/userdel_local## If useradd should create home directories for users by default# On RH systems, we do. This option is overridden with the -m flag on# useradd command line.#CREATE_HOME     yes# The permission mask is initialized to this value. If not specified,# the permission mask will be initialized to 022.UMASK           077# This enables userdel to remove user groups if no members exist.#USERGROUPS_ENAB yes# Use SHA512 to encrypt password.ENCRYPT_METHOD SHA512EOF</span><span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/pam.d/system-auth <span class="token operator">&lt;&lt;</span><span class="token string">EOF#%PAM-1.0# This file is auto-generated.# User changes will be destroyed the next time authconfig is run.auth required pam_tally2.so deny=3 unlock_time=300 even_deny_root root_unlock_time=300account required pam_tally2.soauth        required      pam_env.soauth        required      pam_faildelay.so delay=2000000auth        sufficient    pam_fprintd.soauth        sufficient    pam_unix.so nullok try_first_passauth        requisite     pam_succeed_if.so uid &gt;= 1000 quiet_successauth        required      pam_deny.soaccount     required      pam_unix.soaccount     sufficient    pam_localuser.soaccount     sufficient    pam_succeed_if.so uid &lt; 1000 quietaccount     required      pam_permit.sopassword    requisite     pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type=password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtokpassword    required      pam_deny.sosession     optional      pam_keyinit.so revokesession     required      pam_limits.so-session     optional      pam_systemd.sosession     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uidsession     required      pam_unix.sopassword requisite pam_cracklib.so retry=3 difok=3 minlen=10 ucredit=-1 lcredit=-2 dcredit=-1 ocredit=-1EOF</span><span class="token builtin class-name">echo</span> <span class="token string">"已修改口令有效期策略"</span><span class="token comment">#######################################################</span><span class="token comment">#5.配置登录失败处理策略</span><span class="token comment">#######################################################</span><span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/pam.d/system-auth <span class="token operator">&lt;&lt;</span><span class="token string">EOF#%PAM-1.0# This file is auto-generated.# User changes will be destroyed the next time authconfig is run.auth required pam_tally2.so deny=3 unlock_time=300 even_deny_root root_unlock_time=300account required pam_tally2.so                          auth        required      pam_env.soauth        required      pam_faildelay.so delay=2000000auth        sufficient    pam_fprintd.soauth        sufficient    pam_unix.so nullok try_first_passauth        requisite     pam_succeed_if.so uid &gt;= 1000 quiet_successauth        required      pam_deny.soaccount     required      pam_unix.soaccount     sufficient    pam_localuser.soaccount     sufficient    pam_succeed_if.so uid &lt; 1000 quietaccount     required      pam_permit.sopassword    requisite     pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type=password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtokpassword    required      pam_deny.sosession     optional      pam_keyinit.so revokesession     required      pam_limits.so-session     optional      pam_systemd.sosession     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uidsession     required      pam_unix.soEOF</span><span class="token builtin class-name">echo</span> <span class="token string">"已修改配置登录失败处理策略"</span><span class="token comment">#######################################################</span><span class="token comment">#6.日志备份</span><span class="token comment">#######################################################</span><span class="token function">mkdir</span> /home/dpan/log<span class="token function">touch</span> /home/dpan/log/logback.sh<span class="token function">cat</span> <span class="token operator">&gt;&gt;</span> /home/dpan/log/logback.sh <span class="token operator">&lt;&lt;</span><span class="token string">EOFcd /home/dpan/log tar -zcf messages_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d<span class="token variable">)</span></span>.zip /var/log/messagestar -zcf secure_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d<span class="token variable">)</span></span>.zip /var/log/securetar -zcf audit_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d<span class="token variable">)</span></span>.zip /var/log/audit/audit.logtar -zcf nginx_access_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d<span class="token variable">)</span></span>.zip /var/log/nginx/access.logtar -zcf nginx_error_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d<span class="token variable">)</span></span>.zip /var/log/nginx/error.logtar -zcf nginx_8081_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d<span class="token variable">)</span></span>.zip /etc/nginx/conf.d/8081.conftar -zcf nginx_default__<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d<span class="token variable">)</span></span>.zip /etc/nginx/conf.d/default.confEOF</span><span class="token function">chmod</span> +x /home/dpan/log/logback.sh<span class="token function">cat</span> <span class="token operator">&gt;&gt;</span>/var/spool/cron/root <span class="token operator">&lt;&lt;</span><span class="token string">EOF 30 23 * * * sh /home/dpan/log/logback.shEOF</span><span class="token builtin class-name">echo</span> <span class="token string">"已修改日志备份"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 漏洞修复 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞修复 </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx漏洞&amp;报错合集</title>
      <link href="/2022/08/11/nginx-lou-dong-xiu-fu-he-ji/"/>
      <url>/2022/08/11/nginx-lou-dong-xiu-fu-he-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="一、检测到隐藏目录"><a href="#一、检测到隐藏目录" class="headerlink" title="一、检测到隐藏目录"></a>一、检测到隐藏目录</h2><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202208112033058.png"></p><h3 id="解决方法：对禁止的资源发布“404-Not-Found”响应状态代码，或者将其完全除去"><a href="#解决方法：对禁止的资源发布“404-Not-Found”响应状态代码，或者将其完全除去" class="headerlink" title="解决方法：对禁止的资源发布“404 - Not Found”响应状态代码，或者将其完全除去"></a>解决方法：对禁止的资源发布“404 - Not Found”响应状态代码，或者将其完全除去</h3><p>打开配置文件,修改配置:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/nginx/nginx.conferror_page <span class="token number">403</span> <span class="token operator">=</span><span class="token number">404</span> /404.html<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="二、nginx静态资源文件无法访问，403-forbidden错误"><a href="#二、nginx静态资源文件无法访问，403-forbidden错误" class="headerlink" title="二、nginx静态资源文件无法访问，403 forbidden错误"></a>二、nginx静态资源文件无法访问，403 forbidden错误</h2><h3 id="解决方法：检查之后发现是程序创建的文件夹没有访问权限导致的图片无法访问"><a href="#解决方法：检查之后发现是程序创建的文件夹没有访问权限导致的图片无法访问" class="headerlink" title="解决方法：检查之后发现是程序创建的文件夹没有访问权限导致的图片无法访问"></a>解决方法：检查之后发现是程序创建的文件夹没有访问权限导致的图片无法访问</h3><p>打开配置文件,修改配置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/nginx/nginx.confuser  root<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> 报错&amp;警告 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql初始化的问题</title>
      <link href="/2022/08/11/mysql-chu-shi-hua-de-wen-ti/"/>
      <url>/2022/08/11/mysql-chu-shi-hua-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql-初始化问题"><a href="#mysql-初始化问题" class="headerlink" title="mysql 初始化问题"></a>mysql 初始化问题</h1><h1 id="1、mysql-install-db初始化"><a href="#1、mysql-install-db初始化" class="headerlink" title="1、mysql_install_db初始化"></a>1、mysql_install_db初始化</h1><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202208112026723.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@test3 bin<span class="token punctuation">]</span><span class="token comment"># ./mysql_install_db --user=mysql --basedir=/home/dpan/soft/mysql/mysql --datadir=/home/dpan/soft/mysql/data/</span><span class="token number">2021</span>-05-14 <span class="token number">15</span>:32:04 <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> mysql_install_db is deprecated. Please consider switching to mysqld --initialize<span class="token number">2021</span>-05-14 <span class="token number">15</span>:32:09 <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> The bootstrap log isn't empty:<span class="token number">2021</span>-05-14 <span class="token number">15</span>:32:09 <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> <span class="token number">2021</span>-05-14T07:32:04.892924Z <span class="token number">0</span> <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> --bootstrap is deprecated. Please consider using --initialize instead<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>mysql_install_db 命令已经是弃用的，建议切换到mysqld –initialize命令</p><pre class="line-numbers language-css" data-language="css"><code class="language-css">mysql_install_db会把密码生成在/root/.mysql_secret<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="2、mysqld初始化"><a href="#2、mysqld初始化" class="headerlink" title="2、mysqld初始化"></a>2、mysqld初始化</h1><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202208112027224.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./mysqld --initialize --user<span class="token operator">=</span>mysql --basedir<span class="token operator">=</span>/home/dpan/soft/mysql/mysql --datadir<span class="token operator">=</span>/home/dpan/soft/mysql/data/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>这种方式会将初始密码显示出来，妥善保管</strong></p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 报错&amp;告警 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rabbit关于hosts的报错</title>
      <link href="/2022/08/11/rabbit-guan-yu-hosts-de-bao-cuo/"/>
      <url>/2022/08/11/rabbit-guan-yu-hosts-de-bao-cuo/</url>
      
        <content type="html"><![CDATA[<h1 id="rabbitmq-hosts报错"><a href="#rabbitmq-hosts报错" class="headerlink" title="rabbitmq hosts报错"></a>rabbitmq hosts报错</h1><h3 id="起因："><a href="#起因：" class="headerlink" title="起因："></a><strong>起因：</strong></h3><p>平日rabbitmq都已经脚本花来安装，今天安装的时候发现发现了异常报错，心里很疑惑，平日的脚本怎么突然出现了状况</p><h3 id="报错如下"><a href="#报错如下" class="headerlink" title="报错如下"></a>报错如下</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@rabbit-api-001 ~<span class="token punctuation">]</span><span class="token comment"># rabbitmqctl list_users</span>Error: unable to perform an operation on <span class="token function">node</span> ‘rabbit@rabbit-api-001’. Please see diagnostics information and suggestions below.Most common reasons <span class="token keyword">for</span> this are:<span class="token assign-left variable">DIAGNOSTICS</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>attempted to contact: <span class="token punctuation">[</span>‘rabbit@rabbit-api-001’<span class="token punctuation">]</span>rabbit@rabbit-api-001:  * connected to epmd <span class="token punctuation">(</span>port <span class="token number">4369</span><span class="token punctuation">)</span> on rabbit-api-001  * <span class="token function">node</span> rabbit@rabbit-api-001 up, ‘rabbit’ application runningCurrent <span class="token function">node</span> details:* <span class="token function">node</span> name: ‘rabbitmqcli66@rabbit-api-001’* effective user’s home directory: /var/lib/rabbitmq* Erlang cookie hash: <span class="token assign-left variable">PQXNPBxSq3gugPGiKks0lQ</span><span class="token operator">==</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="翻译："><a href="#翻译：" class="headerlink" title="翻译："></a>翻译：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">1.</span>目标节点是无法访问的（例如，主机名解析问题<span class="token punctuation">,</span>STCP连接或防火墙问题）<span class="token number">2</span><span class="token punctuation">.</span>CLI工具无法通过服务器进行身份验证（例如，CLI工具的Erlang cookie与服务器不匹配）<span class="token number">3.</span>目标节点没有运行按照rabbitmq给我们的建议，依次尝试<span class="token operator">**</span><span class="token number">1.</span>主机名解析问题<span class="token operator">**</span>，给自己的<span class="token operator">/</span>etc<span class="token operator">/</span>host文件配上ip和主机名，xxx就是报错提示<span class="token string">'rabbit@xxx'</span>的xxxecho <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> xxx<span class="token operator">&gt;&gt;</span> <span class="token operator">/</span>etc<span class="token operator">/</span>host<span class="token number">2</span><span class="token punctuation">.</span>TCP连接问题，即网络问题ping一下rabbitmq所在服务器的地址<span class="token number">3.</span>防火墙问题，查看防火墙是否关闭，如果没有关闭，则关闭防火墙，指令如下，我报错的原因就是防火墙没有关闭systemctl status firewalldsystemctl stop firewalld<span class="token number">4</span><span class="token punctuation">.</span>cookie问题，确保计算机中erlang<span class="token punctuation">.</span>cookie文件是一致的，具体路径记不得了，大家都是固态硬盘，直接搜索即可<span class="token number">5</span><span class="token punctuation">.</span>rabbitmq没有启动成功，重启rabbitmq，不要用后台启动的方式启动，直接启动，看看有没有真的启动成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h3><p>排查后是主机名解析导致，将本机ip 写入hosts即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@rabbit-api-001 ~<span class="token punctuation">]</span><span class="token comment"># vi /etc/hosts</span>x.x.x.x rabbit-api-001<span class="token comment">#重启后解决</span>systemctl restart rabbitmq-server<span class="token punctuation">[</span>root@rabbit-api-001 ~<span class="token punctuation">]</span><span class="token comment"># rabbitmqctl list_users   #不会报错了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> rabbitmq </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 报错&amp;告警 </tag>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端相关依赖部署</title>
      <link href="/2022/07/10/qian-duan-xiang-guan-yi-lai-bu-shu/"/>
      <url>/2022/07/10/qian-duan-xiang-guan-yi-lai-bu-shu/</url>
      
        <content type="html"><![CDATA[<h3 id="手动安装npm"><a href="#手动安装npm" class="headerlink" title="手动安装npm"></a><strong>手动安装npm</strong></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#下载地址：&lt;https://nodejs.org/en/download&gt;</span><span class="token comment">#放入linux目录后，解压包</span><span class="token function">tar</span> zxvf node-v16.13.2-linux-x64.tar.gz<span class="token comment">#配置环境变量</span><span class="token function">vim</span> /etc/profile<span class="token punctuation">..</span>.<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/home/dpan/soft/node-v16.13.2-linux-x64/bin<span class="token comment">#刷新环境变量</span><span class="token builtin class-name">source</span> /etc/profile<span class="token comment">#查看版本</span><span class="token function">npm</span> -v<span class="token function">node</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="yum安装npm"><a href="#yum安装npm" class="headerlink" title="yum安装npm"></a><strong>yum安装npm</strong></h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">curl <span class="token operator">-</span><span class="token operator">-</span>silent <span class="token operator">-</span><span class="token operator">-</span>location <span class="token operator">&lt;</span>https<span class="token punctuation">:</span><span class="token operator">//</span>rpm<span class="token punctuation">.</span>nodesource<span class="token punctuation">.</span>com<span class="token operator">/</span>setup_10<span class="token punctuation">.</span>x<span class="token operator">&gt;</span> <span class="token operator">|</span> bash <span class="token operator">-</span>yum install <span class="token operator">-</span>y nodejs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="安装cnpm"><a href="#安装cnpm" class="headerlink" title="安装cnpm"></a><strong>安装cnpm</strong></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#安装cnpm</span><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="npm升级"><a href="#npm升级" class="headerlink" title="npm升级*"></a><strong>npm升级</strong>*</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#安装npm升级工具</span>npm install <span class="token operator">-</span>g n <span class="token comment">#安装最近的稳定版本</span>n stable<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="vue安装"><a href="#vue安装" class="headerlink" title="vue安装"></a><strong>vue安装</strong></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#下载执行版本</span><span class="token function">npm</span> <span class="token function">install</span> -g @vue/cli@4.5.15<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins版本升级</title>
      <link href="/2022/07/10/jenkins-ban-ben-sheng-ji/"/>
      <url>/2022/07/10/jenkins-ban-ben-sheng-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="jenkins版本升级"><a href="#jenkins版本升级" class="headerlink" title="jenkins版本升级"></a>jenkins版本升级</h1><h1 id="jenkins版本过低"><a href="#jenkins版本过低" class="headerlink" title="jenkins版本过低"></a>jenkins版本过低</h1><h3 id="一些插件无法升级，这个时候我们就需要升级jenkins版本"><a href="#一些插件无法升级，这个时候我们就需要升级jenkins版本" class="headerlink" title="一些插件无法升级，这个时候我们就需要升级jenkins版本"></a>一些插件无法升级，这个时候我们就需要升级jenkins版本</h3><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202207102238220.png"></p><h2 id="第一种方法——下拉会在jenkins页面上让我们下载新版本"><a href="#第一种方法——下拉会在jenkins页面上让我们下载新版本" class="headerlink" title="第一种方法——下拉会在jenkins页面上让我们下载新版本"></a>第一种方法——下拉会在jenkins页面上让我们下载新版本</h2><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202207102239875.png"></p><h2 id="第二种方法是去官网上下载war包"><a href="#第二种方法是去官网上下载war包" class="headerlink" title="第二种方法是去官网上下载war包"></a>第二种方法是去官网上下载war包</h2><p>官网地址：<a href="https://www.jenkins.io/">https://www.jenkins.io/</a></p><h2 id="1-进入jenkins登录机器，找到jenkins-war"><a href="#1-进入jenkins登录机器，找到jenkins-war" class="headerlink" title="1.进入jenkins登录机器，找到jenkins.war"></a>1.进入jenkins登录机器，找到jenkins.war</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / -name  jenkins.war<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-进入该目录把war包移动到其他目录下"><a href="#2-进入该目录把war包移动到其他目录下" class="headerlink" title="2.进入该目录把war包移动到其他目录下"></a>2.进入该目录把war包移动到其他目录下</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/lib/jenkins<span class="token function">mv</span> jenkins.war /tmp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3-关闭jenkins服务，并查看jenkins状态"><a href="#3-关闭jenkins服务，并查看jenkins状态" class="headerlink" title="3.关闭jenkins服务，并查看jenkins状态"></a>3.关闭jenkins服务，并查看jenkins状态</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl stop jenkinssystemctl status jenkins<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4-把最新的war包移动到-usr-lib-jenkins目录下"><a href="#4-把最新的war包移动到-usr-lib-jenkins目录下" class="headerlink" title="4.把最新的war包移动到/usr/lib/jenkins目录下"></a>4.把最新的war包移动到/usr/lib/jenkins目录下</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> jenkins.war /usr/lib/jenkins/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-再次启动jenkins"><a href="#5-再次启动jenkins" class="headerlink" title="5.再次启动jenkins"></a>5.再次启动jenkins</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start jenkins<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6-插件中可以看见jenkins版本，是否升级成功"><a href="#6-插件中可以看见jenkins版本，是否升级成功" class="headerlink" title="6.插件中可以看见jenkins版本，是否升级成功"></a>6.插件中可以看见jenkins版本，是否升级成功</h2><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202207102240392.png"></p>]]></content>
      
      
      <categories>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 版本升级 </tag>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改 jenkins 主目录</title>
      <link href="/2022/07/10/xiu-gai-jenkins-zhu-mu-lu/"/>
      <url>/2022/07/10/xiu-gai-jenkins-zhu-mu-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="修改-jenkins-主目录"><a href="#修改-jenkins-主目录" class="headerlink" title="修改 jenkins 主目录"></a>修改 jenkins 主目录</h1><h2 id="一．通过yum安装或者rpm包安装"><a href="#一．通过yum安装或者rpm包安装" class="headerlink" title="一．通过yum安装或者rpm包安装"></a><strong>一．通过yum安装或者rpm包安装</strong></h2><p>本安装方式会生成一个/etc/sysconfig/jenkins文件，默认主目录是/var/lib/Jenkins。只需要修改此配置文件，然后重启jenkins服务，即可更改主目录。此处我们以更改为/home/jenkins为例。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">停止jenkins服务<span class="token function">service</span> jenkins stop备份主目录数据<span class="token function">tar</span> -zcvf /backup/jenkins.tar.gz /var/lib/jenkins迁移旧主目录数据到新主目录<span class="token function">tar</span> -zxvf /backup/jenkins.tar.gz -C /home/jenkins编辑配置文件<span class="token function">vim</span> /etc/sysconfig/Jenkins改为变更后的目录<span class="token assign-left variable">JENKINS_HOME</span><span class="token operator">=</span><span class="token string">"/home/jenkins"</span>更改目录属主<span class="token function">chown</span> -R jenkins.jenkins /home/jenkins重启<span class="token function">service</span> jenkins restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二．通过tomcat方式进行安装的"><a href="#二．通过tomcat方式进行安装的" class="headerlink" title="二．通过tomcat方式进行安装的"></a><strong>二．通过tomcat方式进行安装的</strong></h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a><strong>方法一</strong></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">打开tomcat的bin目录，编辑catalina.sh文件。在<span class="token comment"># OS specific support. $var _must_ be set to either true or false.上面添加：</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">JENKINS_HOME</span><span class="token operator">=</span><span class="token string">"/home/jenkins"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a><strong>方法二</strong></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">在启动Web容器之前设置JENKINS_HOME环境变量.编辑profile文件：vi /etc/profile在文件最后加入<span class="token builtin class-name">export</span> <span class="token assign-left variable">JENKINS_HOME</span><span class="token operator">=</span>/home/Jenkins使配置文件生效<span class="token builtin class-name">source</span> /etc/profile完成记得重启tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于mysql的general_log</title>
      <link href="/2022/06/20/guan-yu-mysql-de-general-log/"/>
      <url>/2022/06/20/guan-yu-mysql-de-general-log/</url>
      
        <content type="html"><![CDATA[<p><strong>在默认情况下，MySQL是不会打开general log的，这个log里面会记录MySQL所有的SQL语句，不管是查询语句，还是DML语句，还是DDL语句，还是DCL语句，这些语句统统都会被记录在general log文件中。就连我们连接和断开MySQL数据库的这些语句。</strong></p><p>MySQL会把它收到的所有SQL语句按照接收的顺序依次记录在general log中。我们需要注意的是，这里接受的SQL语句的顺序，并不等于SQL语句就是按照这个接受的顺序来执行，因为有的时候，一些SQL可能需要等待其他锁被释放后才会被真正的执行，SQL语句的执行顺序是和binlog中的顺序是相匹配的。</p><p>假如我们执行一个select查询语句，在binlog中不会记录这样的SQL语句，但是在general log中就会记录这个select查询语句。</p><p>General_log默认不开启的原因有两个： </p><blockquote><p>日志将会非常大，对磁盘是一个很大的压力。因为所有的操作都会被记录下来。 对MySQL数据的性能有一定的影响。</p></blockquote><p>所以，我们一般不会开启这个general log记录的功能，只有在排查某些错误的时候，才会临时打开一下，等到debug完成之后，再把它关闭。</p><h2 id="general-log的参数"><a href="#general-log的参数" class="headerlink" title="general_log的参数"></a>general_log的参数</h2><p>general log的参数主要有以下几个：</p><blockquote><p>genral_log：用于控制是否开启general log。等于0表示关闭，等于1表示开启。默认是0。</p></blockquote><blockquote><p>general_log_file：general log日志的文件名是什么，如果不配置这个参数的话，默认会以MySQL服务器的hostname作为general log日志的文件名称，具体文件为：<hostname>.log，general log日志的存放路径。如果不指定，则默认放在datadir参数所指定的目录下。也可以在这个参数中指定具体的路径+名称。</hostname></p></blockquote><blockquote><p>log_output：general log输出的方式，是输出表中，还是保存到文件中。这个参数的取值范围为：table，或者file。默认是保存到file文件中。这个参数是和慢查询日志是共用的，慢查询的日志是记录在表中还是只记录在文件中，也是用这个参数来控制。如果配置为table，就会把慢查询日志和general log日志都写在mysql.geneal_log表中。如果这个参数配置为table,file则表示即写入表中，也写入日志文件中，两个地方都写入日志。</p></blockquote><p>在开启了general log的前提下，如果在某个session连接中，不想让此次操作的所有SQL被记录在general log中，则可以在session中执行set session sql_log_off=on就可以关闭当前session的操作被记录在general log中。</p><h2 id="如何永久开启-general-log"><a href="#如何永久开启-general-log" class="headerlink" title="如何永久开启 general_log"></a><strong>如何永久开启 general_log</strong></h2><p>如果在配置文件中永久开启：</p><pre class="line-numbers language-none"><code class="language-none">[mysqld]general_log=1general_log_file=/home/mysql_general_log.log  #自定义log_output='FILE'                             #FILE 或者 TABLE              <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="在SQL命令行中临时开启"><a href="#在SQL命令行中临时开启" class="headerlink" title="在SQL命令行中临时开启"></a>在SQL命令行中临时开启</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">mysql<span class="token operator">&gt;</span> show variables like <span class="token string">'general_log'</span><span class="token punctuation">;</span> <span class="token operator">-</span><span class="token operator">-</span> 查看日志是否开启<span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> Variable_name <span class="token operator">|</span> Value <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> general_log   <span class="token operator">|</span> OFF   <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin">set</span> <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span>mysql<span class="token operator">&gt;</span> show variables like <span class="token string">'general_log_file'</span><span class="token punctuation">;</span> <span class="token operator">-</span><span class="token operator">-</span> 看看日志文件保存位置<span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> Variable_name    <span class="token operator">|</span> Value                   <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> general_log_file <span class="token operator">|</span> <span class="token operator">/</span>var<span class="token operator">/</span>lib<span class="token operator">/</span>mysql<span class="token operator">/</span>test<span class="token punctuation">.</span>log <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin">set</span> <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span>mysql<span class="token operator">&gt;</span> show variables like <span class="token string">'log_output'</span><span class="token punctuation">;</span> <span class="token operator">-</span><span class="token operator">-</span> 看看日志输出类型 table或<span class="token builtin">file</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> Variable_name <span class="token operator">|</span> Value      <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> log_output    <span class="token operator">|</span> FILE<span class="token punctuation">,</span>TABLE <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span><span class="token comment">#设置日志输出方式为文件(如果设置log_output=table的话，则日志结果会记录到名为gengera_log的表中，这表的默认引擎都是CSV)：</span>mysql<span class="token operator">&gt;</span><span class="token builtin">set</span> <span class="token keyword">global</span> log_output<span class="token operator">=</span><span class="token builtin">file</span><span class="token punctuation">;</span><span class="token comment">#设置general log的日志文件路径：</span>mysql<span class="token operator">&gt;</span><span class="token builtin">set</span> <span class="token keyword">global</span> general_log_file<span class="token operator">=</span><span class="token string">'/tmp/general.log'</span><span class="token punctuation">;</span><span class="token comment">#开启general log：</span>mysql<span class="token operator">&gt;</span><span class="token builtin">set</span> <span class="token keyword">global</span> general_log<span class="token operator">=</span>on<span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span><span class="token comment">#关闭general log：</span>mysql<span class="token operator">&gt;</span><span class="token builtin">set</span> <span class="token keyword">global</span> general_log<span class="token operator">=</span>off<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="清理general-log"><a href="#清理general-log" class="headerlink" title="清理general_log"></a>清理<strong>general_log</strong></h2><p>清除<strong>general_log日志时不能rm -rf直接将日志删除，直接删除日志不会自动生成，除非重启mysqls实例，正确的清除方法是：</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">echo <span class="token string">""</span> <span class="token operator">&gt;</span> <span class="token operator">**</span>general_log <span class="token comment">#使用重定向的方法清理**</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="日志切割脚本"><a href="#日志切割脚本" class="headerlink" title="日志切割脚本"></a>日志切割脚本</h2><p>如需debug或查询某一时间段日志，使用日志切割脚本实现</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">A</span><span class="token operator">=</span>/home/epan/general_log    <span class="token comment">###文件夹路径</span><span class="token assign-left variable">logname</span><span class="token operator">=</span>general.log         <span class="token comment">###日志名称</span><span class="token assign-left variable">date_dir</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +%Y%m%d<span class="token variable">`</span></span>                                 <span class="token comment">###按小时分割</span><span class="token assign-left variable">tag</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +%Y%m%d%H --date<span class="token operator">=</span><span class="token string">"-1 hour"</span><span class="token variable">`</span></span>                   <span class="token comment">###分割出来的减1小时</span><span class="token comment">#这句用于判断，当时间为凌晨00：00时，将date_dri设为昨天</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +%H<span class="token variable">`</span></span>"</span> <span class="token operator">=</span> <span class="token string">"00"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>                        <span class="token comment">###判断是否为00点</span>  <span class="token assign-left variable">date_dir</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> -d <span class="token string">"yesterday"</span> +%Y%m%d<span class="token variable">`</span></span>                <span class="token comment">###遇到00点时，时间更改为昨天</span><span class="token keyword">fi</span><span class="token keyword">if</span> <span class="token punctuation">[</span>  -z <span class="token string">"<span class="token variable">$A</span>/<span class="token variable">$logname</span>"</span> <span class="token punctuation">]</span>                                 <span class="token comment">###判断gif.log是否为空</span>        <span class="token keyword">then</span>        <span class="token builtin class-name">exit</span> <span class="token number">0</span>                                          <span class="token comment">###为空退出</span><span class="token keyword">fi</span><span class="token keyword">if</span> <span class="token punctuation">[</span>  -n <span class="token string">"<span class="token variable">$A</span>/<span class="token variable">$logname</span>"</span> <span class="token punctuation">]</span>                                 <span class="token comment">###判断gif.log是否不为空</span>        <span class="token keyword">then</span>        <span class="token function">cp</span> <span class="token variable">$A</span>/<span class="token variable">$logname</span> <span class="token variable">$A</span>/general_<span class="token variable">${tag}</span>.log            <span class="token comment">###不为空执行复制，复制</span>A到B.小时.log        <span class="token operator">&gt;</span> <span class="token variable">$A</span>/<span class="token variable">$logname</span>                                   <span class="token comment">###清空A</span>        <span class="token builtin class-name">exit</span> <span class="token number">0</span><span class="token keyword">fi</span><span class="token comment">#配合crontab实现每小时切割日志</span>* */1 * * * <span class="token function">sh</span> /home/epan/general_log/splie.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx调优参数</title>
      <link href="/2022/06/02/nginx-diao-you-can-shu/"/>
      <url>/2022/06/02/nginx-diao-you-can-shu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">net.ipv4.ip_local_port_range<span class="token operator">=</span><span class="token string">'1024 65000'</span>net.ipv4.tcp_tw_reuse<span class="token operator">=</span><span class="token string">'1'</span>net.ipv4.tcp_fin_timeout<span class="token operator">=</span><span class="token string">'15'</span>net.core.netdev_max_backlog<span class="token operator">=</span><span class="token string">'4096'</span>net.core.rmem_max<span class="token operator">=</span><span class="token string">'16777216'</span>net.core.somaxconn<span class="token operator">=</span><span class="token string">'4096'</span>net.core.wmem_max<span class="token operator">=</span><span class="token string">'16777216'</span>net.ipv4.tcp_max_syn_backlog<span class="token operator">=</span><span class="token string">'20480'</span>net.ipv4.tcp_max_tw_buckets<span class="token operator">=</span><span class="token string">'400000'</span>net.ipv4.tcp_no_metrics_save<span class="token operator">=</span><span class="token string">'1'</span>net.ipv4.tcp_rmem<span class="token operator">=</span><span class="token string">'4096 87380 16777216'</span>net.ipv4.tcp_syn_retries<span class="token operator">=</span><span class="token string">'2'</span>net.ipv4.tcp_synack_retries<span class="token operator">=</span><span class="token string">'2'</span>net.ipv4.tcp_wmem<span class="token operator">=</span><span class="token string">'4096 65536 16777216'</span>vm.min_free_kbytes<span class="token operator">=</span><span class="token string">'65536'</span><span class="token number">1</span>、调整同时打开文件数量<span class="token comment"># vim /etc/security/limits.conf 最后增加：</span>* soft nofile <span class="token number">204800</span>* hard nofile <span class="token number">204800</span>* soft nproc <span class="token number">204800</span>* hard nproc <span class="token number">204800</span><span class="token number">2</span>、TCP最大连接数（somaxconn）<span class="token builtin class-name">echo</span> <span class="token number">65535</span> <span class="token operator">&gt;</span> /proc/sys/net/core/somaxconn<span class="token number">3</span>、nginx内核参数优化：net.ipv4.tcp_max_tw_buckets <span class="token operator">=</span> <span class="token number">6000</span> <span class="token comment">#表示系统同时保持TIME_WAIT套接字的最大数量，如果超过这个数字，TIME_WAIT套接字将立刻被清除并打印警告信息。默认为180000。对于Apache、Nginx等服务器，上几行的参数可以很好地减少TIME_WAIT套接字数量，但是对于Squid，效果却不大。此项参数可以控制TIME_WAIT套接字的最大数量，避免Squid服务器被大量的TIME_WAIT套接字拖死</span>net.ipv4.ip_local_port_range <span class="token operator">=</span> <span class="token number">1025</span> <span class="token number">65000</span>  <span class="token comment"># 指定端口范围的一个配置,默认是32768 61000</span>net.ipv4.tcp_tw_recycle <span class="token operator">=</span> <span class="token number">1</span>   <span class="token comment">#表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭。慎用，会导致客户端连接失败。</span>net.ipv4.tcp_tw_reuse <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">#表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭；</span>net.ipv4.tcp_syncookies <span class="token operator">=</span> <span class="token number">1</span>   <span class="token comment">#表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭；</span>net.core.somaxconn <span class="token operator">=</span> <span class="token number">262144</span> <span class="token comment">#定义了系统中每一个端口最大的监听队列的长度,这是个全局的参数,默认值为1024</span>net.core.netdev_max_backlog <span class="token operator">=</span> <span class="token number">262144</span> <span class="token comment">#每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目</span>net.ipv4.tcp_max_orphans <span class="token operator">=</span> <span class="token number">262144</span>net.ipv4.tcp_max_syn_backlog <span class="token operator">=</span> <span class="token number">262144</span> <span class="token comment">#表示SYN队列的长度，默认为1024，可以容纳更多等待连接的网络连接数。</span>net.ipv4.tcp_synack_retries <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">#  syn-ack握手状态重试次数，默认5，遭受syn-flood攻击时改为1或2 </span>net.ipv4.tcp_syn_retries <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment"># 外向syn握手重试次数，默认4</span>net.ipv4.tcp_fin_timeout <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">#表示如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。</span>net.ipv4.tcp_keepalive_time <span class="token operator">=</span> <span class="token number">30</span>  <span class="token comment">#表示当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时。</span> sysctl.conf针对IPv4内核的7个参数的配置优化：<span class="token number">1</span>、net.core.netdev_max_backlog  <span class="token comment">#每个网络接口的处理速率比内核处理包的速度快的时候，允许发送队列的最大数目。</span><span class="token punctuation">[</span>root@Server1 nginx<span class="token punctuation">]</span><span class="token comment"># sysctl -a | grep max_backlog</span>net.core.netdev_max_backlog <span class="token operator">=</span> <span class="token number">1000</span>  这里默认是1000，可以设置的大一些，比如：net.core.netdev_max_backlog <span class="token operator">=</span> <span class="token number">102400</span><span class="token number">2</span>、net.core.somaxconn: <span class="token comment">#用于调节系统同时发起的TCP连接数，默认值一般为128，在客户端存在高并发请求的时候，128就变得比较小了，可能会导致链接超时或者重传问题。</span>net.core.somaxconn <span class="token operator">=</span> <span class="token number">128</span>  <span class="token comment">#默认为128，高并发的情况时候要设置大一些，比如：</span>net.core.somaxconn <span class="token operator">=</span> <span class="token number">102400</span><span class="token number">3</span>、net.ipv4.tcp_max_orphans:设置系统中做多允许多少TCP套接字不被关联到任何一个用户文件句柄上，如果超出这个值，没有与用户文件句柄关联的TCP套接字将立即被复位，同时给出警告信息，这个值是简单防止DDOS（Denial of service）的攻击，在内存比较充足的时候可以设置大一些：net.ipv4.tcp_max_orphans <span class="token operator">=</span> <span class="token number">32768</span> <span class="token comment">#默认为32768，可以改该打一些：</span>net.ipv4.tcp_max_orphans <span class="token operator">=</span> <span class="token number">102400</span><span class="token number">4</span>、net.ipv4.tcp_max_syn_backlog <span class="token comment">#用于记录尚未收到客户度确认消息的连接请求的最大值，一般要设置大一些：</span>net.ipv4.tcp_max_syn_backlog <span class="token operator">=</span> <span class="token number">256</span>  <span class="token comment">#默认为256，设置大一些如下：</span>net.ipv4.tcp_max_syn_backlog <span class="token operator">=</span>  <span class="token number">102400</span><span class="token number">5</span>、net.ipv4.tcp_timestamps <span class="token comment">#用于设置时间戳，可以避免序列号的卷绕，有时候会出现数据包用之前的序列号的情况，此值默认为1表示不允许序列号的数据包，对于Nginx服务器来说，要改为0禁用对于TCP时间戳的支持，这样TCP协议会让内核接受这种数据包，从而避免网络异常，如下：</span>net.ipv4.tcp_timestamps <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">#默认为1，改为0，如下：</span>net.ipv4.tcp_timestamps <span class="token operator">=</span> <span class="token number">0</span><span class="token number">6</span>、net.ipv4.tcp_synack_retries <span class="token comment">#用于设置内核放弃TCP连接之前向客户端发生SYN+ACK包的数量，网络连接建立需要三次握手，客户端首先向服务器发生一个连接请求，服务器收到后由内核回复一个SYN+ACK的报文，这个值不能设置过多，会影响服务器的性能，还会引起syn攻击：</span>net.ipv4.tcp_synack_retries <span class="token operator">=</span> <span class="token number">5</span> <span class="token comment">#默认为5，可以改为1避免syn攻击</span>net.ipv4.tcp_synack_retries <span class="token operator">=</span> <span class="token number">1</span><span class="token number">7</span>、net.ipv4.tcp_syn_retries  <span class="token comment">#与上一个功能类似，设置为1即可：</span>net.ipv4.tcp_syn_retries <span class="token operator">=</span> <span class="token number">5</span> <span class="token comment">#默认为5，可以改为1</span>net.ipv4.tcp_syn_retries <span class="token operator">=</span> <span class="token number">1</span> 四：配置文件中针对CPU的2个优化参数：<span class="token number">1</span>、woker_precess <span class="token comment">#设置Nginx 启动多少个工作进程的数量</span><span class="token number">2</span>、woker_cpu_affinit <span class="token comment">#固定Nginx 工作进程所运行的CPU核心</span> 五：配置文件中与网络相关的4个指令：<span class="token number">1</span>、keepalived_timeout <span class="token number">60</span> <span class="token number">50</span>； <span class="token comment">#设置Nginx服务器与客户端保持连接的时间是60秒，到60秒后服务器与客户端断开连接，50s是使用Keep-Alive消息头与部分浏览器如 chrome等的连接事件，到50秒后浏览器主动与服务器断开连接。</span>keepalived_timeout <span class="token number">60</span> <span class="token number">50</span><span class="token punctuation">;</span><span class="token number">2</span>、sendtime_out  10s <span class="token comment">#Http核心模块指令，指定了发送给客户端应答后的超时时间，Timeout是指没有进入完整established状态，只完成了两次握手，如果超过这个时间客户端没有任何响应，nginx将关闭与客户端的连接。</span>sendtime_out 10s<span class="token punctuation">;</span><span class="token number">3</span>、client_header_timeout  <span class="token comment">#用于指定来自客户端请求头的headerbuffer大小，对于大多数请求，1kb的缓冲区大小已经足够，如果自定义了消息头部或有更大的cookie，可以增加缓冲区大小。</span>client_header_timeout 4k<span class="token punctuation">;</span><span class="token number">4</span>、multi_accept  <span class="token comment">#设置是否允许，Nginx在已经得到一个新连接的通知时，接收尽可能更多的连接。</span>    multi_accept on<span class="token punctuation">;</span> 六：配置文件中与驱动模型相关的8个指令： <span class="token number">1</span>、use； <span class="token comment">#用于指定Nginx 使用的事件驱动模型</span><span class="token number">2</span>、woker_process； <span class="token comment">#指定Nginx启动的工作进程的数量</span><span class="token number">3</span>、woker_connections  <span class="token number">65535</span>； <span class="token comment">#指定Nginx 每个工作进程的最大连接数，woker_connections  *  woker_process即为Nginx的最大连接数量。</span><span class="token number">4</span>、woker_rlimit_sigpending <span class="token number">65535</span>  <span class="token comment">#Nginx每个进程的事件信号队列的上限长度，如果超出长度，Nginx则使用poll模型处理</span><span class="token number">5</span>、devpoll_changes 和 devpoll_events <span class="token comment">#用于设置Nginx 在/dev/poll 模型下Nginx服务器可以与内核之间传递事件的数量，前一个设置传递给内核的事件数量，后一个设置从内核读取的事件数量，默认为512。</span><span class="token number">6</span>、kqueue_changes 和 kqueue_events <span class="token comment">#设置在kqueue模型下Nginx服务器可以与内核之间传递事件的数量，前一个设置传递给内核的事件数量，后一个设置从内核读取的事件数量，默认为512。</span><span class="token number">7</span>、epoll_events <span class="token comment">#设置在epoll驱动模式下Nginx 服务器可以与内核之间传递事件的数量，默认为512。</span><span class="token number">8</span>、rtsig_signo  <span class="token comment">#设置Nginx在rtsig 模式使用的两个信号中的第一个，第二个信号是在第一个信号的编号上加1.</span><span class="token number">9</span>、rtsig_overflow <span class="token comment">#这些参数指定如何处理rtsig队列溢出。当溢出发生在nginx清空rtsig队列时，它们将连续调用poll()和 rtsig.poll()来处理未完成的事件，直到rtsig被排空以防止新的溢出，当溢出处理完毕，nginx再次启用rtsig模式，rtsig_overflow_events specifies指定经过poll()的事件数，默认为16，rtsig_overflow_test指定poll()处理多少事件后nginx将排空rtsig队列，默认值为32，rtsig_overflow_threshold只能运行在Linux 2.4.x内核下，在排空rtsig队列前nginx检查内核以确定队列是怎样被填满的。默认值为1/10，“rtsig_overflow_threshold 3”意为1/3。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将一个三T的硬盘做成LVM</title>
      <link href="/2022/05/24/jiang-yi-ge-san-t-de-ying-pan-zuo-cheng-lvm/"/>
      <url>/2022/05/24/jiang-yi-ge-san-t-de-ying-pan-zuo-cheng-lvm/</url>
      
        <content type="html"><![CDATA[<h1 id="将一个三T的硬盘分区并做LVM"><a href="#将一个三T的硬盘分区并做LVM" class="headerlink" title="将一个三T的硬盘分区并做LVM"></a>将一个三T的硬盘分区并做LVM</h1><p>解决方案</p><blockquote><p>增加磁盘 -&gt; 初始化物理卷 -&gt; 扩容卷组 -&gt; 扩容逻辑卷</p></blockquote><p><strong>因为fdisk不能创建大于2T的分区，创建大分区得用parted</strong></p><p>parted将硬盘进行分区：</p><blockquote><p>查看磁盘信息，这里将vdc进行分区</p></blockquote><pre class="line-numbers language-text" data-language="text"><code class="language-text">[root@ftp 05]# lsblkNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTsr0              11:0    1 1024M  0 rom  vda             252:0    0   40G  0 disk ├─vda1          252:1    0    1G  0 part /boot└─vda2          252:2    0   39G  0 part   ├─centos-root 253:0    0   35G  0 lvm  /  └─centos-swap 253:1    0    4G  0 lvm  [SWAP]vdb             252:16   0    2T  0 disk /home/dpanvdc             252:32   0    3T  0 disk <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>parted /dev/vdc</p></blockquote><pre class="line-numbers language-text" data-language="text"><code class="language-text">[root@ftp 05]# parted /dev/vdcGNU Parted 3.1 Using /dev/vdcWelcome to GNU Parted! Type 'help' to view a list of commands.(parted) p                                                                Model: Virtio Block Device (virtblk)Disk /dev/vdc: 3299GBSector size (logical/physical): 512B/512BPartition Table: msdosDisk Flags: Number  Start  End  Size  Type  File system  Flags(parted) mklabel                                                          New disk label type? gpt                                                  Warning: The existing disk label on /dev/vdc will be destroyed and all data on this disk will be lost. Do you want to continue?Yes/No? yes                                                               (parted) p                                                                Model: Virtio Block Device (virtblk)Disk /dev/vdc: 3299GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number  Start  End  Size  File system  Name  Flags(parted) mkpart primary 4096s 100%(parted) p                                                                Model: Virtio Block Device (virtblk)Disk /dev/vdc: 3299GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number  Start   End     Size    File system  Name     Flags 1      2097kB  3299GB  3299GB               primary#这里已经分区完成了(parted) toggle 1 lvm        #打个标签                                             (parted) p                                                                Model: Virtio Block Device (virtblk)Disk /dev/vdc: 3299GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number  Start   End     Size    File system  Name     Flags 1      2097kB  3299GB  3299GB               primary  lvm(parted) quit                                                             Information: You may need to update /etc/fstab.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">#使用命令查看#lsblk<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242310696.png"></p><p>分区完成。下面进行LVM操作，创建相应的PV VG LV</p><p>LVM相关操作，参考<a href="https://yushui1995.github.io/2022/05/24/lvm-guan-li/">LVM管理</a>进行后续操作</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#完成效果如图</span><span class="token comment">#df -h</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242259258.png"></p>]]></content>
      
      
      <categories>
          
          <category> LVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
            <tag> 分区 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LVM管理</title>
      <link href="/2022/05/24/lvm-guan-li/"/>
      <url>/2022/05/24/lvm-guan-li/</url>
      
        <content type="html"><![CDATA[<h2 id="LVM简介"><a href="#LVM简介" class="headerlink" title="LVM简介"></a>LVM简介</h2><p>LVM 是 Logical Volume Manager（逻辑卷管理）的简写,它是Linux环境下对磁盘分区进行管理的一种机制。LVM将一个或多个磁盘分区（PV）虚拟为一个卷组（VG），相当于一个大的硬盘，我们可以在上面划分一些逻辑卷（LV）。当卷组的空间不够使用时，可以将新的磁盘分区加入进来。我们还可以从卷组剩余空间上划分一些空间给空间不够用的逻辑卷使用。</p><h3 id="1、查看硬盘状态"><a href="#1、查看硬盘状态" class="headerlink" title="1、查看硬盘状态"></a>1、查看硬盘状态</h3><p>查看到这块新盘为/dev/vdb：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># fdisk -l</span><span class="token comment">#lsblk       #列出所有可用块设备的信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242220910.png"></p><h3 id="2、对新盘分区"><a href="#2、对新盘分区" class="headerlink" title="2、对新盘分区"></a>2、对新盘分区</h3><p>使用 fdisk 命令对新盘进行分区，这里建立了一个主分区/dev/vdb1，大小8GB，最后使用 partprobe 命令重新读取分区表：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># fdisk /dev/vdb</span><span class="token comment"># partprobe</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242222567.png"></p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242223550.png"></p><p>在分区的过程中，注意设置格式为8e，这是LVM的分区格式。</p><h3 id="3、创建物理卷（PV）"><a href="#3、创建物理卷（PV）" class="headerlink" title="3、创建物理卷（PV）"></a>3、创建物理卷（PV）</h3><p>使用 pvcreate 命令创建物理卷，pvdisplay 查看物理卷信息：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># pvcreate /dev/vdb1</span><span class="token comment"># pvdisplay</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242226784.png"></p><h3 id="4、将PV加入卷组（VG）"><a href="#4、将PV加入卷组（VG）" class="headerlink" title="4、将PV加入卷组（VG）"></a>4、将PV加入卷组（VG）</h3><p>使用 vgdisplay 查看卷组信息，下图显示卷组名为centos，空闲大小为0：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># vgcreate centos /dev/vdb1 (若之前没建过，则建一下)</span><span class="token comment"># vgdisplay</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242226655.png"></p><p>使用 vgextend 命令把/dev/vdb1加入到centos：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># vgextend centos /dev/vdb1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242227195.png"></p><p>我们重新查看一下卷组信息，发现空闲空间为8GB，说明/dev/vdb1已经成功加入进来：</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242227770.png"></p><h3 id="5、创建逻辑卷（LV）"><a href="#5、创建逻辑卷（LV）" class="headerlink" title="5、创建逻辑卷（LV）"></a>5、创建逻辑卷（LV）</h3><p>使用 lvcreate 命令从卷组里划分一个新的逻辑卷，这里创建了名称为newlv，大小4GB的逻辑卷分区；使用lvdisplay 查看逻辑卷信息：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">shell<span class="token comment"># lvcreate -L 4G -n newlv centos</span>shell<span class="token comment"># lvdisplay</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242233148.png"></p><p>我们再查看一下卷组信息，卷组剩余4GB空间了：</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242233894.png"></p><h3 id="6、格式化逻辑卷并挂载"><a href="#6、格式化逻辑卷并挂载" class="headerlink" title="6、格式化逻辑卷并挂载"></a>6、格式化逻辑卷并挂载</h3><p>新逻辑卷经过格式化就可以挂载到系统里存储数据了。使用 mkfs.xfs 格式化为CentOS7的xfs文件系统：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">shell<span class="token comment"># mkfs.xfs /dev/centos/newlv</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242234689.png">挂载到/mnt目录下（你可以挂载到自己需要的目录下)，挂载后看到容量为4GB：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">shell<span class="token comment"># mount -t xfs /dev/centos/newlv /data/</span>shell<span class="token comment"># df -Th</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242235634.png"></p><p>设置开机自动挂载，编辑 /etc/fstab 文件，加入最后一行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/dev/centos/newlv       /data                    xfs     defaults        <span class="token number">1</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242236583.png"></p><h3 id="7、逻辑卷扩容"><a href="#7、逻辑卷扩容" class="headerlink" title="7、逻辑卷扩容"></a>7、逻辑卷扩容</h3><p>使用 lvextend 命令进行逻辑卷扩容。我把所有剩余空间都分配给了newlv，增大到了8GB，如下图：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">shell<span class="token comment"># lvextend -l +100%FREE /dev/centos/newlv</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242237704.png"></p><p>使用 xfs_growfs 命令在线调整xfs格式文件系统大小（CentOS6使用resize2fs）：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">shell<span class="token comment"># xfs_growfs /dev/centos/newlv</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242237737.png"></p><p>最后我们看到逻辑卷分区已经动态扩容到了8GB：</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205242239649.png"></p><h3 id="错误收集："><a href="#错误收集：" class="headerlink" title="错误收集："></a>错误收集：</h3><p>问题一：vg若出现这种报错</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@ftp 05<span class="token punctuation">]</span><span class="token comment"># vgdisplay</span>  WARNING: Device <span class="token keyword">for</span> PV cohZEd-5DsO-WJSd-d8R0-En0M-mL2I-NCA1qo not found or rejected by a filter.  Couldn't <span class="token function">find</span> device with uuid cohZEd-5DsO-WJSd-d8R0-En0M-mL2I-NCA1qo.    解决：vgreduce --removemissing VGname<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> LVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LVM </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nacos未授权访问漏洞</title>
      <link href="/2022/05/19/nacos-wei-shou-quan-fang-wen-lou-dong/"/>
      <url>/2022/05/19/nacos-wei-shou-quan-fang-wen-lou-dong/</url>
      
        <content type="html"><![CDATA[<h1 id="NACOS漏洞问题及修复-CVE-2021-29441"><a href="#NACOS漏洞问题及修复-CVE-2021-29441" class="headerlink" title="NACOS漏洞问题及修复(CVE-2021-29441)"></a>NACOS漏洞问题及修复(CVE-2021-29441)</h1><h2 id="1、漏洞详情："><a href="#1、漏洞详情：" class="headerlink" title="1、漏洞详情："></a>1、漏洞详情：</h2><p>未授权访问漏洞，是在攻击者没有获取到登录权限或未授权的情况下，或者不需要输入密码，即可通过直接输入网站控制台主页面地址，或者不允许查看的链接便可进行访问，同时进行操作该系统</p><p><strong>影响范围为1.4.1版本之前的<a href="https://so.csdn.net/so/search?q=nacos&amp;spm=1001.2101.3001.7020">nacos</a></strong></p><h2 id="2、漏洞复现："><a href="#2、漏洞复现：" class="headerlink" title="2、漏洞复现："></a>2、漏洞复现：</h2><h3 id="访问用户列表界面"><a href="#访问用户列表界面" class="headerlink" title="访问用户列表界面"></a>访问用户列表界面</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># curl XGET '&lt;http://127.0.0.1:8848/nacos/v1/auth/users?pageNo=1&amp;pageSize=9&gt;' -H 'User-Agent: Nacos-Server'</span><span class="token punctuation">{</span><span class="token string">"totalCount"</span>:1,<span class="token string">"pageNumber"</span>:1,<span class="token string">"pagesAvailable"</span>:1,<span class="token string">"pageItems"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"username"</span><span class="token builtin class-name">:</span><span class="token string">"nacos"</span>,<span class="token string">"password"</span><span class="token builtin class-name">:</span><span class="token string">"<span class="token variable">$2a</span><span class="token variable">$10</span><span class="token variable">$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu</span>"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="添加新用户"><a href="#添加新用户" class="headerlink" title="添加新用户"></a>添加新用户</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># curl -XPOST '&lt;http://127.0.0.1:8848/nacos/v1/auth/users?username=czdx&amp;password=2022SecCZ_czdx@2022&gt;' -H 'User-Agent: Nacos-Server'</span><span class="token punctuation">{</span><span class="token string">"code"</span>:200,<span class="token string">"message"</span><span class="token builtin class-name">:</span><span class="token string">"create user ok!"</span>,<span class="token string">"data"</span>:null<span class="token punctuation">}</span><span class="token comment">#再次查看 czdx用户已经被添加</span><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># curl XGET '&lt;http://127.0.0.1:8848/nacos/v1/auth/users?pageNo=1&amp;pageSize=9&gt;' -H 'User-Agent: Nacos-Server'</span><span class="token punctuation">{</span><span class="token string">"totalCount"</span>:2,<span class="token string">"pageNumber"</span>:1,<span class="token string">"pagesAvailable"</span>:1,<span class="token string">"pageItems"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"username"</span><span class="token builtin class-name">:</span><span class="token string">"czdx"</span>,<span class="token string">"password"</span><span class="token builtin class-name">:</span><span class="token string">"<span class="token variable">$2a</span><span class="token variable">$10</span><span class="token variable">$xSWgJpl</span>/TSvr0JnEE5KshePTU0ITB3sTlw8q.b8qzCSBuRBy7Iyn."</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"username"</span><span class="token builtin class-name">:</span><span class="token string">"nacos"</span>,<span class="token string">"password"</span><span class="token builtin class-name">:</span><span class="token string">"<span class="token variable">$2a</span><span class="token variable">$10</span><span class="token variable">$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu</span>"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># curl -XDELETE &lt;http://127.0.0.1:8848/nacos/v1/auth/users&gt; -d "username=qwe&amp;newPassword=2022SecCZ_czdx@2022"</span><span class="token punctuation">{</span><span class="token string">"code"</span>:200,<span class="token string">"message"</span><span class="token builtin class-name">:</span><span class="token string">"delete user ok!"</span>,<span class="token string">"data"</span>:null<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3、解决方法："><a href="#3、解决方法：" class="headerlink" title="3、解决方法："></a>3、解决方法：</h2><h3 id="升级nacos"><a href="#升级nacos" class="headerlink" title="升级nacos"></a>升级nacos</h3><p>下载1.4.1以上版本或者直接使用最新版本</p><p><a href="https://github.com/alibaba/nacos/releases">Releases · alibaba/nacos</a></p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205192126496.png"></p><h3 id="安装nacos"><a href="#安装nacos" class="headerlink" title="安装nacos"></a>安装nacos</h3><p>在新的nacos文件中，在conf目录下，找到数据库升级脚本1.4.0-ipv6_support-update.sql，在nacos配置库中执行该脚本(3.0系统中数据库名应该是jdlh-config)</p><p>修改conf目录下的application.properties文件，把原有nacos的数据源迁移到新的nacos配置中</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205192126121.png"></p><p>注意以下新增配置：</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205192127601.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">修改nacos.core.auth.enabled配置为 <span class="token boolean">true</span>修改nacos.core.auth.server.identity.key和nacos.core.auth.server.identity.value值为自定义值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h3><p>修改完配置后重启nacos，测试效果</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># curl XGET '&lt;http://127.0.0.1:8848/nacos/v1/auth/users?pageNo=1&amp;pageSize=9&gt;' -H 'User-Agent: Nacos-Server'</span><span class="token punctuation">{</span><span class="token string">"timestamp"</span><span class="token builtin class-name">:</span><span class="token string">"2022-05-19T14:08:40.106+08:00"</span>,<span class="token string">"status"</span>:403,<span class="token string">"error"</span><span class="token builtin class-name">:</span><span class="token string">"Forbidden"</span>,<span class="token string">"message"</span><span class="token builtin class-name">:</span><span class="token string">"unknown user!"</span>,<span class="token string">"path"</span><span class="token builtin class-name">:</span><span class="token string">"/nacos/v1/auth/users"</span><span class="token punctuation">}</span><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4、修改项目配置"><a href="#4、修改项目配置" class="headerlink" title="4、修改项目配置"></a>4、修改项目配置</h2><p>把项目中各个工程的bootstrap.yml中cloud.nacos层级下添加username和password</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Tomcat</span>server:  port: <span class="token number">8077</span><span class="token comment"># Spring</span>spring:  application:    <span class="token comment"># 应用名称</span>    name: simple-test  profiles:    <span class="token comment"># 环境配置</span>    active: dev  cloud:    nacos:      username: nacos      password: Simple@2022<span class="token operator">!</span>      discovery:        <span class="token comment"># 服务注册地址</span>        server-addr: <span class="token number">172.18</span>.16.59:8848        namespace: b56778f3-2e9f-4645-91c9-2808ffbf6dd9      config:        <span class="token comment"># 配置中心地址</span>        server-addr: <span class="token number">172.18</span>.16.59:8848        <span class="token comment"># 配置文件格式</span>        file-extension: yml        <span class="token comment"># 共享配置</span>        shared-dataids: application-<span class="token variable">${spring.profiles.active}</span><span class="token builtin class-name">.</span><span class="token variable">${spring.cloud.nacos.config.file-extension}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="至此漏洞修复结束"><a href="#至此漏洞修复结束" class="headerlink" title="至此漏洞修复结束"></a>至此漏洞修复结束</h2>]]></content>
      
      
      <categories>
          
          <category> 漏洞修复 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nacos </tag>
            
            <tag> 漏洞修复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 1.20.2 编译安装</title>
      <link href="/2022/05/13/nginx-1-20-2-bian-yi-an-zhuang/"/>
      <url>/2022/05/13/nginx-1-20-2-bian-yi-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx-1-20-2-编译安装-nginx-upstream-check-module"><a href="#Nginx-1-20-2-编译安装-nginx-upstream-check-module" class="headerlink" title="Nginx 1.20.2 编译安装+nginx_upstream_check_module"></a>Nginx 1.20.2 编译安装+nginx_upstream_check_module</h1><h2 id="1、下载nginx"><a href="#1、下载nginx" class="headerlink" title="1、下载nginx"></a>1、下载nginx</h2><p>官网：<a href="http://nginx.org/">http://nginx.org/</a></p><p>直接下载：wget <a href="http://nginx.org/download/nginx-1.20.2.tar.gz">http://nginx.org/download/nginx-1.20.2.tar.gz</a></p><h2 id="2、下载nginx-upstream-check-module"><a href="#2、下载nginx-upstream-check-module" class="headerlink" title="2、下载nginx_upstream_check_module"></a>2、下载nginx_upstream_check_module</h2><p>wget <a href="https://github.com/yaoweibin/nginx_upstream_check_module/archive/refs/heads/master.zip">https://github.com/yaoweibin/nginx_upstream_check_module/archive/refs/heads/master.zip</a></p><h2 id="3、下载依赖、安装"><a href="#3、下载依赖、安装" class="headerlink" title="3、下载依赖、安装"></a>3、下载依赖、安装</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#依赖安装</span>yum <span class="token operator">-</span>y install patch openssl openssl<span class="token operator">-</span>devel gcc<span class="token operator">-</span>c<span class="token operator">+</span><span class="token operator">+</span>  gcc zlib pcre<span class="token comment">#解压至/usr/local</span>tar <span class="token operator">-</span>zxvf nginx<span class="token operator">-</span><span class="token number">1.20</span><span class="token number">.2</span><span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz <span class="token operator">-</span>C <span class="token operator">/</span>usr<span class="token operator">/</span>localunzip nginx_upstream_check_module<span class="token operator">-</span>master<span class="token punctuation">.</span><span class="token builtin">zip</span> <span class="token operator">-</span>d <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token comment">#编译</span>cd <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>nginx<span class="token operator">-</span><span class="token number">1.20</span><span class="token number">.2</span>patch <span class="token operator">-</span>p1 <span class="token operator">&lt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>nginx_upstream_check_module<span class="token operator">-</span>master<span class="token operator">/</span>check_1<span class="token punctuation">.</span><span class="token number">20.1</span><span class="token operator">+</span><span class="token punctuation">.</span>patch  <span class="token comment">#打补丁</span><span class="token punctuation">.</span><span class="token operator">/</span>configure <span class="token operator">-</span><span class="token operator">-</span>prefix<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>nginx <span class="token operator">-</span><span class="token operator">-</span>add<span class="token operator">-</span>module<span class="token operator">=</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>nginx_upstream_check_module<span class="token operator">-</span>mastermake <span class="token operator">&amp;</span><span class="token operator">&amp;</span> make install<span class="token comment">#增加软连接</span>ln <span class="token operator">-</span>s <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>nginx<span class="token operator">/</span>sbin<span class="token operator">/</span>nginx <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span><span class="token comment">#创建日志目录</span>mkdir <span class="token operator">-</span>p  <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token comment">#建立conf目录</span>mkdir <span class="token operator">-</span>p <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>conf<span class="token punctuation">.</span>d<span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、修改nginx-conf"><a href="#4、修改nginx-conf" class="headerlink" title="4、修改nginx.conf"></a>4、修改nginx.conf</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">vim <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>nginx<span class="token operator">/</span>conf<span class="token operator">/</span>nginx<span class="token punctuation">.</span>confuser              nginx<span class="token punctuation">;</span>worker_processes  <span class="token number">4</span><span class="token punctuation">;</span>worker_rlimit_nofile <span class="token number">65535</span><span class="token punctuation">;</span>error_log         <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>error<span class="token punctuation">.</span>log warn<span class="token punctuation">;</span>pid               <span class="token operator">/</span>var<span class="token operator">/</span>run<span class="token operator">/</span>nginx<span class="token punctuation">.</span>pid<span class="token punctuation">;</span>events <span class="token punctuation">{</span>worker_connections  <span class="token number">32000</span><span class="token punctuation">;</span><span class="token punctuation">}</span>http <span class="token punctuation">{</span>include                        mime<span class="token punctuation">.</span>types<span class="token punctuation">;</span>default_type                   application<span class="token operator">/</span>octet<span class="token operator">-</span>stream<span class="token punctuation">;</span>log_format                     main <span class="token string">'$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"'</span><span class="token punctuation">;</span>access_log                     <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>access<span class="token punctuation">.</span>log main<span class="token punctuation">;</span>sendfile                       on<span class="token punctuation">;</span>keepalive_timeout              65s<span class="token punctuation">;</span>include                        <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>conf<span class="token punctuation">.</span>d<span class="token operator">/</span><span class="token operator">*</span><span class="token punctuation">.</span>conf<span class="token punctuation">;</span>server_tokens                  off<span class="token punctuation">;</span>server_names_hash_max_size     <span class="token number">512</span><span class="token punctuation">;</span>server_names_hash_bucket_size  <span class="token number">128</span><span class="token punctuation">;</span>client_header_buffer_size      32k<span class="token punctuation">;</span>large_client_header_buffers    <span class="token number">4</span> 32k<span class="token punctuation">;</span>gzip                           on<span class="token punctuation">;</span>gzip_disable                   msie6<span class="token punctuation">;</span>gzip_min_length                1k<span class="token punctuation">;</span>gzip_comp_level                <span class="token number">9</span><span class="token punctuation">;</span>gzip_buffers                   <span class="token number">4</span> 16k<span class="token punctuation">;</span>gzip_http_version              <span class="token number">1.1</span><span class="token punctuation">;</span>gzip_proxied                   <span class="token builtin">any</span><span class="token punctuation">;</span>gzip_vary                      on<span class="token punctuation">;</span>gzip_types                     text<span class="token operator">/</span>plain text<span class="token operator">/</span>css text<span class="token operator">/</span>xml text<span class="token operator">/</span>javascript text<span class="token operator">/</span>x<span class="token operator">-</span>component application<span class="token operator">/</span>json application<span class="token operator">/</span>javascript application<span class="token operator">/</span>xml application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml application<span class="token operator">/</span>xml<span class="token operator">+</span>rss application<span class="token operator">/</span>rss<span class="token operator">+</span>xml application<span class="token operator">/</span>atom<span class="token operator">+</span>xml application<span class="token operator">/</span>x<span class="token operator">-</span>font<span class="token operator">-</span>ttf application<span class="token operator">/</span>x<span class="token operator">-</span>web<span class="token operator">-</span>app<span class="token operator">-</span>manifest<span class="token operator">+</span>json font<span class="token operator">/</span>opentype image<span class="token operator">/</span>svg<span class="token operator">+</span>xml image<span class="token operator">/</span>x<span class="token operator">-</span>icon<span class="token punctuation">;</span>fastcgi_buffer_size            64k<span class="token punctuation">;</span>fastcgi_buffers                <span class="token number">4</span> 64k<span class="token punctuation">;</span>fastcgi_busy_buffers_size      128k<span class="token punctuation">;</span>fastcgi_temp_file_write_size   256k<span class="token punctuation">;</span>client_max_body_size           100m<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">#启动nginx</span>cd <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>nginx<span class="token operator">/</span>sbin<span class="token punctuation">.</span><span class="token operator">/</span>nginx <span class="token operator">-</span>c <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>nginx<span class="token operator">/</span>conf<span class="token operator">/</span>nginx<span class="token punctuation">.</span>conf <span class="token comment">#不推荐这样启动，选择systemctl管理</span><span class="token comment">#查看版本号</span>nginx <span class="token operator">-</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、systemctl管理"><a href="#5、systemctl管理" class="headerlink" title="5、systemctl管理"></a>5、systemctl管理</h2>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell面试题</title>
      <link href="/2022/05/12/shell-mian-shi-ti/"/>
      <url>/2022/05/12/shell-mian-shi-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="shel面试题"><a href="#shel面试题" class="headerlink" title="shel面试题"></a>shel面试题</h1><p>持续记录一些面试题</p><h2 id="1、变量"><a href="#1、变量" class="headerlink" title="1、变量"></a>1、变量</h2><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205122044884.png"></p><p>选择C</p><blockquote><p>单引号不识别特殊变量</p></blockquote><blockquote><p>双引号识别特殊变量</p></blockquote><blockquote><p>sh bash会开启子shell 不保留当前shell变量</p></blockquote><blockquote><p>source 或者./  是在当前shell环境加载脚本 保留shell变量</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">利用pstree查看shell的父进程和子进程yum <span class="token operator">-</span>y install psmisc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2、特殊变量"><a href="#2、特殊变量" class="headerlink" title="2、特殊变量"></a>2、特殊变量</h2><blockquote><p>$# 表示传递给函数或脚本的总个数</p></blockquote><blockquote><p>$* 和 $@ 表示传递给函数或脚本的所有参数</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$*</span> 和 <span class="token variable">$@</span> 的区别是什么？<span class="token variable">$*</span>把所有参数当做一个整体<span class="token variable">$@</span>把所有参数当做独立的数据体例子：<span class="token punctuation">[</span>root@mylinux ~<span class="token punctuation">]</span><span class="token comment"># cat  a.sh </span><span class="token comment">#! /bin/bash</span><span class="token builtin class-name">echo</span> <span class="token string">"演示 <span class="token entity" title="\\">\\</span>"</span><span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token variable">$*</span><span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token string">" "</span><span class="token keyword">for</span> <span class="token for-or-select variable">var</span> <span class="token keyword">in</span> <span class="token string">"<span class="token variable">$*</span>"</span><span class="token keyword">do</span>    <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$var</span>"</span><span class="token keyword">done</span><span class="token builtin class-name">echo</span> <span class="token string">"演示 <span class="token entity" title="\\">\\</span>"</span><span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token variable">$@</span><span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token string">" "</span><span class="token keyword">for</span> <span class="token for-or-select variable">var</span> <span class="token keyword">in</span> <span class="token string">"<span class="token variable">$@</span>"</span><span class="token keyword">do</span>    <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$var</span>"</span><span class="token keyword">done</span><span class="token punctuation">[</span>root@mylinux ~<span class="token punctuation">]</span><span class="token comment"># bash a.sh  1 2 3 4 5 6</span>演示 <span class="token string">"<span class="token variable">$*</span>"</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span>演示 <span class="token string">"<span class="token variable">$@</span>"</span> <span class="token number">1</span><span class="token number">2</span><span class="token number">3</span><span class="token number">4</span><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> 题目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运维规范-自用</title>
      <link href="/2022/05/11/yun-wei-gui-fan-zi-yong/"/>
      <url>/2022/05/11/yun-wei-gui-fan-zi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="公司运维管理规范"><a href="#公司运维管理规范" class="headerlink" title="公司运维管理规范"></a>公司运维管理规范</h1><h3 id="1、获取部署资源信息"><a href="#1、获取部署资源信息" class="headerlink" title="1、获取部署资源信息"></a>1、获取部署资源信息</h3><p>1、登录工单系统，先看一下给的资源情况，是否符合部署条件，若有问题即使和项目联系解决，不要盲目进行部署</p><p>2、依次登录服务器，查看服务器状态，有没有无法登录，密码错误等情况及时反馈</p><p>3、修改初始密码</p><p>4、挂载硬盘，修改dns</p><h3 id="2、部署流程"><a href="#2、部署流程" class="headerlink" title="2、部署流程"></a>2、部署流程</h3><p>1、先确定好部署架构再进行部署</p><p>2、服务器初始化（通过脚本）</p><p>3、安装中间件、基础环境（一般采取工单系统的版本）</p><p>4、项目数据库迁移（开发本地测试库迁移至线上数据库）</p><p>5、jenkins构建（根据工单的git进行构建）</p><p>6、修改配置、启动项目（根据日志、端口验证项目状态）</p><p>7、nginx转发（转发后验证地址状态，访问的接口状态）</p><p>8、填写工单内容（填写转发后地址，交由项目进行访问、测试）</p><p>9、至此部署流程结束</p><h3 id="3、自动化"><a href="#3、自动化" class="headerlink" title="3、自动化"></a>3、自动化</h3><p>1、确认客户是否给ssh端口</p><p>有ssh端口：通过jenkins内置ssh将包推送，结合脚本进行自动更新部署（可以结合ansible）</p><p>无ssh端口：通过agent工具通过curl命令，结合脚本进行自动更新部署（可以结合ansible）</p><p>2、自动推送更新</p><p>测试、确认自动更新脚本没有语法错误，没有问题后，结合jenkins完成进行整体更新流程测试</p><h3 id="4、监控"><a href="#4、监控" class="headerlink" title="4、监控"></a>4、监控</h3><p>1、将项目地址进行web监控，微服务架构由开发提供接口地址，对接口地址进行监控</p><p>2、利用zabbix或prometheus对服务器资源进行监控</p><h3 id="5、文档"><a href="#5、文档" class="headerlink" title="5、文档"></a>5、文档</h3><p>1、将部署的详细情况，部署细节记录在公司文档中</p><p>2、整理项目给与的服务器文档和服务器部署文档单独归档至文件服务器，便于以后查找</p><p>3、常州、扬州、盐城大地区在企业微信形成表格</p><h1 id="故障处理规范"><a href="#故障处理规范" class="headerlink" title="故障处理规范"></a>故障处理规范</h1><h3 id="1、基本原则"><a href="#1、基本原则" class="headerlink" title="1、基本原则"></a>1、基本原则</h3><p> 在故障处理过程中采取的所有手段和行动，一切以恢复业务为最高优先级。</p><h3 id="2、流程机制"><a href="#2、流程机制" class="headerlink" title="2、流程机制"></a>2、流程机制</h3><blockquote><p>1、组员根据zabbix或其他途径知道某个业务出现问题，根据地区、业务对应负责的组员进行处理</p><p>2、对于故障进行基本判断，如果问题和恢复过程非常明确，以优先恢复业务优先</p><p>3、若问题无法快速定位，存在难点或影响范围较大，由组长介入协助解决</p><p>4、若问题牵扯较多无法找到故障点，由经理介入协助解决，并通知技术支持部对客户发出公告，直至故障完全解决</p></blockquote><h3 id="3、事后总结"><a href="#3、事后总结" class="headerlink" title="3、事后总结"></a>3、事后总结</h3><p>每次事故，需要在事故记录系统中详细填写故障时间，内容，涉及人员，解决流程，便于查找、总结</p><p>每次故障事后需自我反思：</p><blockquote><p>一：故障原因有哪些？</p><p>二：我们做什么，怎么做才能确保下次不会再出现类似故障？</p><p>三：当时如果我们做了什么，可以用更短的时间恢复业务？</p></blockquote><h1 id="项目更新规范"><a href="#项目更新规范" class="headerlink" title="项目更新规范"></a>项目更新规范</h1><h3 id="1、更新时间"><a href="#1、更新时间" class="headerlink" title="1、更新时间"></a>1、更新时间</h3><blockquote><p>1、5.30下班后：正常项目统一更新时间</p><p>2、12.30后：轻微紧急项目，下午需要实现需求或下午需要演示的项目</p><p>3、需要立即更新：紧急的项目，需要开发经过项目的允许，如线上较大项目需通知技术支持部对客户发出公告，确保项目正常访问（可能存在回滚情况，预留时间要长一些）</p></blockquote><h3 id="2、更新流程"><a href="#2、更新流程" class="headerlink" title="2、更新流程"></a>2、更新流程</h3><blockquote><p>1、首先和开发、项目沟通好更新时间，更新内容，必要时让开发提供项目访问地址便于精确定位</p><p>2、如果开发、项目说的含糊不清可以拒绝更新，弄清楚再更新，避免更新错误问题</p><p>3、若自己不知道更新的项目、服务器地址等信息，由组长介入协助更新，不可盲目更新</p></blockquote><h3 id="3、更新验证"><a href="#3、更新验证" class="headerlink" title="3、更新验证"></a>3、更新验证</h3><blockquote><p>1、查看开发给的包，或者自动构建的包的实际大小和线上包的大小，是否有明显区别</p><p>2、查看包的日期是不是今天的</p><p>3、更新后查看项目访问地址是否可以正常访问</p><p>4、如果页面或接口报错，及时查看后台日志解决报错</p><p>5、自查结束后，告知对应的开发，由开发进行测试</p></blockquote><h1 id="密码使用规范"><a href="#密码使用规范" class="headerlink" title="密码使用规范"></a>密码使用规范</h1><h3 id="1、密码示例"><a href="#1、密码示例" class="headerlink" title="1、密码示例"></a>1、密码示例</h3><p>项目所涉及的密码不可使用弱密码 </p><blockquote><p>使用数字+英文字母+特殊符号，总长度不小于10字符</p><p>错误示例：123456  simple  simple123  </p><p>正确示例：Simple@01!  Simple@2022!   Simple_app@2022!</p></blockquote><h3 id="2、密码修改"><a href="#2、密码修改" class="headerlink" title="2、密码修改"></a>2、密码修改</h3><p>密码如果需修改，必须按照上述规范，开发或者别人要求使用弱密码应当拒绝</p><h1 id="端口使用规范"><a href="#端口使用规范" class="headerlink" title="端口使用规范"></a>端口使用规范</h1><h3 id="1、项目端口"><a href="#1、项目端口" class="headerlink" title="1、项目端口"></a>1、项目端口</h3><blockquote><p>tomcat:</p></blockquote><p>server.xml端口修改规范</p><pre class="line-numbers language-none"><code class="language-none">&lt;Server port="1xxxx" shutdown="SHUTDOWN"&lt;Connector port="xxxx" protocol="HTTP/1.1"&lt;Connector port="2xxxx" protocol="org.apache.coyote.http11.Http11AprProtocol"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>示例：</p><pre class="line-numbers language-none"><code class="language-none">&lt;Server port="18180" shutdown="SHUTDOWN"&lt;Connector port="8180" protocol="HTTP/1.1"&lt;Connector port="28180" protocol="org.apache.coyote.http11.Http11AprProtocol"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>微服务:</p></blockquote><pre class="line-numbers language-none"><code class="language-none">业务使用8开头 8180 8280框架使用7开头 7772 7777<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="Jenkins规范"><a href="#Jenkins规范" class="headerlink" title="Jenkins规范"></a>Jenkins规范</h1><h3 id="1、权限设置"><a href="#1、权限设置" class="headerlink" title="1、权限设置"></a>1、权限设置</h3><p>jenkins指定项目对指定开发人员开放，不得随意将管理员用户密码等信息告知他人，若开发有更新需求可单独配置项目的更新、取消权限</p><h3 id="2、jenkins命名规范"><a href="#2、jenkins命名规范" class="headerlink" title="2、jenkins命名规范"></a>2、jenkins命名规范</h3><blockquote><p>&lt;地区 + 项目名称 - 备注信息&gt; 已便于其他人员快速定位对应的项目</p><p>示例：</p><p>常州xxx-线上docker版</p><p>常州xxx-mysql测试版</p></blockquote><h3 id="3、jenkins描述"><a href="#3、jenkins描述" class="headerlink" title="3、jenkins描述"></a>3、jenkins描述</h3><p> 需要写，项目未转发的访问地址，和转发后的访问地址，还有是否自动部署的标注</p><blockquote><p>示例：</p></blockquote><pre class="line-numbers language-none"><code class="language-none">自动部署http://192.168.206.133:8280/zhbg/login.shtml   转发前https://zhzl.api.czssq.net/zhbg/login.shtml    转发后<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="4、项目、脚本存放路径"><a href="#4、项目、脚本存放路径" class="headerlink" title="4、项目、脚本存放路径"></a>4、项目、脚本存放路径</h3><p>目录使用大写，若docker部署使用_DOCKER后缀，以便运维人员进行区分</p><blockquote><p>/home/dpan/simplesoft/apps/XXX</p><p>示例：</p><p>tomcat部署：</p><p>/home/dpan/simplesoft/apps/SHFL_CZ</p><p>docker部署：</p><p>/home/dpan/simplesoft/apps/SHFL_CZ_DOCKER</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自用 </tag>
            
            <tag> 规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>firewalld备忘</title>
      <link href="/2022/05/10/firewalld-bei-wang/"/>
      <url>/2022/05/10/firewalld-bei-wang/</url>
      
        <content type="html"><![CDATA[<p><strong>CentOS7 中使用 firewall-cmd 配置只允许指定ip访问本机的指定端口</strong></p><p>1、启用firewalld </p><pre class="line-numbers language-none"><code class="language-none">systemctl enable firewalld systemctl start firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>2、更改防火墙默认区域为trusted，默认放行所有连接请求（默认为public区）</p><pre class="line-numbers language-none"><code class="language-none">firewall-cmd --set-default-zone=trusted<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、新建一个zone，将想要访问本机80端口的ip，如：192.168.10.134 ，添加的这个zone中，同时在这个zone中放行80端口。</p><pre class="line-numbers language-none"><code class="language-none">firewall-cmd --permanent --new-zone=newzonefirewall-cmd --permanent --zone=newzone --add-source=192.168.10.134firewall-cmd --permanent --zone=newzone --add-port=80/tcp#可在newzone中添加多个放行的端口ip 添加多条#删除对应策略将（--add-source、--add-rich-rule）更改为（--remove-source、--remove-rich-rule） --permanent设为永久策略 --zone设定指定zone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4、除192.168.10.134这个ip以外的地址访问本机时会使用当前默认的trusted这个zone里的规则，即禁止访问本机的80端口。</p><pre class="line-numbers language-none"><code class="language-none">#新增firewall-cmd --permanent --zone=trusted --add-rich-rule="rule family="ipv4" port protocol="tcp" port="80" drop"#移除firewall-cmd --permanent --zone=trusted --remove-rich-rule="rule family="ipv4" port protocol="tcp" port="27000" drop"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启防火墙</p><pre class="line-numbers language-none"><code class="language-none">systemctl restart firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看配置是否生效：</p><pre class="line-numbers language-none"><code class="language-none">firewall-cmd --list-all-zone<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>重新载入</p><pre class="line-numbers language-none"><code class="language-none">firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> firewalld </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis问题汇总</title>
      <link href="/2022/05/09/redis-wen-ti-hui-zong/"/>
      <url>/2022/05/09/redis-wen-ti-hui-zong/</url>
      
        <content type="html"><![CDATA[<h1 id="启动警告合集"><a href="#启动警告合集" class="headerlink" title="启动警告合集"></a>启动警告合集</h1><h2 id="1、WARNING-The-TCP-backlog-setting-of-511-cannot-be-enforced-because-proc-sys-net-core-somaxconn-is-set-to-the-lower-value-of-128"><a href="#1、WARNING-The-TCP-backlog-setting-of-511-cannot-be-enforced-because-proc-sys-net-core-somaxconn-is-set-to-the-lower-value-of-128" class="headerlink" title="1、WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128."></a>1、WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</h2><h3 id="TCP积压值过小问题"><a href="#TCP积压值过小问题" class="headerlink" title="TCP积压值过小问题"></a>TCP积压值过小问题</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"net.core.somaxconn = 1024"</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.confsysctl -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2、WARNING-overcommit-memory-is-set-to-0-Background-save-may-fail-under-low-memory-condition-To-fix-this-issue-add-‘vm-overcommit-memory-1’-to-etc-sysctl-conf-and-then-reboot-or-run-the-command-‘sysctl-vm-overcommit-memory-1’-for-this-to-take-effect"><a href="#2、WARNING-overcommit-memory-is-set-to-0-Background-save-may-fail-under-low-memory-condition-To-fix-this-issue-add-‘vm-overcommit-memory-1’-to-etc-sysctl-conf-and-then-reboot-or-run-the-command-‘sysctl-vm-overcommit-memory-1’-for-this-to-take-effect" class="headerlink" title="2、WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add ‘vm.overcommit_memory = 1’ to /etc/sysctl.conf and then reboot or run the command ‘sysctl vm.overcommit_memory=1’ for this to take effect."></a>2、WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add ‘vm.overcommit_memory = 1’ to /etc/sysctl.conf and then reboot or run the command ‘sysctl vm.overcommit_memory=1’ for this to take effect.</h3><h3 id="解决内存方面问题"><a href="#解决内存方面问题" class="headerlink" title="解决内存方面问题"></a>解决内存方面问题</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"vm.overcommit_memory = 1"</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.confsysctl -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3、WARNING-you-have-Transparent-Huge-Pages-THP-support-enabled-in-your-kernel-This-will-create-latency-and-memory-usage-issues-with-Redis-To-fix-this-issue-run-the-command-‘echo-never-gt-sys-kernel-mm-transparent-hugepage-enabled’-as-root-and-add-it-to-your-etc-rc-local-in-order-to-retain-the-setting-after-a-reboot-Redis-must-be-restarted-after-THP-is-disabled"><a href="#3、WARNING-you-have-Transparent-Huge-Pages-THP-support-enabled-in-your-kernel-This-will-create-latency-and-memory-usage-issues-with-Redis-To-fix-this-issue-run-the-command-‘echo-never-gt-sys-kernel-mm-transparent-hugepage-enabled’-as-root-and-add-it-to-your-etc-rc-local-in-order-to-retain-the-setting-after-a-reboot-Redis-must-be-restarted-after-THP-is-disabled" class="headerlink" title="3、WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command ‘echo never > /sys/kernel/mm/transparent_hugepage/enabled’ as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled."></a>3、WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command ‘echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled’ as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">'echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled'</span> <span class="token operator">&gt;&gt;</span> /etc/rc.local<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>内核中启用了透明的大页面THP,reboot重启后生效</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 报错&amp;警告 </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github一些技巧</title>
      <link href="/2022/05/08/github-yi-xie-ji-qiao/"/>
      <url>/2022/05/08/github-yi-xie-ji-qiao/</url>
      
        <content type="html"><![CDATA[<h2 id="代码跳转："><a href="#代码跳转：" class="headerlink" title="代码跳转："></a>代码跳转：</h2><ol><li>下载到本地 </li><li>在线vscode：仓库详情界面按下<code>"。"</code>键，</li></ol><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205082057461.png"></p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205082057192.png"></p><h2 id="在线运行项目"><a href="#在线运行项目" class="headerlink" title="在线运行项目"></a>在线运行项目</h2><p>在项目地址前加上<code>gitpod.io/#/</code>前缀</p><p>内置环境，python go npm docker等等</p><p><a href="https://github.com/nginx/nginx">https://github.com/nginx/nginx</a> —&gt; <a href="https://gitpod.io/#/github.com/nginx/nginx">https://gitpod.io/#/github.com/nginx/nginx</a></p><p>登陆：</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205082107688.png"></p><p>运行：</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205082107997.png"></p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql 主从/双主同步</title>
      <link href="/2022/05/07/mysql-zhu-cong-shuang-zhu-tong-bu/"/>
      <url>/2022/05/07/mysql-zhu-cong-shuang-zhu-tong-bu/</url>
      
        <content type="html"><![CDATA[<h1 id="Mysql-主从-双主同步"><a href="#Mysql-主从-双主同步" class="headerlink" title="Mysql 主从/双主同步"></a>Mysql 主从/双主同步</h1><h1 id="主从同步"><a href="#主从同步" class="headerlink" title="主从同步"></a>主从同步</h1><h2 id="一、准备阶段"><a href="#一、准备阶段" class="headerlink" title="一、准备阶段:"></a>一、准备阶段:</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#共3台服务器，2台安装mysql，1台nginx（主从同步不用nginx，双主需要nginx）</span><span class="token comment">#这里默认mysqlA为主库（有数据），mysqlB为从库（无数据），mysqlA无数据库也是可以的</span>mysqlA    mysqlB     nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="二、登录mysqlA和mysqlB修改-my-cnf-配置"><a href="#二、登录mysqlA和mysqlB修改-my-cnf-配置" class="headerlink" title="二、登录mysqlA和mysqlB修改 my.cnf 配置"></a>二、登录mysqlA和mysqlB修改 my.cnf 配置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server_id <span class="token operator">=</span> <span class="token number">1</span><span class="token comment">#这个配置不能 重复，可以随意命名 为了方便顺序起  mysqlA id 1   mysqlA id 2</span><span class="token comment">#开启bin日志</span>log-bin<span class="token operator">=</span> mysql-bin<span class="token comment">#开启bin日志级别 有三种 我常用 row 行级别 更详细日志</span>binlog-format<span class="token operator">=</span>ROW<span class="token comment">#忽略 需要同步的表 #也可以配置 只同步的表 replicate-do-db=test</span>replicate-ignore-db<span class="token operator">=</span>mysqlreplicate-ignore-db<span class="token operator">=</span>sysreplicate-ignore-db<span class="token operator">=</span>information_schemareplicate-ignore-db<span class="token operator">=</span>performance_schema<span class="token comment">#双主都是0，可读写，1是可读</span>read-only<span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">relay_log</span><span class="token operator">=</span>mysql-relay-binlog-slave-updates<span class="token operator">=</span>on<span class="token comment">##初始id值mysqlA为 1 ，mysqlA为 2</span>auto-increment-offset<span class="token operator">=</span><span class="token number">1</span><span class="token comment">##自增步幅度 2，因为负载2台所以这边设置2，根据自己的要求</span>auto-increment-increment<span class="token operator">=</span><span class="token number">2</span><span class="token comment">#注意：如果这个参数不同，可能会存在问题</span><span class="token assign-left variable">lower_case_table_names</span><span class="token operator">=</span><span class="token number">0</span>  <span class="token comment">#表明区分大小写</span><span class="token assign-left variable">lower_case_table_names</span><span class="token operator">=</span><span class="token number">1</span>  <span class="token comment">#表名不区分大小写</span><span class="token comment">#选择增加配置： slave-skip-errors=all  #跳过所有错误</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完整配置参考：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#mysqlA配置</span>server_id <span class="token operator">=</span> <span class="token number">1</span>log-bin<span class="token operator">=</span> mysql-binbinlog-format<span class="token operator">=</span>ROWreplicate-ignore-db<span class="token operator">=</span>mysqlreplicate-ignore-db<span class="token operator">=</span>sysreplicate-ignore-db<span class="token operator">=</span>information_schemareplicate-ignore-db<span class="token operator">=</span>performance_schema<span class="token comment">#slave-skip-errors=all</span>read-only<span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">relay_log</span><span class="token operator">=</span>mysql-relay-binlog-slave-updates<span class="token operator">=</span>onauto-increment-offset<span class="token operator">=</span><span class="token number">1</span>auto-increment-increment<span class="token operator">=</span><span class="token number">2</span><span class="token comment">#mysqlB配置</span>server_id <span class="token operator">=</span> <span class="token number">2</span>log-bin<span class="token operator">=</span> mysql-binbinlog-format<span class="token operator">=</span>ROWreplicate-ignore-db<span class="token operator">=</span>mysqlreplicate-ignore-db<span class="token operator">=</span>sysreplicate-ignore-db<span class="token operator">=</span>information_schemareplicate-ignore-db<span class="token operator">=</span>performance_schema<span class="token comment">#slave-skip-errors=all</span>read-only<span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">relay_log</span><span class="token operator">=</span>mysql-relay-binlog-slave-updates<span class="token operator">=</span>onauto-increment-offset<span class="token operator">=</span><span class="token number">2</span>auto-increment-increment<span class="token operator">=</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、重启两台数据库"><a href="#三、重启两台数据库" class="headerlink" title="三、重启两台数据库"></a>三、重启两台数据库</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl restart mysql<span class="token comment">#在挂载的data目录里面有mysql-bin.index和类似命名mysql-bin.0000001表示开启日志成功</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="四、开始同步"><a href="#四、开始同步" class="headerlink" title="四、开始同步"></a>四、开始同步</h2><p><font color="#dd0000"><strong>注意 ：开启同步操作必须先优先从库读主库</strong></font> </p><p><font color="#dd0000"><strong>举例：mysqlA (数据有) mysqlB(数据没有) 则必须先操作B库，去读 A库的日志同步，否侧 数据 会全部丢失</strong></font> </p><p>登录  mysqlA</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql -u root -pmysql<span class="token operator">&gt;</span> show master status<span class="token punctuation">;</span>mysql<span class="token operator">&gt;</span> show master status<span class="token punctuation">;</span>+------------------+----------+--------------+------------------+-------------------+<span class="token operator">|</span> File             <span class="token operator">|</span> Position <span class="token operator">|</span> Binlog_Do_DB <span class="token operator">|</span> Binlog_Ignore_DB <span class="token operator">|</span> Executed_Gtid_Set <span class="token operator">|</span>+------------------+----------+--------------+------------------+-------------------+<span class="token operator">|</span> mysql-bin.000022 <span class="token operator">|</span> <span class="token number">55789429</span> <span class="token operator">|</span>              <span class="token operator">|</span>                  <span class="token operator">|</span>                   <span class="token operator">|</span>+------------------+----------+--------------+------------------+-------------------+<span class="token comment">##需要记录,然后登录 mysqlB开启同步操作</span><span class="token function">file</span>   mysql-bin.000022    pos  <span class="token number">55789429</span> <span class="token comment">#根据实际填写</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>登录mysqlB</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#读取远程bin日志开启同步</span>mysql<span class="token operator">&gt;</span> change master to <span class="token assign-left variable">master_host</span><span class="token operator">=</span><span class="token string">'mysqlA的ip'</span>,  <span class="token assign-left variable">master_port</span><span class="token operator">=</span><span class="token number">3306</span>, <span class="token assign-left variable">master_user</span><span class="token operator">=</span><span class="token string">'root'</span>,  <span class="token assign-left variable">master_password</span><span class="token operator">=</span><span class="token string">'Simple@01!'</span>,  <span class="token assign-left variable">master_log_file</span><span class="token operator">=</span><span class="token string">'mysql-bin.000022'</span>,  <span class="token assign-left variable">master_log_pos</span><span class="token operator">=</span><span class="token number">55789429</span> <span class="token punctuation">;</span>Query OK, <span class="token number">0</span> rows affected, <span class="token number">2</span> warnings <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> start slave<span class="token punctuation">;</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span><span class="token comment">#查看是否成功</span>mysql<span class="token operator">&gt;</span> show slave status<span class="token punctuation">\</span><span class="token punctuation">\</span>G*************************** <span class="token number">1</span>. row ***************************               Slave_IO_State: Waiting <span class="token keyword">for</span> master to send event                  Master_Host: <span class="token number">192.168</span>.10.115                  Master_User: simple                  Master_Port: <span class="token number">3306</span>                Connect_Retry: <span class="token number">60</span>              Master_Log_File: mysql-bin.000022          Read_Master_Log_Pos: <span class="token number">45299492</span>               Relay_Log_File: mysql-relay-bin.000004                Relay_Log_Pos: <span class="token number">55236</span>        Relay_Master_Log_File: mysql-bin.000022             Slave_IO_Running: Yes   <span class="token comment">#看这个状态 yes为成功</span>            Slave_SQL_Running: Yes   <span class="token comment">#看这个状态 yes为成功</span>              Replicate_Do_DB:           Replicate_Ignore_DB: mysql,sys,information_schema,performance_schema           Replicate_Do_Table:        Replicate_Ignore_Table:       Replicate_Wild_Do_Table:   Replicate_Wild_Ignore_Table:                    Last_Errno: <span class="token number">0</span>                   Last_Error:                  Skip_Counter: <span class="token number">0</span>          Exec_Master_Log_Pos: <span class="token number">45299492</span>              Relay_Log_Space: <span class="token number">55443</span>              Until_Condition: None               Until_Log_File:                 Until_Log_Pos: <span class="token number">0</span>           Master_SSL_Allowed: No           Master_SSL_CA_File:            Master_SSL_CA_Path:               Master_SSL_Cert:             Master_SSL_Cipher:                Master_SSL_Key:         Seconds_Behind_Master: <span class="token number">0</span>Master_SSL_Verify_Server_Cert: No                Last_IO_Errno: <span class="token number">0</span>                Last_IO_Error:                Last_SQL_Errno: <span class="token number">0</span>               Last_SQL_Error:   Replicate_Ignore_Server_Ids:              Master_Server_Id: <span class="token number">115</span>                  Master_UUID: a22728a4-9520-11ec-96f4-0050568d79d0             Master_Info_File: /home/dpan/mysqldata/master.info                    SQL_Delay: <span class="token number">0</span>          SQL_Remaining_Delay: NULL      Slave_SQL_Running_State: Slave has <span class="token builtin class-name">read</span> all relay log<span class="token punctuation">;</span> waiting <span class="token keyword">for</span> <span class="token function">more</span> updates <span class="token comment">#查看这个状态,有没有报错信息</span>           Master_Retry_Count: <span class="token number">86400</span>                  Master_Bind:       Last_IO_Error_Timestamp:      Last_SQL_Error_Timestamp:                Master_SSL_Crl:            Master_SSL_Crlpath:            Retrieved_Gtid_Set:             Executed_Gtid_Set:                 Auto_Position: <span class="token number">0</span>         Replicate_Rewrite_DB:                  Channel_Name:            Master_TLS_Version: <span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>至此主从已经搭建完毕，可以在mysqlA添加删除或者修改一条数据，看mysqlB是否实时更新。</strong></p><h1 id="双主同步"><a href="#双主同步" class="headerlink" title="双主同步"></a>双主同步</h1><p>需要mysqlA读mysqlB的日志，命令一样这边就不写明了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#在mysqlB读取</span>mysql<span class="token operator">&gt;</span> show master status<span class="token punctuation">;</span><span class="token comment">#登录mysqlA</span>mysql<span class="token operator">&gt;</span> change master to <span class="token assign-left variable">master_host</span><span class="token operator">=</span><span class="token string">'mysqlB的ip'</span>,  <span class="token assign-left variable">master_port</span><span class="token operator">=</span><span class="token number">3306</span>, <span class="token assign-left variable">master_user</span><span class="token operator">=</span><span class="token string">'root'</span>,  <span class="token assign-left variable">master_password</span><span class="token operator">=</span><span class="token string">'Simple@01!'</span>,  <span class="token assign-left variable">master_log_file</span><span class="token operator">=</span><span class="token string">'mysql-bin.000001'</span>,  <span class="token assign-left variable">master_log_pos</span><span class="token operator">=</span><span class="token number">154</span><span class="token punctuation">;</span> <span class="token comment">#根据实际情况</span>start slave<span class="token punctuation">;</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在双主已经搭建完毕</p><h2 id="nginx负载"><a href="#nginx负载" class="headerlink" title="nginx负载"></a>nginx负载</h2><p>现在就可以用nginx 做负载，登录nginx服务器修改配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">stream  <span class="token punctuation">{</span>    upstream mysql <span class="token punctuation">{</span>        <span class="token comment">##负载 下面的 数据库</span>        server mysqlA的ip:3306 <span class="token assign-left variable">max_fails</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">fail_timeout</span><span class="token operator">=</span>30s<span class="token punctuation">;</span>        server mysqlB的ip:3306 <span class="token assign-left variable">max_fails</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">fail_timeout</span><span class="token operator">=</span>30s<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    server <span class="token punctuation">{</span>        <span class="token comment">## 负载端口</span>        listen <span class="token number">3306</span><span class="token punctuation">;</span>        proxy_connect_timeout 30s<span class="token punctuation">;</span>        proxy_timeout 120s<span class="token punctuation">;</span>        proxy_pass mysql<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">#重载</span>nginx -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数据库双主负载搭建成功</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 同步 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xtrabackup备份与恢复</title>
      <link href="/2022/05/06/xtrabackup-bei-fen-yu-hui-fu/"/>
      <url>/2022/05/06/xtrabackup-bei-fen-yu-hui-fu/</url>
      
        <content type="html"><![CDATA[<h1 id="Xtrabackup备份与恢复"><a href="#Xtrabackup备份与恢复" class="headerlink" title="Xtrabackup备份与恢复"></a>Xtrabackup备份与恢复</h1><h2 id="一、Xtrabackup介绍"><a href="#一、Xtrabackup介绍" class="headerlink" title="一、Xtrabackup介绍"></a>一、Xtrabackup介绍</h2><p>Percona-xtrabackup是 Percona公司开发的一个用于MySQL数据库物理热备的备份工具，支持MySQL、Percona server和MariaDB，开源免费，是目前较为受欢迎的主流备份工具。xtrabackup只能备份innoDB和xtraDB两种数据引擎的表，而不能备份MyISAM数据表。</p><p>MySQL冷备、mysqldump、MySQL热拷贝都无法实现对数据库进行增量备份。在实际生产环境中增量备份是非常实用的，如果数据大于50G或100G，存储空间足够的情况下，可以每天进行完整备份，如果每天产生的数据量较大，需要定制数据备份策略。例如每周实用完整备份，周一到周六实用增量备份。而Percona-Xtrabackup就是为了实现增量备份而出现的一款主流备份工具，</p><p>xtrabackup包含两个主要的工具，即xtrabackup和innobackupex，二者区别如下：</p><p>（1）xtrabackup只能备份innodb和xtradb两种引擎的表，而不能备份myisam引擎的表；</p><p>（2）innobackupex是一个封装了xtrabackup的Perl脚本，支持同时备份innodb和myisam，但在对myisam备份时需要加一个全局的读锁。还有就是myisam不支持增量备份</p><h2 id="二、Xtrabackup优点"><a href="#二、Xtrabackup优点" class="headerlink" title="二、Xtrabackup优点"></a>二、Xtrabackup优点</h2><p>（1）备份速度快，物理备份可靠</p><p>（2）备份过程不会打断正在执行的事务（无需锁表）</p><p>（3）能够基于压缩等功能节约磁盘空间和流量</p><p>（4）自动备份校验</p><p>（5）还原速度快</p><p>（6）可以流传将备份传输到另外一台机器上</p><p>（7）在不增加服务器负载的情况备份数据</p><h2 id="三、xtrabackup的安装部署以及备份恢复实现"><a href="#三、xtrabackup的安装部署以及备份恢复实现" class="headerlink" title="三、xtrabackup的安装部署以及备份恢复实现"></a>三、xtrabackup的安装部署以及备份恢复实现</h2><hr><h3 id="1、xtrabackup的安装"><a href="#1、xtrabackup的安装" class="headerlink" title="1、xtrabackup的安装"></a>1、xtrabackup的安装</h3><p>可以选择rpm包方式安装，也可以下载源码包编译安装</p><p>官网地址：</p><p><a href="https://www.percona.com/downloads/">Percona Software Downloads</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#yum：</span><span class="token comment">#安装percona依赖库</span>yum <span class="token function">install</span> <span class="token operator">&lt;</span>https://repo.percona.com/yum/percona-release-latest.noarch.rpm<span class="token operator">&gt;</span><span class="token comment">#查看可安装版本</span>yum list <span class="token operator">|</span> <span class="token function">grep</span> percona-xtrabackup<span class="token comment"># 5.6、5.7安装24的</span>yum <span class="token function">install</span> -y percona-xtrabackup-24<span class="token comment"># 8.0安装80的</span>yum <span class="token function">install</span> -y percona-xtrabackup-80<span class="token comment">#RPM</span><span class="token function">wget</span> <span class="token operator">&lt;</span>https://www.percona.com/downloads/XtraBackup/Percona-XtraBackup-2.4.9/binary/redhat/7/x86_64/percona-xtrabackup-24-2.4.9-1.el7.x86_64.rpm<span class="token operator">&gt;</span>yum <span class="token function">install</span> -y percona-xtrabackup-24-2.4.9-1.el7.x86_64.rpm <span class="token function">rpm</span> -qa <span class="token operator">|</span><span class="token function">grep</span> xtrabackuppercona-xtrabackup-24-2.4.9-1.el7.x86_64Xtrabackup中主要包含两个工具：xtrabackup：是用于热备innodb，xtradb表中数据的工具，不能备份其他类型的表，也不能备份数据表结构；innobackupex：是将xtrabackup进行封装的perl脚本，提供了备份myisam表的能力。常用选项:     --host     指定主机   --user     指定用户名   --password    指定密码   --port     指定端口   --databases     指定数据库   --incremental    创建增量备份   --incremental-basedir   指定包含完全备份的目录   --incremental-dir      指定包含增量备份的目录      --apply-log        对备份进行预处理操作                  一般情况下，在备份完成后，数据尚且不能用于恢复操作，因为备份的数据中可能会包含尚未提交的事务或已经提交但尚未同步至数据文件中的事务。因此，此时数据文件仍处理不一致状态。“准备”的主要作用正是通过回滚未提交的事务及同步已经提交的事务至数据文件也使得数据文件处于一致性状态。   --redo-only      不回滚未提交事务   --copy-back     恢复备份目录   装完xtrabackup后，生成以下几个工具<span class="token punctuation">[</span>root@localhost bin<span class="token punctuation">]</span><span class="token comment"># ./xb</span>xbcloud        xbcloud_osenv  xbcrypt        xbiff          xbrlapi        xbstream xbcloud和xbcloud_osenv是xtrabackup新的高级特性：云备份；xbcrypt也是新的特性，加密备份集；xbstream是xtrabackup的流数据功能，通过流数据功能，可将备份内容打包并传给管道后的压缩工具进行压缩；xtrabackup是主程序；innobackupex在以前是一个perl脚本，会调用xtrabackup这个二进制工具，从xtrabackup <span class="token number">2.3</span>开始，该工具使用C语言进行了重写，当前它是xtabackup二进制工具的一个软连接，但是实际的使用方法却不同，并且在以后的版本中会删除该工具。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用innobackupex备份时，其会调用xtrabackup备份所有的InnoDB表，复制所有关于表结构定义的相关文件(.frm)、以及MyISAM、MERGE、CSV和ARCHIVE表的相关文件，同时还会备份触发器和数据库配置信息相关的文件，这些文件会被保存到一个以时间命名的目录当中。在备份的同时，innobackupex还会在备份目录中创建如下文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>xtrabackup_checkpoints -- 备份类型<span class="token punctuation">(</span>如完全或增量<span class="token punctuation">)</span>、备份状态<span class="token punctuation">(</span>如是否已经为prepared状态<span class="token punctuation">)</span>和LSN<span class="token punctuation">(</span>日志序列号<span class="token punctuation">)</span>范围信息： 每个InnoDB页<span class="token punctuation">(</span>通常为16k大小<span class="token punctuation">)</span>都会包含一个日志序列号，即LSN，LSN是整个数据库系统的系统版本号，每个页面相关的LSN能够表明此页面最近是如何发生改变的。 <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>xtrabackup_binlog_info  --  mysql服务器当前正在使用的二进制日志文件及备份这一刻位置二进制日志时间的位置。 <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>xtrabackup_binlog_pos_innodb  --  二进制日志文件及用于InnoDB或XtraDB表的二进制日志文件的当前position。 <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>xtrabackup_binary  --  备份中用到的xtrabackup的可执行文件； <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>backup-my.cnf  --  备份命令用到的配置选项信息： 在使用innobackupex进行备份时，还可以使用--no-timestamp选项来阻止命令自动创建一个以时间命名的目录：如此一来，innobackupex命令将会创建一个BACKUP-DIR目录来存储备份数据。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：备份时需启动MySQL,恢复时需关闭MySQL,清空mysql数据目录且不能重新初始化,恢复数据后应该立即进行一次完全备份</strong></p><h3 id="2、xtrabackup全量备份与恢复"><a href="#2、xtrabackup全量备份与恢复" class="headerlink" title="2、xtrabackup全量备份与恢复"></a>2、xtrabackup全量备份与恢复</h3><h4 id="全量备份："><a href="#全量备份：" class="headerlink" title="全量备份："></a>全量备份：</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">备份：innobackupex --defaults-file<span class="token operator">=</span>/etc/my.cnf --user<span class="token operator">=</span>DBUSER --password<span class="token operator">=</span>DBUSERPASS  /path/to/BACKUP-DIR/<span class="token comment">#比如我/path/to/BACKUP-DIR/指定：/home/dpan/mysql/bak</span><span class="token comment">#生成目录为：/home/dpan/mysql/bak/2022-05-06_17-53-17</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>可能存在的报错：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xtrabackup: Error: --defaults-file must be specified first on the <span class="token builtin class-name">command</span> line<span class="token comment">#--defaults-file=/etc/my.cnf参数必须写在最前面</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="全量恢复："><a href="#全量恢复：" class="headerlink" title="全量恢复："></a>全量恢复：</h4><p><strong>注意：恢复不用启动mysql,mysql需要关闭状态</strong></p><p>如果B库要恢复A库的备份，则需要B库删除原有的数据，例如：/usr/local/mysql/data</p><p>配置my.cnf的数据目录路径，否则会报错，需要和A一致</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#一般情况下，在备份完成后，数据尚且不能用于恢复操作，因为备份的数据中可能会包含尚未提交的事务或者已经提交但尚未同步至数据文件中的事务。因此，此时数据文件仍处于不一致状态。"准备"的主要作用正是通过回滚未提交的事务及同步已经提交的事务至数据文件也使用得数据文件处于一致性状态。</span><span class="token comment">#innobackupex命令的--apply-log选项可用于实现上述功能，如下面的命令：</span>恢复：innobackupex --apply-log /home/dpan/mysql/bak/2022-05-06_17-53-17innobackupex --copy-back   /home/dpan/mysql/bak/2022-05-06_17-53-17<span class="token comment">#completed OK!　　#看到completed OK就是恢复正常了</span><span class="token comment">#ll /home/dpan/mysql/data/ ##根据实际data路径填写，在B上查看数据目录，可以看到数据已经恢复，但是属主会有问题，需要进行修改</span><span class="token function">chown</span> mysql:mysql /home/dpan/mysql/data/ <span class="token comment">#根据实际data路径填写</span>systemctl start mysqld <span class="token comment">#启动mysql</span>mysql -uroot -p -e <span class="token string">"show databases;"</span>　　<span class="token comment">#查看数据，是否恢复</span><span class="token punctuation">[</span>root@localhost test<span class="token punctuation">]</span><span class="token comment"># mysql -usimple -p -e "show databases;"</span>Enter password: +--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> bitbucketdb        <span class="token operator">|</span><span class="token operator">|</span> confluencedb       <span class="token operator">|</span><span class="token operator">|</span> ferry              <span class="token operator">|</span><span class="token operator">|</span> jira               <span class="token operator">|</span><span class="token operator">|</span> jumpserver         <span class="token operator">|</span><span class="token operator">|</span> jumpserver_2022    <span class="token operator">|</span><span class="token operator">|</span> mindoc_db          <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> ranzhi             <span class="token operator">|</span><span class="token operator">|</span> simpleim           <span class="token operator">|</span><span class="token operator">|</span> simpletotal        <span class="token operator">|</span><span class="token operator">|</span> sys                <span class="token operator">|</span><span class="token operator">|</span> zdoo               <span class="token operator">|</span><span class="token operator">|</span> zentao             <span class="token operator">|</span>+--------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、xtrabackup增量备份与恢复"><a href="#3、xtrabackup增量备份与恢复" class="headerlink" title="3、xtrabackup增量备份与恢复"></a>3、xtrabackup增量备份与恢复</h3><p>暂时没有实际需求，等有需求再实践</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rabbitmq设置路径前缀</title>
      <link href="/2022/05/05/rabbitmq-she-zhi-lu-jing-qian-zhui/"/>
      <url>/2022/05/05/rabbitmq-she-zhi-lu-jing-qian-zhui/</url>
      
        <content type="html"><![CDATA[<h1 id="rabbtimq设置前缀"><a href="#rabbtimq设置前缀" class="headerlink" title="rabbtimq设置前缀"></a>rabbtimq设置前缀</h1><p>因为客户有时候只开放指定端口，只能将端口以目录的形式进行反向代理，修改tabbitmq的config文件，往下找到path_prefix相关字段,修改后重启rabbitmq生效 </p><pre class="line-numbers language-none"><code class="language-none">vim /etc/rabbitmq/rabbitmq.config {rabbitmq_management,   [{path_prefix, "/mq"}]},         #此处我修改前缀为/mq<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="可能会存在的问题："><a href="#可能会存在的问题：" class="headerlink" title="可能会存在的问题："></a>可能会存在的问题：</h2><p><strong>Rabbitmq Management 在使用某些功能时 比如增加Virtual host服务端返回 405 Method not allowed</strong></p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072336369.png"></p><p>正常登录 Rabbitmq Management 后，调用某些 url 包含 %2f 的接口时，后端返回:</p><pre class="line-numbers language-none"><code class="language-none">405 Method not allowed<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="原因："><a href="#原因：" class="headerlink" title="原因："></a><strong>原因：</strong></h3><p>正常访问该地址：<a href="https://xxx.xxx.com/mq/">https://xxx.xxx.com/mq/</a> 时能正常跳转，但是 rabbitmq management 的 api url 出现了 %2f 字符，这些字符会在经过 nginx 被转换为/</p><h3 id="使用以下nginx配置解决这问题"><a href="#使用以下nginx配置解决这问题" class="headerlink" title="使用以下nginx配置解决这问题"></a>使用以下nginx配置解决这问题</h3><p>nginx配置：</p><pre class="line-numbers language-none"><code class="language-none">    location  /mq/ {  # proxy_pass http://xx.xx.xx.xx:15672/mq;    proxy_set_header        Host $host;    proxy_set_header        X-Real-IP $remote_addr;    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;    proxy_set_header        Upgrade $http_upgrade;    proxy_set_header        Connection "upgrade";        if ($request_uri ~* "/mq/(.*)"){                        proxy_pass http://xx.xx.xx.xx:15672/mq/$1;                        break;        }    proxy_pass http://xx.xx.xx.xx:15672/mq;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> rabbitmq </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Reids集群slots缺失修复</title>
      <link href="/2022/05/04/reids-ji-qun-slots-que-shi-xiu-fu/"/>
      <url>/2022/05/04/reids-ji-qun-slots-que-shi-xiu-fu/</url>
      
        <content type="html"><![CDATA[<h1 id="Reids集群slots报错总结"><a href="#Reids集群slots报错总结" class="headerlink" title="Reids集群slots报错总结"></a>Reids集群slots报错总结</h1><h3 id="今天项目挂掉了，显示redis集群报错，看了报错日志，发现和redis的slots有关，报错如下："><a href="#今天项目挂掉了，显示redis集群报错，看了报错日志，发现和redis的slots有关，报错如下：" class="headerlink" title="今天项目挂掉了，显示redis集群报错，看了报错日志，发现和redis的slots有关，报错如下："></a>今天项目挂掉了，显示redis集群报错，看了报错日志，发现和redis的slots有关，报错如下：</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token number">2022</span>-04-04 09:54:06.734 <span class="token punctuation">[</span>localhost-startStop-1<span class="token punctuation">]</span> WARN  org.hibernate.id.UUIDHexGenerator - HHH000409: Using org.hibernate.id.UUIDHexGenerator <span class="token function">which</span> does not generate IETF RFC <span class="token number">4122</span> compliant UUID values<span class="token punctuation">;</span> consider using org.hibernate.id.UUIDGenerator instead<span class="token number">2022</span>-04-04 09:54:08.111 <span class="token punctuation">[</span>redisson-netty-1-1<span class="token punctuation">]</span> ERROR org.redisson.cluster.ClusterConnectionManager - cluster_state:fail <span class="token keyword">for</span> /192.168.205.82:6379<span class="token number">2022</span>-04-04 09:54:10.392 <span class="token punctuation">[</span>localhost-startStop-1<span class="token punctuation">]</span> ERROR o.hibernate.cache.redis.client.RedisClientFactory - Fail to create RedisClient.org.redisson.client.RedisConnectionException: Not all slots are covered<span class="token operator">!</span> Only <span class="token number">10923</span> slots are avaliableat org.redisson.cluster.ClusterConnectionManager.<span class="token operator">&lt;</span>init<span class="token operator">&gt;</span><span class="token punctuation">(</span>ClusterConnectionManager.java:175<span class="token punctuation">)</span>at org.redisson.config.ConfigSupport.createConnectionManager<span class="token punctuation">(</span>ConfigSupport.java:240<span class="token punctuation">)</span>at org.redisson.Redisson.<span class="token operator">&lt;</span>init<span class="token operator">&gt;</span><span class="token punctuation">(</span>Redisson.java:115<span class="token punctuation">)</span>at org.redisson.Redisson.create<span class="token punctuation">(</span>Redisson.java:152<span class="token punctuation">)</span>at org.hibernate.cache.redis.client.RedisClientFactory.createRedisClient<span class="token punctuation">(</span>RedisClientFactory.java:47<span class="token punctuation">)</span>at org.hibernate.cache.redis.client.RedisClientFactory.createRedisClient<span class="token punctuation">(</span>RedisClientFactory.java:64<span class="token punctuation">)</span>at org.hibernate.cache.redis.client.RedisClientFactory.createRedisClient<span class="token punctuation">(</span>RedisClientFactory.java:92<span class="token punctuation">)</span>at org.hibernate.cache.redis.hibernate5.AbstractRedisRegionFactory.createRedisClient<span class="token punctuation">(</span>AbstractRedisRegionFactory.java:65<span class="token punctuation">)</span>at org.hibernate.cache.redis.hibernate5.SingletonRedisRegionFactory.start<span class="token punctuation">(</span>SingletonRedisRegionFactory.java:55<span class="token punctuation">)</span>at org.hibernate.internal.CacheImpl.<span class="token operator">&lt;</span>init<span class="token operator">&gt;</span><span class="token punctuation">(</span>CacheImpl.java:49<span class="token punctuation">)</span>at org.hibernate.engine.spi.CacheInitiator.initiateService<span class="token punctuation">(</span>CacheInitiator.java:28<span class="token punctuation">)</span>at org.hibernate.engine.spi.CacheInitiator.initiateService<span class="token punctuation">(</span>CacheInitiator.java:20<span class="token punctuation">)</span>at org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.initiateService<span class="token punctuation">(</span>SessionFactoryServiceRegistryImpl.java:49<span class="token punctuation">)</span>at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService<span class="token punctuation">(</span>AbstractServiceRegistryImpl.java:254<span class="token punctuation">)</span>at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService<span class="token punctuation">(</span>AbstractServiceRegistryImpl.java:228<span class="token punctuation">)</span>at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService<span class="token punctuation">(</span>AbstractServiceRegistryImpl.java:207<span class="token punctuation">)</span>at org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService<span class="token punctuation">(</span>SessionFactoryServiceRegistryImpl.java:68<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1、登录服务器进行查看"><a href="#1、登录服务器进行查看" class="headerlink" title="1、登录服务器进行查看"></a>1、登录服务器进行查看</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">redis-cli -h <span class="token operator">&lt;</span>ip<span class="token operator">&gt;</span>  -p <span class="token operator">&lt;</span>端口<span class="token operator">&gt;</span> -a <span class="token operator">&lt;</span>密码<span class="token operator">&gt;</span><span class="token number">127.0</span>.0.1:700<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> <span class="token builtin class-name">set</span> age <span class="token number">20</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> CLUSTERDOWN The cluster is down<span class="token number">127.0</span>.0.1:700<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> cluster infocluster_state:failcluster_slots_assigned:16371cluster_slots_ok:16371cluster_slots_pfail:0cluster_slots_fail:0cluster_known_nodes:6cluster_size:3cluster_current_epoch:8cluster_my_epoch:1cluster_stats_messages_sent:1007cluster_stats_messages_received:1005<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="由于redis集群默认slots为16384个，而现在只有16371个，少了13个slots，再看一下slots信息："><a href="#由于redis集群默认slots为16384个，而现在只有16371个，少了13个slots，再看一下slots信息：" class="headerlink" title="由于redis集群默认slots为16384个，而现在只有16371个，少了13个slots，再看一下slots信息："></a>由于redis集群默认slots为16384个，而现在只有16371个，少了13个slots，再看一下slots信息：</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token number">127.0</span>.0.1:700<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span>cluster slots<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5460</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"5fbcbee6cff9c0e4391dbf1553e87befa4914049"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.86"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"25cf4ec8180d6cc7e78192cb0d2d021335501b6a"</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5461</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6606</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6608</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6613</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6615</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7037</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7039</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7471</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7473</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8197</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8199</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8324</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8326</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8342</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8344</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8492</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8494</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">9555</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">9557</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">9901</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">9903</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">9999</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">13</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10001</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10338</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">14</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10340</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10802</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">15</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10804</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10922</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.81"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"9d83c3a9be7ee1a12a38da33e260f4dbda059462"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"30a9d2065538e59874eced14836c512b5a0d09f4"</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">10923</span>    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">16383</span>    <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.82"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6379</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"031d12ae9a6f15e7550e17916454b41fdeaa0bbe"</span>    <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"192.168.205.86"</span>       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6380</span>       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"eeaa7bbb9e71c47d4c8c0fc67b188753910713e5"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、分析slots缺少情况"><a href="#2、分析slots缺少情况" class="headerlink" title="2、分析slots缺少情况"></a>2、分析slots缺少情况</h2><p>从上述slots中，把所有缺失的slots统计出来：</p><pre class="line-numbers language-none"><code class="language-none">0-54605461-66066608-66136615-70377039-74717473-81978199-83248326-83428344-84928494-95559557-99019903-999910001-1033810340-1080210804-1092210923-16383<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>缺失的slots为：</p><pre class="line-numbers language-none"><code class="language-none">6607 6614 7038 7472 8198 8325 8343 8493 9556 9902 10000 10339 10803<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>正好为我们缺失的13个slots (16384-16371=13)</p><h2 id="3、解决方法如下"><a href="#3、解决方法如下" class="headerlink" title="3、解决方法如下"></a>3、解决方法如下</h2><h3 id="3-1将一个或多个槽（slot）指派（assign）给当前节点"><a href="#3-1将一个或多个槽（slot）指派（assign）给当前节点" class="headerlink" title="3.1将一个或多个槽（slot）指派（assign）给当前节点"></a>3.1将一个或多个槽（slot）指派（assign）给当前节点</h3><pre class="line-numbers language-none"><code class="language-none">127.0.0.1:7000&gt;cluster addslots  6607 6614 7038 7472 8198 8325 8343 8493 9556 9902 10000 10339 10803OK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-2查看结果"><a href="#3-2查看结果" class="headerlink" title="3-2查看结果"></a>3-2查看结果</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token number">127.0</span>.0.1:700<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span>cluster infocluster_state:okcluster_slots_assigned:16384cluster_slots_ok:16384cluster_slots_pfail:0cluster_slots_fail:0cluster_known_nodes:6cluster_size:3cluster_current_epoch:30cluster_my_epoch:25cluster_stats_messages_ping_sent:2831cluster_stats_messages_pong_sent:686cluster_stats_messages_publish_sent:98525cluster_stats_messages_sent:102042cluster_stats_messages_ping_received:686cluster_stats_messages_pong_received:690cluster_stats_messages_publish_received:96234cluster_stats_messages_received:97610<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>集群里slots问题已经修复成功，下面进行检测，发现集群上一些slots有些问题</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./redis-trib.rb check <span class="token number">192.168</span>.205.81:6379<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Check <span class="token keyword">for</span> <span class="token function">open</span> slots<span class="token punctuation">..</span>.<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Node <span class="token number">192.168</span>.205.81:6379 has slots <span class="token keyword">in</span> importing state <span class="token punctuation">(</span><span class="token number">194,299</span>,626,660,710,1274,1819,1838,2109,3237,3504,3647,3909,4044,4313,4453,4478,4706,4979<span class="token punctuation">)</span>.<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Node <span class="token number">192.168</span>.205.81:6380 has slots <span class="token keyword">in</span> importing state <span class="token punctuation">(</span><span class="token number">6607,6614</span>,8712,9902<span class="token punctuation">)</span>.<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Node <span class="token number">192.168</span>.205.82:6379 has slots <span class="token keyword">in</span> importing state <span class="token punctuation">(</span><span class="token number">8712</span><span class="token punctuation">)</span>.<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> The following slots are open: <span class="token number">194,299</span>,626,660,710,1274,1819,1838,2109,3237,3504,3647,3909,4044,4313,4453,4478,4706,4979,6607,6614,8712,9902<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Check slots coverage<span class="token punctuation">..</span>.<span class="token punctuation">[</span>OK<span class="token punctuation">]</span> All <span class="token number">16384</span> slots covered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3-分别登录上述node的redis中，删除对应的slosts，再添加slots"><a href="#3-3-分别登录上述node的redis中，删除对应的slosts，再添加slots" class="headerlink" title="3-3 分别登录上述node的redis中，删除对应的slosts，再添加slots"></a>3-3 分别登录上述node的redis中，删除对应的slosts，再添加slots</h3><pre class="line-numbers language-none"><code class="language-none">127.0.0.1:7000&gt;cluster delslots 194 299 626 660 710 1274 1819 1838 2109 3237 3504 3647 3909 4044 4313 4453 4478 4706 4979ok127.0.0.1:7000&gt;cluster addslots 194 299 626 660 710 1274 1819 1838 2109 3237 3504 3647 3909 4044 4313 4453 4478 4706 4979ok<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>再对集群进行检测时，已经没有警告信息了，至此redis已全部修复完成</p><p>redis原理查看：<a href="https://www.cnblogs.com/mengchunchen/p/10059436.html">https://www.cnblogs.com/mengchunchen/p/10059436.html</a></p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> 修复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>磁盘的数据恢复</title>
      <link href="/2022/05/03/ci-pan-de-shu-ju-hui-fu/"/>
      <url>/2022/05/03/ci-pan-de-shu-ju-hui-fu/</url>
      
        <content type="html"><![CDATA[<h1 id="磁盘的数据恢复"><a href="#磁盘的数据恢复" class="headerlink" title="磁盘的数据恢复"></a>磁盘的数据恢复</h1><hr><h3 id="起因："><a href="#起因：" class="headerlink" title="起因："></a>起因：</h3><p>服务器断电，没有正常关闭服务器导致，通过xshell连接发现无法正常连接至服务器，只能通过vmware管理进入控制台</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题:"></a>问题:</h3><p>linux系统无法启动提示<strong>give root password for maintenance</strong></p><p>系统重启停留在如下[<strong>Welcome to emergency mode</strong>]画面，提示输入root密码进入维护</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072319182.png"></p><p>进入紧急模式的原因：非法重启或硬盘故障或者错误编辑/etc/fstab文件等错误操作都会引起Linux系统无法启动，同时无法进入操作系统，这样就会出现“<strong>give root password for maintenance</strong>”的错误</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法:"></a>解决方法:</h3><h4 id="一、-fsck修复"><a href="#一、-fsck修复" class="headerlink" title="一、 fsck修复"></a><strong>一、</strong> fsck修复</h4><p>1、这时候输入服务器root用户的密码：</p><p>2、输入 <code>fsck -y</code></p><p>即开始修复文件系统。时间根据硬盘的大小，在1个小时－8个小时不等。</p><p>3、修复完成后输入<code>reboot</code>回车重启电脑即可。</p><h4 id="二、重新挂载"><a href="#二、重新挂载" class="headerlink" title="二、重新挂载"></a><strong>二、</strong>重新挂载</h4><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072320548.png"></p><p>重新挂载/目录，因为现在我们只有r读的权限，而没有w写的权限</p><p><code>#mount –o remount,rw /</code> 此处是重新挂载/，并给予rw读写的权限</p><p>对<code>vi /etc/fstab</code>进行修改</p><p><code>lsblk -f</code>(图一)</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072323893.png"></p><p><code>vi /etc/fstab</code> (图二)</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072322065.png"></p><p>进入到配置文件</p><p>拿图一和图二做对比,图一有的UUID就保存 没有的就在图二里面删注释掉 或删掉 如图</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072323389.png"></p><p>然后就是保存退出 最后就是重启</p><h4 id="三、e2fsck修复"><a href="#三、e2fsck修复" class="headerlink" title="三、e2fsck修复"></a>三、e2fsck修复</h4><p>1、 键入root密码，然后按”输入Enter”键；</p><p>2、此时画面便会出现以下指令提示：(Repair filesystem)1#;</p><p>3.、于提示后输入”<code>e2fsck -y /dev/</code>你的分区″，再按”键入(Enter)”，便可检查档案系统；</p><p>4、系统即会自动进行修复并于画面显示修复进度；</p><p>5、完成后键入”<strong>exit</strong>”，再按输入键，重新启动系统。</p><p>如果以上方法没用 使用下面步骤：</p><p>注释掉/etc/fstab内，有问题的挂载项，这里可以看出应该是/dev/data/data1分区表出了问题。注释掉reboot后可以看系统是否可以正常启动</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072324249.png"></p><h4 id="xfs-文件系统损坏修复-fscheck（补充，未使用到）"><a href="#xfs-文件系统损坏修复-fscheck（补充，未使用到）" class="headerlink" title="xfs 文件系统损坏修复 fscheck（补充，未使用到）"></a>xfs 文件系统损坏修复 fscheck（补充，未使用到）</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">需要先进行mount查找挂载路径，unmount将其卸载<span class="token number">1</span>、用xfs_repair /dev/data/data1          <span class="token comment">#进行修复 修复成功进入4，失败进入下一步</span><span class="token number">2</span>、执行xfs_repair -L /dev/data/data1     <span class="token comment">#进行修复 修复成功进入4，失败进入下一步</span><span class="token number">3</span>、文件彻底损坏，使用工具或找专员进行修复<span class="token number">4</span>、使用xfs_check /dev/data/data1          <span class="token comment">#查看修复是否成功 修复成功便可以挂载，失败进入2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="磁盘彻底损坏无法恢复"><a href="#磁盘彻底损坏无法恢复" class="headerlink" title="磁盘彻底损坏无法恢复"></a>磁盘彻底损坏无法恢复</h2><h3 id="数据恢复工具-Testdisk"><a href="#数据恢复工具-Testdisk" class="headerlink" title="数据恢复工具-Testdisk"></a>数据恢复工具-Testdisk</h3><ul><li><p>Testdisk</p><p>参考文档：</p><p><a href="https://www.cnblogs.com/zafu/p/11406525.html">testdisk修复磁盘文件</a></p><p><a href="https://blog.csdn.net/luckywang1103/article/details/80975164">开源工具TestDisk数据恢复方法_luckywang1103的博客-CSDN博客_testdisk</a></p><p>下载地址：<a href="https://www.cgsecurity.org/wiki/TestDisk_Download">https://www.cgsecurity.org/wiki/TestDisk_Download</a></p></li></ul><h4 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a>下载地址：</h4><p><a href="https://www.cgsecurity.org/wiki/TestDisk_Download">TestDisk Download</a></p><p><strong>Testdisk</strong> 是一个强大的免费的跨平台的数据恢复工具，根据它的<a href="https://www.cgsecurity.org/wiki/TestDisk">官网</a> 上的简介，这款软件主要被设计用于恢复丢失的分区以及修复那些由于人为或者病毒等原因导致分区表错误而无法启动系统的问题</p><blockquote><p>使用 TestDisk 的重点:</p></blockquote><blockquote><p>用 方向键 和 上一页/下一页 按键在TestDisk 中导航。</p></blockquote><blockquote><p>然后, 按Enter 键确认你的选择.</p></blockquote><blockquote><p>若要返回前一页或者退出TestDisk, 按 q (Quit) 键。</p></blockquote><blockquote><p>若要在 TestDisk 下保存修改,按 y (Yes) 或者 Enter 键来确认</p></blockquote><blockquote><p>如果确实要把分区信息写入主引导记录（MBR），应该选择 “Write” 选项并按 Enter 键。</p></blockquote><h4 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h4><p>下载后解压安装，使用脚本程序进入工具</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072327129.png"></p><h4 id="2、使用"><a href="#2、使用" class="headerlink" title="2、使用"></a>2、使用</h4><p>创建一个*.log文件存储运行TestDisk时的信息。（会在当前目录）</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072328370.png"></p><p>选择你要恢复数据的分区，也可以选择整个硬盘</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072328724.png"></p><p>选择分区的类型</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072328769.png"></p><p>选择”<strong>Analyse</strong>”选项</p><p>TestDisk对当前分区的结构进行分析，按回车键确认</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072329573.png"></p><h4 id="3、罗列分区结构"><a href="#3、罗列分区结构" class="headerlink" title="3、罗列分区结构"></a>3、罗列分区结构</h4><p>存在两个1，主分区指向同一个部分或者是不可用的分区表入口。存在1个可用的扩展分区，和一个丢失的逻辑分区。</p><p><code>P </code>代表主分区，<code>L </code>代表逻辑分区 <code>E </code>代表扩展分区 <code>D </code>表示已经删除的分区</p><p>![](/Users/j/Library/Application Support/typora-user-images/image-20220507232939381.png)</p><h4 id="4、磁盘分析"><a href="#4、磁盘分析" class="headerlink" title="4、磁盘分析"></a>4、磁盘分析</h4><p>按<strong>Quick Search</strong>磁盘分析 根据所选分区大小花费时间不一样</p><p>选择”<strong>Quick Search</strong>”进行下一步</p><p>这时请注意你按下的每一个键，很可能按错回到前面Quick Rearch 的界面，又需要等待漫长的数据分析过程。</p><p>按回车进行下一步</p><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072330368.png"></p><h4 id="5、等待分析结束"><a href="#5、等待分析结束" class="headerlink" title="5、等待分析结束"></a>5、等待分析结束</h4><p><img src="https://cdn.jsdelivr.net/gh/yushui1995/img/202205072330595.png"></p><p>找到你所要恢复数据的分区，按“<strong>P</strong>”进入文件列表，” <strong>:</strong> ”选择所要恢复的文件夹，”<strong>c</strong>”拷贝到自己的地址中，我是新加了一块盘，拷到了新加的盘中，u盘应该是”/media/udisk”,移动硬盘是”/run/media/disk”</p><p>当把你想要恢复的数据全部拷贝完之后，按”q”退出程序</p><p>最后，十分感谢<a href="https://zhangguanzhang.github.io/">张馆长</a>的帮助，磁盘才得以恢复</p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
